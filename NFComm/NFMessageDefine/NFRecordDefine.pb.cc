// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NFRecordDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NFRecordDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NFMsg {

namespace {

const ::google::protobuf::EnumDescriptor* BuildingList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BuildingProduce_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GroupMemberList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ChatList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GuildBoss_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GuildMemberList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GuildAppyList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GuildEvent_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GuildHouse_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GuildSkill_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PosList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PlayerViewItem_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Record_PlayerHero_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BagEquipList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BagItemList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CommPropertyValue_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EctypeList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DropItemList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SkillTable_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TaskMonsterList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TaskList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PVPList_RecordColType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ChatGroup_RecordColType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_NFRecordDefine_2eproto() {
  protobuf_AddDesc_NFRecordDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NFRecordDefine.proto");
  GOOGLE_CHECK(file != NULL);
  BuildingList_RecordColType_descriptor_ = file->enum_type(0);
  BuildingProduce_RecordColType_descriptor_ = file->enum_type(1);
  GroupMemberList_RecordColType_descriptor_ = file->enum_type(2);
  ChatList_RecordColType_descriptor_ = file->enum_type(3);
  GuildBoss_RecordColType_descriptor_ = file->enum_type(4);
  GuildMemberList_RecordColType_descriptor_ = file->enum_type(5);
  GuildAppyList_RecordColType_descriptor_ = file->enum_type(6);
  GuildEvent_RecordColType_descriptor_ = file->enum_type(7);
  GuildHouse_RecordColType_descriptor_ = file->enum_type(8);
  GuildSkill_RecordColType_descriptor_ = file->enum_type(9);
  PosList_RecordColType_descriptor_ = file->enum_type(10);
  PlayerViewItem_RecordColType_descriptor_ = file->enum_type(11);
  Record_PlayerHero_RecordColType_descriptor_ = file->enum_type(12);
  BagEquipList_RecordColType_descriptor_ = file->enum_type(13);
  BagItemList_RecordColType_descriptor_ = file->enum_type(14);
  CommPropertyValue_RecordColType_descriptor_ = file->enum_type(15);
  EctypeList_RecordColType_descriptor_ = file->enum_type(16);
  DropItemList_RecordColType_descriptor_ = file->enum_type(17);
  SkillTable_RecordColType_descriptor_ = file->enum_type(18);
  TaskMonsterList_RecordColType_descriptor_ = file->enum_type(19);
  TaskList_RecordColType_descriptor_ = file->enum_type(20);
  PVPList_RecordColType_descriptor_ = file->enum_type(21);
  ChatGroup_RecordColType_descriptor_ = file->enum_type(22);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NFRecordDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_NFRecordDefine_2eproto() {
}

void protobuf_AddDesc_NFRecordDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024NFRecordDefine.proto\022\005NFMsg*\365\001\n\032Buildi"
    "ngList_RecordColType\022\033\n\027BuildingList_Bui"
    "ldingID\020\000\022\035\n\031BuildingList_BuildingGUID\020\001"
    "\022\026\n\022BuildingList_State\020\002\022\025\n\021BuildingList"
    "_PosX\020\003\022\025\n\021BuildingList_PosY\020\004\022\025\n\021Buildi"
    "ngList_PosZ\020\005\022\037\n\033BuildingList_StateStart"
    "Time\020\006\022\035\n\031BuildingList_StateEndTime\020\007*\275\001"
    "\n\035BuildingProduce_RecordColType\022 \n\034Build"
    "ingProduce_BuildingGUID\020\000\022\032\n\026BuildingPro"
    "duce_ItemID\020\001\022\035\n\031BuildingProduce_LeftCou"
    "nt\020\002\022\034\n\030BuildingProduce_OnceTime\020\003\022!\n\035Bu"
    "ildingProduce_OnceStartTime\020\004*q\n\035GroupMe"
    "mberList_RecordColType\022\030\n\024GroupMemberLis"
    "t_GUID\020\000\022\032\n\026GroupMemberList_Online\020\001\022\032\n\026"
    "GroupMemberList_GameID\020\002*P\n\026ChatList_Rec"
    "ordColType\022\021\n\rChatList_GUID\020\000\022\020\n\014ChatLis"
    "t_msg\020\001\022\021\n\rChatList_time\020\002*\300\001\n\027GuildBoss"
    "_RecordColType\022\022\n\016GuildBoss_GUID\020\000\022\022\n\016Gu"
    "ildBoss_Name\020\001\022\023\n\017GuildBoss_Level\020\002\022\021\n\rG"
    "uildBoss_Job\020\003\022\026\n\022GuildBoss_Donation\020\004\022\021"
    "\n\rGuildBoss_VIP\020\005\022\025\n\021GuildBoss_Offline\020\006"
    "\022\023\n\017GuildBoss_Power\020\007*\256\003\n\035GuildMemberLis"
    "t_RecordColType\022\030\n\024GuildMemberList_GUID\020"
    "\000\022\030\n\024GuildMemberList_Name\020\001\022\031\n\025GuildMemb"
    "erList_Level\020\002\022\027\n\023GuildMemberList_Job\020\003\022"
    "\034\n\030GuildMemberList_Donation\020\004\022\033\n\027GuildMe"
    "mberList_Receive\020\005\022\027\n\023GuildMemberList_VI"
    "P\020\006\022\032\n\026GuildMemberList_Online\020\007\022\031\n\025Guild"
    "MemberList_Power\020\010\022\031\n\025GuildMemberList_Ti"
    "tle\020\t\022\032\n\026GuildMemberList_GameID\020\n\022\034\n\030Gui"
    "ldMemberList_JoinTime\020\013\022 \n\034GuildMemberLi"
    "st_Contribution\020\014\022#\n\037GuildMemberList_All"
    "Contribution\020\r*\311\001\n\033GuildAppyList_RecordC"
    "olType\022\026\n\022GuildAppyList_GUID\020\000\022\026\n\022GuildA"
    "ppyList_Name\020\001\022\027\n\023GuildAppyList_Level\020\002\022"
    "\025\n\021GuildAppyList_Job\020\003\022\032\n\026GuildAppyList_"
    "Donation\020\004\022\025\n\021GuildAppyList_VIP\020\005\022\027\n\023Gui"
    "ldAppyList_Power\020\006*\223\002\n\030GuildEvent_Record"
    "ColType\022\023\n\017GuildEvent_GUID\020\000\022\023\n\017GuildEve"
    "nt_Name\020\001\022\024\n\020GuildEvent_Level\020\002\022\022\n\016Guild"
    "Event_Job\020\003\022\027\n\023GuildEvent_Donation\020\004\022\022\n\016"
    "GuildEvent_VIP\020\005\022\026\n\022GuildEvent_Offline\020\006"
    "\022\024\n\020GuildEvent_Power\020\007\022\026\n\022GuildEvent_Eve"
    "ntID\020\010\022\030\n\024GuildEvent_EventTime\020\t\022\026\n\022Guil"
    "dEvent_Context\020\n*\311\001\n\030GuildHouse_RecordCo"
    "lType\022\023\n\017GuildHouse_GUID\020\000\022\023\n\017GuildHouse"
    "_Name\020\001\022\024\n\020GuildHouse_Level\020\002\022\022\n\016GuildHo"
    "use_Job\020\003\022\027\n\023GuildHouse_Donation\020\004\022\022\n\016Gu"
    "ildHouse_VIP\020\005\022\026\n\022GuildHouse_Offline\020\006\022\024"
    "\n\020GuildHouse_Power\020\007*\311\001\n\030GuildSkill_Reco"
    "rdColType\022\023\n\017GuildSkill_GUID\020\000\022\023\n\017GuildS"
    "kill_Name\020\001\022\024\n\020GuildSkill_Level\020\002\022\022\n\016Gui"
    "ldSkill_Job\020\003\022\027\n\023GuildSkill_Donation\020\004\022\022"
    "\n\016GuildSkill_VIP\020\005\022\026\n\022GuildSkill_Offline"
    "\020\006\022\024\n\020GuildSkill_Power\020\007*Z\n\025PosList_Reco"
    "rdColType\022\r\n\tPosList_X\020\000\022\r\n\tPosList_Y\020\001\022"
    "\r\n\tPosList_Z\020\002\022\024\n\020PosList_StayTime\020\003*\236\001\n"
    "\034PlayerViewItem_RecordColType\022\033\n\027PlayerV"
    "iewItem_ConfigID\020\000\022\037\n\033PlayerViewItem_Enh"
    "anceLevel\020\001\022\035\n\031PlayerViewItem_InlayStone"
    "\020\002\022!\n\035PlayerViewItem_SagecraftLevel\020\003*\311\002"
    "\n\037Record_PlayerHero_RecordColType\022\032\n\026Rec"
    "ord_PlayerHero_GUID\020\000\022\036\n\032Record_PlayerHe"
    "ro_ConfigID\020\001\022\033\n\027Record_PlayerHero_Level"
    "\020\002\022\031\n\025Record_PlayerHero_Exp\020\003\022\034\n\030Record_"
    "PlayerHero_Equip1\020\004\022\034\n\030Record_PlayerHero"
    "_Equip2\020\005\022\034\n\030Record_PlayerHero_Equip3\020\006\022"
    "\034\n\030Record_PlayerHero_Equip4\020\007\022\034\n\030Record_"
    "PlayerHero_Equip5\020\010\022\034\n\030Record_PlayerHero"
    "_Equip6\020\t*\202\007\n\032BagEquipList_RecordColType"
    "\022\025\n\021BagEquipList_GUID\020\000\022\031\n\025BagEquipList_"
    "WearGUID\020\001\022\031\n\025BagEquipList_ConfigID\020\002\022\026\n"
    "\022BagEquipList_Bound\020\003\022\034\n\030BagEquipList_Ex"
    "piredType\020\004\022\037\n\033BagEquipList_RandProperty"
    "ID\020\005\022\025\n\021BagEquipList_Date\020\006\022\032\n\026BagEquipL"
    "ist_SlotCount\020\007\022\034\n\030BagEquipList_InlaySto"
    "ne1\020\010\022\034\n\030BagEquipList_InlayStone2\020\t\022\034\n\030B"
    "agEquipList_InlayStone3\020\n\022\034\n\030BagEquipLis"
    "t_InlayStone4\020\013\022\034\n\030BagEquipList_InlaySto"
    "ne5\020\014\022\034\n\030BagEquipList_InlayStone6\020\r\022\034\n\030B"
    "agEquipList_InlayStone7\020\016\022\034\n\030BagEquipLis"
    "t_InlayStone8\020\017\022\034\n\030BagEquipList_InlaySto"
    "ne9\020\020\022\035\n\031BagEquipList_InlayStone10\020\021\022\037\n\033"
    "BagEquipList_IntensifyLevel\020\022\022\036\n\032BagEqui"
    "pList_ElementLevel1\020\023\022\036\n\032BagEquipList_El"
    "ementLevel2\020\024\022\036\n\032BagEquipList_ElementLev"
    "el3\020\025\022\036\n\032BagEquipList_ElementLevel4\020\026\022\036\n"
    "\032BagEquipList_ElementLevel5\020\027\022\036\n\032BagEqui"
    "pList_ElementLevel6\020\030\022\036\n\032BagEquipList_El"
    "ementLevel7\020\031\022\036\n\032BagEquipList_ElementLev"
    "el8\020\032\022\036\n\032BagEquipList_ElementLevel9\020\033\022\037\n"
    "\033BagEquipList_ElementLevel10\020\034*\232\001\n\031BagIt"
    "emList_RecordColType\022\030\n\024BagItemList_Conf"
    "igID\020\000\022\031\n\025BagItemList_ItemCount\020\001\022\025\n\021Bag"
    "ItemList_Bound\020\002\022\033\n\027BagItemList_ExpiredT"
    "ype\020\003\022\024\n\020BagItemList_Date\020\004*\253\006\n\037CommProp"
    "ertyValue_RecordColType\022\033\n\027CommPropertyV"
    "alue_MAXHP\020\000\022\033\n\027CommPropertyValue_MAXMP\020"
    "\001\022\033\n\027CommPropertyValue_MAXSP\020\002\022\035\n\031CommPr"
    "opertyValue_HPREGEN\020\003\022\035\n\031CommPropertyVal"
    "ue_SPREGEN\020\004\022\035\n\031CommPropertyValue_MPREGE"
    "N\020\005\022\037\n\033CommPropertyValue_ATK_VALUE\020\006\022\037\n\033"
    "CommPropertyValue_DEF_VALUE\020\007\022 \n\034CommPro"
    "pertyValue_MOVE_SPEED\020\010\022\037\n\033CommPropertyV"
    "alue_ATK_SPEED\020\t\022\036\n\032CommPropertyValue_AT"
    "K_FIRE\020\n\022\037\n\033CommPropertyValue_ATK_LIGHT\020"
    "\013\022\035\n\031CommPropertyValue_ATK_ICE\020\014\022 \n\034Comm"
    "PropertyValue_ATK_POISON\020\r\022\036\n\032CommProper"
    "tyValue_DEF_FIRE\020\016\022\037\n\033CommPropertyValue_"
    "DEF_LIGHT\020\017\022\035\n\031CommPropertyValue_DEF_ICE"
    "\020\020\022 \n\034CommPropertyValue_DEF_POISON\020\021\022 \n\034"
    "CommPropertyValue_DIZZY_GATE\020\022\022\037\n\033CommPr"
    "opertyValue_MOVE_GATE\020\023\022 \n\034CommPropertyV"
    "alue_SKILL_GATE\020\024\022#\n\037CommPropertyValue_P"
    "HYSICAL_GATE\020\025\022 \n\034CommPropertyValue_MAGI"
    "C_GATE\020\026\022\037\n\033CommPropertyValue_BUFF_GATE\020"
    "\027*_\n\030EctypeList_RecordColType\022\027\n\023EctypeL"
    "ist_EctypeID\020\000\022\025\n\021EctypeList_IsPass\020\001\022\023\n"
    "\017EctypeList_Star\020\002*\211\001\n\032DropItemList_Reco"
    "rdColType\022\032\n\026DropItemList_MonsterID\020\000\022\027\n"
    "\023DropItemList_ItemID\020\001\022\032\n\026DropItemList_I"
    "temCount\020\002\022\032\n\026DropItemList_DrawState\020\003*\207"
    "\001\n\030SkillTable_RecordColType\022\026\n\022SkillTabl"
    "e_SkillID\020\000\022\031\n\025SkillTable_SkillLevel\020\001\022\031"
    "\n\025SkillTable_SkillStone\020\002\022\035\n\031SkillTable_"
    "SkillSoulLevel\020\003*\246\001\n\035TaskMonsterList_Rec"
    "ordColType\022\035\n\031TaskMonsterList_MonsterID\020"
    "\000\022$\n TaskMonsterList_CurrentKillCount\020\001\022"
    "$\n TaskMonsterList_RequireKillCount\020\002\022\032\n"
    "\026TaskMonsterList_TaskID\020\003*\\\n\026TaskList_Re"
    "cordColType\022\023\n\017TaskList_TaskID\020\000\022\027\n\023Task"
    "List_TaskStatus\020\001\022\024\n\020TaskList_Process\020\002*"
    "L\n\025PVPList_RecordColType\022\016\n\nPVPList_ID\020\000"
    "\022\020\n\014PVPList_Name\020\001\022\021\n\rPVPList_Level\020\002*J\n"
    "\027ChatGroup_RecordColType\022\026\n\022ChatGroup_Ch"
    "atType\020\000\022\027\n\023ChatGroup_GroupGUID\020\001", 5433);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NFRecordDefine.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NFRecordDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NFRecordDefine_2eproto {
  StaticDescriptorInitializer_NFRecordDefine_2eproto() {
    protobuf_AddDesc_NFRecordDefine_2eproto();
  }
} static_descriptor_initializer_NFRecordDefine_2eproto_;
const ::google::protobuf::EnumDescriptor* BuildingList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildingList_RecordColType_descriptor_;
}
bool BuildingList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BuildingProduce_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildingProduce_RecordColType_descriptor_;
}
bool BuildingProduce_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupMemberList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GroupMemberList_RecordColType_descriptor_;
}
bool GroupMemberList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChatList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatList_RecordColType_descriptor_;
}
bool ChatList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GuildBoss_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildBoss_RecordColType_descriptor_;
}
bool GuildBoss_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GuildMemberList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildMemberList_RecordColType_descriptor_;
}
bool GuildMemberList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GuildAppyList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildAppyList_RecordColType_descriptor_;
}
bool GuildAppyList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GuildEvent_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildEvent_RecordColType_descriptor_;
}
bool GuildEvent_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GuildHouse_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildHouse_RecordColType_descriptor_;
}
bool GuildHouse_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GuildSkill_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildSkill_RecordColType_descriptor_;
}
bool GuildSkill_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PosList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PosList_RecordColType_descriptor_;
}
bool PosList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerViewItem_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerViewItem_RecordColType_descriptor_;
}
bool PlayerViewItem_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Record_PlayerHero_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Record_PlayerHero_RecordColType_descriptor_;
}
bool Record_PlayerHero_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BagEquipList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagEquipList_RecordColType_descriptor_;
}
bool BagEquipList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BagItemList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagItemList_RecordColType_descriptor_;
}
bool BagItemList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CommPropertyValue_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommPropertyValue_RecordColType_descriptor_;
}
bool CommPropertyValue_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EctypeList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EctypeList_RecordColType_descriptor_;
}
bool EctypeList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DropItemList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropItemList_RecordColType_descriptor_;
}
bool DropItemList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SkillTable_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillTable_RecordColType_descriptor_;
}
bool SkillTable_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TaskMonsterList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskMonsterList_RecordColType_descriptor_;
}
bool TaskMonsterList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TaskList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskList_RecordColType_descriptor_;
}
bool TaskList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PVPList_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PVPList_RecordColType_descriptor_;
}
bool PVPList_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChatGroup_RecordColType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatGroup_RecordColType_descriptor_;
}
bool ChatGroup_RecordColType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)
