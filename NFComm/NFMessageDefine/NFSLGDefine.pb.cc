// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NFSLGDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NFSLGDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NFMsg {

namespace {

const ::google::protobuf::Descriptor* ReqAckBuyObjectFormShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqAckBuyObjectFormShop_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqAckMoveBuildObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqAckMoveBuildObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqUpBuildLv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqUpBuildLv_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqCreateItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqCreateItem_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ESLGBuildingType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ESLGBuildingSubType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ESLGArmyType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ESLGFuncType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ESLGBuildingState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_NFSLGDefine_2eproto() {
  protobuf_AddDesc_NFSLGDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NFSLGDefine.proto");
  GOOGLE_CHECK(file != NULL);
  ReqAckBuyObjectFormShop_descriptor_ = file->message_type(0);
  static const int ReqAckBuyObjectFormShop_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckBuyObjectFormShop, config_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckBuyObjectFormShop, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckBuyObjectFormShop, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckBuyObjectFormShop, z_),
  };
  ReqAckBuyObjectFormShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqAckBuyObjectFormShop_descriptor_,
      ReqAckBuyObjectFormShop::default_instance_,
      ReqAckBuyObjectFormShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckBuyObjectFormShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckBuyObjectFormShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqAckBuyObjectFormShop));
  ReqAckMoveBuildObject_descriptor_ = file->message_type(1);
  static const int ReqAckMoveBuildObject_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, object_guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, z_),
  };
  ReqAckMoveBuildObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqAckMoveBuildObject_descriptor_,
      ReqAckMoveBuildObject::default_instance_,
      ReqAckMoveBuildObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAckMoveBuildObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqAckMoveBuildObject));
  ReqUpBuildLv_descriptor_ = file->message_type(2);
  static const int ReqUpBuildLv_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqUpBuildLv, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqUpBuildLv, object_guid_),
  };
  ReqUpBuildLv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqUpBuildLv_descriptor_,
      ReqUpBuildLv::default_instance_,
      ReqUpBuildLv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqUpBuildLv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqUpBuildLv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqUpBuildLv));
  ReqCreateItem_descriptor_ = file->message_type(3);
  static const int ReqCreateItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateItem, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateItem, object_guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateItem, config_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateItem, count_),
  };
  ReqCreateItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqCreateItem_descriptor_,
      ReqCreateItem::default_instance_,
      ReqCreateItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqCreateItem));
  ESLGBuildingType_descriptor_ = file->enum_type(0);
  ESLGBuildingSubType_descriptor_ = file->enum_type(1);
  ESLGArmyType_descriptor_ = file->enum_type(2);
  ESLGFuncType_descriptor_ = file->enum_type(3);
  ESLGBuildingState_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NFSLGDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqAckBuyObjectFormShop_descriptor_, &ReqAckBuyObjectFormShop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqAckMoveBuildObject_descriptor_, &ReqAckMoveBuildObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqUpBuildLv_descriptor_, &ReqUpBuildLv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqCreateItem_descriptor_, &ReqCreateItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_NFSLGDefine_2eproto() {
  delete ReqAckBuyObjectFormShop::default_instance_;
  delete ReqAckBuyObjectFormShop_reflection_;
  delete ReqAckMoveBuildObject::default_instance_;
  delete ReqAckMoveBuildObject_reflection_;
  delete ReqUpBuildLv::default_instance_;
  delete ReqUpBuildLv_reflection_;
  delete ReqCreateItem::default_instance_;
  delete ReqCreateItem_reflection_;
}

void protobuf_AddDesc_NFSLGDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::NFMsg::protobuf_AddDesc_NFMsgBase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021NFSLGDefine.proto\022\005NFMsg\032\017NFMsgBase.pr"
    "oto\"M\n\027ReqAckBuyObjectFormShop\022\021\n\tconfig"
    "_id\030\001 \002(\t\022\t\n\001x\030\002 \002(\002\022\t\n\001y\030\003 \002(\002\022\t\n\001z\030\004 \002"
    "(\002\"h\n\025ReqAckMoveBuildObject\022\013\n\003row\030\001 \001(\005"
    "\022!\n\013object_guid\030\002 \002(\0132\014.NFMsg.Ident\022\t\n\001x"
    "\030\003 \002(\002\022\t\n\001y\030\004 \002(\002\022\t\n\001z\030\005 \002(\002\">\n\014ReqUpBui"
    "ldLv\022\013\n\003row\030\001 \001(\005\022!\n\013object_guid\030\002 \002(\0132\014"
    ".NFMsg.Ident\"a\n\rReqCreateItem\022\013\n\003row\030\001 \001"
    "(\005\022!\n\013object_guid\030\002 \002(\0132\014.NFMsg.Ident\022\021\n"
    "\tconfig_id\030\003 \002(\t\022\r\n\005count\030\004 \002(\005*\201\001\n\020ESLG"
    "BuildingType\022\014\n\010EBT_BASE\020\000\022\017\n\013EBT_DEFENS"
    "E\020\001\022\014\n\010EBT_ARMY\020\002\022\020\n\014EBT_RESOURCE\020\003\022\r\n\tE"
    "BT_GUILD\020\004\022\016\n\nEBT_TEMPLE\020\005\022\017\n\013EBT_NUCLEA"
    "R\020\006*\200\010\n\023ESLGBuildingSubType\022\r\n\tEBST_HALL"
    "\020\000\022\021\n\rEBST_MASHROOM\020F\022\r\n\tEBST_BUSH\020G\022\021\n\r"
    "EBST_BRANCH_1\020H\022\021\n\rEBST_BRANCH_2\020I\022\021\n\rEB"
    "ST_BRANCH_3\020J\022\017\n\013EBST_TREE_1\020K\022\017\n\013EBST_T"
    "REE_2\020L\022\017\n\013EBST_TREE_3\020M\022\020\n\014EBST_STONE_1"
    "\020N\022\020\n\014EBST_STONE_2\020O\022\020\n\014EBST_STONE_3\020P\022\r"
    "\n\tEBST_TOMB\020Q\022\022\n\016EBST_DARK_TOMB\020R\022\016\n\nEBS"
    "T_PYXIS\020S\022\016\n\nEBST_TORCH\020T\022\024\n\020EBST__WHITE"
    "_FLAG\020U\022\017\n\013EBST_CANNON\020e\022\017\n\013EBST_MORTAR\020"
    "f\022\025\n\021EBST_ARCHER_TOWER\020g\022\025\n\021EBST_WIZARD_"
    "TOWER\020h\022\022\n\016EBST_AIR_TOWER\020i\022\024\n\020EBST_TESL"
    "A_TOWER\020j\022\r\n\tEBST_WALL\020k\022\016\n\nEBST_X_BOW\020l"
    "\022\r\n\tEBST_BOMB\020m\022\021\n\rEBST_AIR_BOMB\020n\022\024\n\020EB"
    "ST_SPRING_TRAP\020o\022\023\n\017EBST_HELL_TOWER\020p\022\016\n"
    "\tEBST_CAMP\020\310\001\022\021\n\014EBST_BARRACK\020\311\001\022\025\n\020EBST"
    "_TEC_FACTORY\020\312\001\022\026\n\021EBST_DARK_BARRACK\020\313\001\022"
    "\026\n\021EBST_DRUG_FACTORY\020\314\001\022\024\n\017EBST_KING_ALT"
    "AR\020\315\001\022\025\n\020EBST_QUEEN_ALTAR\020\316\001\022\030\n\023EBST_GOL"
    "D_COLLECTOR\020\254\002\022\026\n\021EBST_GOLD_STORAGE\020\255\002\022\031"
    "\n\024EBST_STONE_COLLECTOR\020\256\002\022\027\n\022EBST_STONE_"
    "STORAGE\020\257\002\022\031\n\024EBST_STEEL_COLLECTOR\020\260\002\022\027\n"
    "\022EBST_STEEL_STORAGE\020\261\002\022\033\n\026EBST_DIAMOND_C"
    "OLLECTOR\020\262\002\022\031\n\024EBST_DIAMOND_STORAGE\020\263\002\022\r"
    "\n\010EBST_HUT\020\264\002\022\026\n\021EBST_GUILD_CASTLE\020\220\003\022\025\n"
    "\020EBST_GUILD_CRYPT\020\221\003\022\025\n\020EBST_ELEMENT_LAB"
    "\020\364\003\022\031\n\024EBST_NUCLEAR_FACTORY\020\330\004*\370\001\n\014ESLGA"
    "rmyType\022\017\n\013EAT_FOOTMAN\020\000\022\016\n\nEAT_ARCHER\020\001"
    "\022\016\n\nEAT_GOBLIN\020\002\022\r\n\tEAT_GIANT\020\003\022\024\n\020EAT_W"
    "ALL_BREAKER\020\004\022\017\n\013EAT_BALLOON\020\005\022\016\n\nEAT_HE"
    "ALER\020\006\022\016\n\nEAT_WIZARD\020\007\022\016\n\nEAT_DRAGON\020\010\022\r"
    "\n\tEAT_PEKKA\020\t\022\016\n\nEAT_MINION\020\024\022\021\n\rEAT_HOG"
    "_RIDER\020\025\022\020\n\014EAT_VALKYRIE\020\026\022\r\n\tEAT_GOLEM\020"
    "\027*\225\002\n\014ESLGFuncType\022\014\n\010EFT_INFO\020\000\022\016\n\nEFT_"
    "BOOOST\020\001\022\r\n\tEFT_LVLUP\020\002\022\025\n\021EFT_CREATE_SO"
    "LDER\020\003\022\024\n\020EFT_CREATE_SPEEL\020\004\022\020\n\014EFT_RESE"
    "ARCH\020\005\022\024\n\020EFT_COLLECT_GOLD\020\006\022\025\n\021EFT_COLL"
    "ECT_STONE\020\007\022\025\n\021EFT_COLLECT_STEEL\020\010\022\027\n\023EF"
    "T_COLLECT_DIAMOND\020\t\022\014\n\010EFT_SELL\020\n\022\016\n\nEFT"
    "_REPAIR\020\013\022\016\n\nEFT_CANCEL\020\014\022\016\n\nEFT_FINISH\020"
    "\r*A\n\021ESLGBuildingState\022\014\n\010EBS_IDLE\020\000\022\r\n\t"
    "EBS_BOOST\020\001\022\017\n\013EBS_UPGRADE\020\002", 2148);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NFSLGDefine.proto", &protobuf_RegisterTypes);
  ReqAckBuyObjectFormShop::default_instance_ = new ReqAckBuyObjectFormShop();
  ReqAckMoveBuildObject::default_instance_ = new ReqAckMoveBuildObject();
  ReqUpBuildLv::default_instance_ = new ReqUpBuildLv();
  ReqCreateItem::default_instance_ = new ReqCreateItem();
  ReqAckBuyObjectFormShop::default_instance_->InitAsDefaultInstance();
  ReqAckMoveBuildObject::default_instance_->InitAsDefaultInstance();
  ReqUpBuildLv::default_instance_->InitAsDefaultInstance();
  ReqCreateItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NFSLGDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NFSLGDefine_2eproto {
  StaticDescriptorInitializer_NFSLGDefine_2eproto() {
    protobuf_AddDesc_NFSLGDefine_2eproto();
  }
} static_descriptor_initializer_NFSLGDefine_2eproto_;
const ::google::protobuf::EnumDescriptor* ESLGBuildingType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESLGBuildingType_descriptor_;
}
bool ESLGBuildingType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESLGBuildingSubType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESLGBuildingSubType_descriptor_;
}
bool ESLGBuildingSubType_IsValid(int value) {
  switch(value) {
    case 0:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 400:
    case 401:
    case 500:
    case 600:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESLGArmyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESLGArmyType_descriptor_;
}
bool ESLGArmyType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESLGFuncType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESLGFuncType_descriptor_;
}
bool ESLGFuncType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESLGBuildingState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESLGBuildingState_descriptor_;
}
bool ESLGBuildingState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ReqAckBuyObjectFormShop::kConfigIdFieldNumber;
const int ReqAckBuyObjectFormShop::kXFieldNumber;
const int ReqAckBuyObjectFormShop::kYFieldNumber;
const int ReqAckBuyObjectFormShop::kZFieldNumber;
#endif  // !_MSC_VER

ReqAckBuyObjectFormShop::ReqAckBuyObjectFormShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqAckBuyObjectFormShop::InitAsDefaultInstance() {
}

ReqAckBuyObjectFormShop::ReqAckBuyObjectFormShop(const ReqAckBuyObjectFormShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqAckBuyObjectFormShop::SharedCtor() {
  _cached_size_ = 0;
  config_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqAckBuyObjectFormShop::~ReqAckBuyObjectFormShop() {
  SharedDtor();
}

void ReqAckBuyObjectFormShop::SharedDtor() {
  if (config_id_ != &::google::protobuf::internal::kEmptyString) {
    delete config_id_;
  }
  if (this != default_instance_) {
  }
}

void ReqAckBuyObjectFormShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqAckBuyObjectFormShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqAckBuyObjectFormShop_descriptor_;
}

const ReqAckBuyObjectFormShop& ReqAckBuyObjectFormShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFSLGDefine_2eproto();
  return *default_instance_;
}

ReqAckBuyObjectFormShop* ReqAckBuyObjectFormShop::default_instance_ = NULL;

ReqAckBuyObjectFormShop* ReqAckBuyObjectFormShop::New() const {
  return new ReqAckBuyObjectFormShop;
}

void ReqAckBuyObjectFormShop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_config_id()) {
      if (config_id_ != &::google::protobuf::internal::kEmptyString) {
        config_id_->clear();
      }
    }
    x_ = 0;
    y_ = 0;
    z_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqAckBuyObjectFormShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string config_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->config_id().data(), this->config_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // required float x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // required float y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_z;
        break;
      }

      // required float z = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqAckBuyObjectFormShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string config_id = 1;
  if (has_config_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->config_id().data(), this->config_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->config_id(), output);
  }

  // required float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float z = 4;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqAckBuyObjectFormShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string config_id = 1;
  if (has_config_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->config_id().data(), this->config_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->config_id(), target);
  }

  // required float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float z = 4;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqAckBuyObjectFormShop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string config_id = 1;
    if (has_config_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->config_id());
    }

    // required float x = 2;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // required float y = 3;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // required float z = 4;
    if (has_z()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqAckBuyObjectFormShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqAckBuyObjectFormShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqAckBuyObjectFormShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqAckBuyObjectFormShop::MergeFrom(const ReqAckBuyObjectFormShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_config_id()) {
      set_config_id(from.config_id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqAckBuyObjectFormShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAckBuyObjectFormShop::CopyFrom(const ReqAckBuyObjectFormShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAckBuyObjectFormShop::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ReqAckBuyObjectFormShop::Swap(ReqAckBuyObjectFormShop* other) {
  if (other != this) {
    std::swap(config_id_, other->config_id_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqAckBuyObjectFormShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqAckBuyObjectFormShop_descriptor_;
  metadata.reflection = ReqAckBuyObjectFormShop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqAckMoveBuildObject::kRowFieldNumber;
const int ReqAckMoveBuildObject::kObjectGuidFieldNumber;
const int ReqAckMoveBuildObject::kXFieldNumber;
const int ReqAckMoveBuildObject::kYFieldNumber;
const int ReqAckMoveBuildObject::kZFieldNumber;
#endif  // !_MSC_VER

ReqAckMoveBuildObject::ReqAckMoveBuildObject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqAckMoveBuildObject::InitAsDefaultInstance() {
  object_guid_ = const_cast< ::NFMsg::Ident*>(&::NFMsg::Ident::default_instance());
}

ReqAckMoveBuildObject::ReqAckMoveBuildObject(const ReqAckMoveBuildObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqAckMoveBuildObject::SharedCtor() {
  _cached_size_ = 0;
  row_ = 0;
  object_guid_ = NULL;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqAckMoveBuildObject::~ReqAckMoveBuildObject() {
  SharedDtor();
}

void ReqAckMoveBuildObject::SharedDtor() {
  if (this != default_instance_) {
    delete object_guid_;
  }
}

void ReqAckMoveBuildObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqAckMoveBuildObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqAckMoveBuildObject_descriptor_;
}

const ReqAckMoveBuildObject& ReqAckMoveBuildObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFSLGDefine_2eproto();
  return *default_instance_;
}

ReqAckMoveBuildObject* ReqAckMoveBuildObject::default_instance_ = NULL;

ReqAckMoveBuildObject* ReqAckMoveBuildObject::New() const {
  return new ReqAckMoveBuildObject;
}

void ReqAckMoveBuildObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    row_ = 0;
    if (has_object_guid()) {
      if (object_guid_ != NULL) object_guid_->::NFMsg::Ident::Clear();
    }
    x_ = 0;
    y_ = 0;
    z_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqAckMoveBuildObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 row = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
          set_has_row();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_object_guid;
        break;
      }

      // required .NFMsg.Ident object_guid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_guid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_x;
        break;
      }

      // required float x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_y;
        break;
      }

      // required float y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_z;
        break;
      }

      // required float z = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqAckMoveBuildObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 row = 1;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // required .NFMsg.Ident object_guid = 2;
  if (has_object_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->object_guid(), output);
  }

  // required float x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // required float y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  // required float z = 5;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqAckMoveBuildObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 row = 1;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // required .NFMsg.Ident object_guid = 2;
  if (has_object_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->object_guid(), target);
  }

  // required float x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // required float y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  // required float z = 5;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqAckMoveBuildObject::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 row = 1;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->row());
    }

    // required .NFMsg.Ident object_guid = 2;
    if (has_object_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_guid());
    }

    // required float x = 3;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // required float y = 4;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // required float z = 5;
    if (has_z()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqAckMoveBuildObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqAckMoveBuildObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqAckMoveBuildObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqAckMoveBuildObject::MergeFrom(const ReqAckMoveBuildObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_row()) {
      set_row(from.row());
    }
    if (from.has_object_guid()) {
      mutable_object_guid()->::NFMsg::Ident::MergeFrom(from.object_guid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqAckMoveBuildObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAckMoveBuildObject::CopyFrom(const ReqAckMoveBuildObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAckMoveBuildObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;

  if (has_object_guid()) {
    if (!this->object_guid().IsInitialized()) return false;
  }
  return true;
}

void ReqAckMoveBuildObject::Swap(ReqAckMoveBuildObject* other) {
  if (other != this) {
    std::swap(row_, other->row_);
    std::swap(object_guid_, other->object_guid_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqAckMoveBuildObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqAckMoveBuildObject_descriptor_;
  metadata.reflection = ReqAckMoveBuildObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqUpBuildLv::kRowFieldNumber;
const int ReqUpBuildLv::kObjectGuidFieldNumber;
#endif  // !_MSC_VER

ReqUpBuildLv::ReqUpBuildLv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqUpBuildLv::InitAsDefaultInstance() {
  object_guid_ = const_cast< ::NFMsg::Ident*>(&::NFMsg::Ident::default_instance());
}

ReqUpBuildLv::ReqUpBuildLv(const ReqUpBuildLv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqUpBuildLv::SharedCtor() {
  _cached_size_ = 0;
  row_ = 0;
  object_guid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqUpBuildLv::~ReqUpBuildLv() {
  SharedDtor();
}

void ReqUpBuildLv::SharedDtor() {
  if (this != default_instance_) {
    delete object_guid_;
  }
}

void ReqUpBuildLv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqUpBuildLv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqUpBuildLv_descriptor_;
}

const ReqUpBuildLv& ReqUpBuildLv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFSLGDefine_2eproto();
  return *default_instance_;
}

ReqUpBuildLv* ReqUpBuildLv::default_instance_ = NULL;

ReqUpBuildLv* ReqUpBuildLv::New() const {
  return new ReqUpBuildLv;
}

void ReqUpBuildLv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    row_ = 0;
    if (has_object_guid()) {
      if (object_guid_ != NULL) object_guid_->::NFMsg::Ident::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqUpBuildLv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 row = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
          set_has_row();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_object_guid;
        break;
      }

      // required .NFMsg.Ident object_guid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_guid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqUpBuildLv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 row = 1;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // required .NFMsg.Ident object_guid = 2;
  if (has_object_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->object_guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqUpBuildLv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 row = 1;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // required .NFMsg.Ident object_guid = 2;
  if (has_object_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->object_guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqUpBuildLv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 row = 1;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->row());
    }

    // required .NFMsg.Ident object_guid = 2;
    if (has_object_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqUpBuildLv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqUpBuildLv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqUpBuildLv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqUpBuildLv::MergeFrom(const ReqUpBuildLv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_row()) {
      set_row(from.row());
    }
    if (from.has_object_guid()) {
      mutable_object_guid()->::NFMsg::Ident::MergeFrom(from.object_guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqUpBuildLv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqUpBuildLv::CopyFrom(const ReqUpBuildLv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqUpBuildLv::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_object_guid()) {
    if (!this->object_guid().IsInitialized()) return false;
  }
  return true;
}

void ReqUpBuildLv::Swap(ReqUpBuildLv* other) {
  if (other != this) {
    std::swap(row_, other->row_);
    std::swap(object_guid_, other->object_guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqUpBuildLv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqUpBuildLv_descriptor_;
  metadata.reflection = ReqUpBuildLv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqCreateItem::kRowFieldNumber;
const int ReqCreateItem::kObjectGuidFieldNumber;
const int ReqCreateItem::kConfigIdFieldNumber;
const int ReqCreateItem::kCountFieldNumber;
#endif  // !_MSC_VER

ReqCreateItem::ReqCreateItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqCreateItem::InitAsDefaultInstance() {
  object_guid_ = const_cast< ::NFMsg::Ident*>(&::NFMsg::Ident::default_instance());
}

ReqCreateItem::ReqCreateItem(const ReqCreateItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqCreateItem::SharedCtor() {
  _cached_size_ = 0;
  row_ = 0;
  object_guid_ = NULL;
  config_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqCreateItem::~ReqCreateItem() {
  SharedDtor();
}

void ReqCreateItem::SharedDtor() {
  if (config_id_ != &::google::protobuf::internal::kEmptyString) {
    delete config_id_;
  }
  if (this != default_instance_) {
    delete object_guid_;
  }
}

void ReqCreateItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqCreateItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqCreateItem_descriptor_;
}

const ReqCreateItem& ReqCreateItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFSLGDefine_2eproto();
  return *default_instance_;
}

ReqCreateItem* ReqCreateItem::default_instance_ = NULL;

ReqCreateItem* ReqCreateItem::New() const {
  return new ReqCreateItem;
}

void ReqCreateItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    row_ = 0;
    if (has_object_guid()) {
      if (object_guid_ != NULL) object_guid_->::NFMsg::Ident::Clear();
    }
    if (has_config_id()) {
      if (config_id_ != &::google::protobuf::internal::kEmptyString) {
        config_id_->clear();
      }
    }
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqCreateItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 row = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
          set_has_row();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_object_guid;
        break;
      }

      // required .NFMsg.Ident object_guid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_guid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_config_id;
        break;
      }

      // required string config_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_config_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->config_id().data(), this->config_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // required int32 count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqCreateItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 row = 1;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // required .NFMsg.Ident object_guid = 2;
  if (has_object_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->object_guid(), output);
  }

  // required string config_id = 3;
  if (has_config_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->config_id().data(), this->config_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->config_id(), output);
  }

  // required int32 count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqCreateItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 row = 1;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // required .NFMsg.Ident object_guid = 2;
  if (has_object_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->object_guid(), target);
  }

  // required string config_id = 3;
  if (has_config_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->config_id().data(), this->config_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->config_id(), target);
  }

  // required int32 count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqCreateItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 row = 1;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->row());
    }

    // required .NFMsg.Ident object_guid = 2;
    if (has_object_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_guid());
    }

    // required string config_id = 3;
    if (has_config_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->config_id());
    }

    // required int32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqCreateItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqCreateItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqCreateItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqCreateItem::MergeFrom(const ReqCreateItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_row()) {
      set_row(from.row());
    }
    if (from.has_object_guid()) {
      mutable_object_guid()->::NFMsg::Ident::MergeFrom(from.object_guid());
    }
    if (from.has_config_id()) {
      set_config_id(from.config_id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqCreateItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCreateItem::CopyFrom(const ReqCreateItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreateItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_object_guid()) {
    if (!this->object_guid().IsInitialized()) return false;
  }
  return true;
}

void ReqCreateItem::Swap(ReqCreateItem* other) {
  if (other != this) {
    std::swap(row_, other->row_);
    std::swap(object_guid_, other->object_guid_);
    std::swap(config_id_, other->config_id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqCreateItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqCreateItem_descriptor_;
  metadata.reflection = ReqCreateItem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)
