package NFMsg; 

import "NFDefine.proto";
import "NFMsgBase.proto";
import "NFMsgBaseEx.proto";


//除 去基础对象身上的属性外，这里全部游戏中的逻辑协议

message ReqEnterGameServer
{
	required bytes 		account = 1;
    required int32 		game_id = 2;
	required bytes 		name = 3;
}

message ReqHeartBeat
{
}

message ReqLeaveGameServer
{
}

message ReqAckPlayerMove
{
	optional int64 	mover = 1;
	required int32  moveType = 2;
	required float	target_x = 3;
	optional float	target_y = 4;
	required float	target_z = 5;
	optional float	source_x = 6;
	optional float	source_y = 7;
	optional float	source_z = 8;
}

message ReqAckPlayerChat
{
	enum EGameChatType
	{
		EGCT_NARMAL = 0;
		EGCT_PRIVATE = 1;
		EGCT_TEAM = 2;
		EGCT_WORLD = 3;
	}
	required int64	chat_id = 1;
	required EGameChatType  chat_type = 2;
	required bytes chat_info = 3;
}

message ReqAckUseSkill
{
	required bytes skill_id = 1;
	repeated int64 	effect_ident = 2;
	repeated int32  effect_value = 3;
	repeated int32  effect_rlt = 4;
	optional bytes key_value = 5;
}

message ReqAckUseItem
{
	required int64 item_guid	= 1;
	repeated int64 effect_ident = 2;
	repeated int32 effect_value = 3;
	repeated int32 effect_rlt = 4;
	optional bytes key_value = 5;
}

message ReqAckSwapScene
{
	enum EGameSwapType
	{
		EGST_NARMAL = 0;//普通城镇传送
		EGST_CLONE = 1;//普通副本
		EGST_ARENA = 2;//竞技场
		EGST_MIRROR = 3;//镜像空间
	}

    required EGameSwapType		transfer_type = 1;
	required int32		scene_id = 2;
	required int32		line_id = 3;
	optional float 		x = 4;
	optional float 		y = 5;
	optional float 		z = 6;
}


message ReqPickDropItem//拾取物品
{
	required int64 item_guid = 2;
}

message ReqAcceptTask//接受任务
{
	required bytes task_id = 1;
}

message ReqCompeleteTask//完成任务后申请领奖
{
	required bytes task_id = 1;
}


////////////////////////////////////////////////////////////////////////////////////////////////////

message PlayerEntryInfo//对象出现基本信息
{
	required int64	object_guid = 1;
	required float	x = 2;
	required float	y = 3;
	required float	z = 4;
	required int32	career_type = 5;
	required int32	player_state = 6;
	required bytes  config_id = 7;
	required int32  scene_id = 8;
}

message AckPlayerEntryList//对象出现列表
{
	repeated PlayerEntryInfo object_list = 1;
}

message AckPlayerLeaveList//对象离去列表
{
	repeated int64 	object_list = 1;
}