syntax = "proto3";

package NFMsg;

//events
enum EGameEventCode
{
	SUCCESS									= 0;        //
	UNKOWN_ERROR							= 1;		//
	ACCOUNT_EXIST							= 2;        //
	ACCOUNTPWD_INVALID						= 3;        //
	ACCOUNT_USING							= 4;        //
	ACCOUNT_LOCKED							= 5;        //
	ACCOUNT_SUCCESS							= 6;        //
	VERIFY_KEY_SUCCESS						= 7;        //
	VERIFY_KEY_FAIL							= 8;        //
	SELECTSERVER_SUCCESS					= 9;        //
	SELECTSERVER_FAIL						= 10;       //
	

	CHARACTER_EXIST							= 110;       //
	SVRZONEID_INVALID						= 111;       //
	CHARACTER_NUMOUT						= 112;       //
	CHARACTER_INVALID						= 113;       //
	CHARACTER_NOTEXIST						= 114;       //
	CHARACTER_USING							= 115;       //
	CHARACTER_LOCKED						= 116;       //
	ZONE_OVERLOAD							= 117;       //
	NOT_ONLINE								= 118;       //
}

enum EGameMsgID
{
	UNKNOW									= 0;         //
	EVENT_RESULT							= 1;         // for events
	EVENT_TRANSPORT							= 2;         // for events
	CLOSE_SOCKET							= 3;         // want to close some one

	WTM_WORLD_REGISTERED					= 10;
	WTM_WORLD_UNREGISTERED					= 11;
	WTM_WORLD_REFRESH						= 12;

	LTM_LOGIN_REGISTERED					= 20;
	LTM_LOGIN_UNREGISTERED					= 21;
	LTM_LOGIN_REFRESH						= 22;

	PTWG_PROXY_REGISTERED					= 30;
	PTWG_PROXY_UNREGISTERED					= 31;
	PTWG_PROXY_REFRESH						= 32;

	GTW_GAME_REGISTERED						= 40;
	GTW_GAME_UNREGISTERED					= 41;
	GTW_GAME_REFRESH						= 42;

	
	DTW_DB_REGISTERED						= 60;
	DTW_DB_UNREGISTERED						= 61;
	DTW_DB_REFRESH							= 62;

	STS_NET_INFO							= 70;
	
	REQ_LAG_TEST							= 80;
	ACK_GATE_LAG_TEST						= 81;
	ACK_GAME_LAG_TEST						= 82;
	
	STS_SERVER_REPORT						= 90;
	STS_HEART_BEAT							= 100;
	
	//////////////////////////////////////////////////////////////////////////////////////
	REQ_LOGIN								= 101;     	//
	ACK_LOGIN								= 102;     	//
	REQ_LOGOUT								= 103;		//

	REQ_WORLD_LIST							= 110;			//
	ACK_WORLD_LIST							= 111;			//
	REQ_CONNECT_WORLD						= 112;			//
	ACK_CONNECT_WORLD						= 113;
	REQ_KICKED_FROM_WORLD					= 114;			//

	REQ_CONNECT_KEY							= 120;         //
	ACK_CONNECT_KEY							= 122;         //

	REQ_SELECT_SERVER						= 130;			//
	ACK_SELECT_SERVER						= 131;			//
	REQ_ROLE_LIST							= 132;			//
	ACK_ROLE_LIST							= 133;			//
	REQ_CREATE_ROLE							= 134;			//
	REQ_DELETE_ROLE							= 135;			//
	REQ_RECOVER_ROLE						= 136;			//

	REQ_LOAD_ROLE_DATA						= 140;			//
	ACK_LOAD_ROLE_DATA						= 141;			//
	REQ_SAVE_ROLE_DATA						= 142;			//
	ACK_SAVE_ROLE_DATA						= 143;			//

	REQ_ENTER_GAME							= 150;			//
	ACK_ENTER_GAME							= 151;			//
	REQ_LEAVE_GAME							= 152;			//
	ACK_LEAVE_GAME							= 153;			//

	REQ_SWAP_SCENE							= 155;			//
	ACK_SWAP_SCENE							= 156;			//
	REQ_SWAP_HOME_SCENE						= 157;			//
	ACK_SWAP_HOME_SCENE						= 158;			//
	REQ_ENTER_GAME_FINISH					= 159;			//
	ACK_ENTER_GAME_FINISH					= 160;			//


	ACK_OBJECT_ENTRY						= 200;			//
	ACK_OBJECT_LEAVE						= 201;			//

	ACK_OBJECT_PROPERTY_ENTRY				= 202;			//
	ACK_OBJECT_RECORD_ENTRY					= 203;			//

	ACK_PROPERTY_INT						= 210;			//
	ACK_PROPERTY_FLOAT							= 211;			//
	ACK_PROPERTY_STRING						= 212;			//
	//EGMI_ACK_PROPERTY_DOUBLE				= 213;			//
	ACK_PROPERTY_OBJECT						= 214;			//
	ACK_PROPERTY_VECTOR2        			= 215;
	ACK_PROPERTY_VECTOR3        			= 216;
	ACK_PROPERTY_CLEAR          			= 217;

	ACK_ADD_ROW								= 220;
	ACK_REMOVE_ROW							= 221;
	ACK_SWAP_ROW							= 222;
	ACK_RECORD_INT							= 223;
	ACK_RECORD_FLOAT						= 224;
	//EGMI_ACK_RECORD_DOUBLE				= 225;
	ACK_RECORD_STRING						= 226;
	ACK_RECORD_OBJECT						= 227;
	ACK_RECORD_VECTOR2						= 228;
	ACK_RECORD_VECTOR3						= 229;

	ACK_RECORD_CLEAR						= 250;
	ACK_RECORD_SORT							= 251;

	ACK_DATA_FINISHED						= 260;


	REQ_MOVE								= 300;
	ACK_MOVE								= 301;

	REQ_CHAT								= 350;
	ACK_CHAT								= 351;

	REQ_SKILL_OBJECTX						= 400;
	ACK_SKILL_OBJECTX						= 401;
	REQ_SKILL_POS							= 402;
	ACK_SKILL_POS							= 403;

	ACK_ONLINE_NOTIFY						= 600;
	ACK_OFFLINE_NOTIFY						= 601;

	//game logic message id, start from 1000
}

///////////////////////////////////////////////////////////////////////////////////////////////////

enum EItemType
{
	EIT_EQUIP   			= 0; //the equipment which can add props
	EIT_GEM   				= 1; //the gem ca be embed to the equipment
	EIT_SUPPLY   			= 2; //expendable items for player, such as a medicine that cures
	EIT_SCROLL   			= 3; //special items that can call a hero or others, special items can do what you want to do
}

enum ESkillType
{
	BRIEF_SINGLE_SKILL 			= 0;//this kind of skill just can damage one object
	BRIEF_GROUP_SKILL			= 1;//this kind of skill can damage multiple objects
	BULLET_SINGLE_SKILL			= 2;//this kind of bullet just can damage one object
	BULLET_REBOUND_SKILL		= 3;//this kind of bullet can damage multiple objects via rebound
	BULLET_TARGET_BOMB_SKILL	= 4;//this kind of bullet can damage multiple objects who around the target when the bullet touched the target object
	BULLET_POS_BOMB_SKILL		= 5;//this kind of bullet can damage multiple objects  who around the target when the bullet arrived the position
	FUNC_SKILL					= 6;
};

enum ESceneType
{
	NORMAL_SCENE 			= 0; //public town, only has one group available for players is 1
	SINGLE_CLONE_SCENE 		= 1; //private room, only has one player per group and it will be destroyed if the player leaved from group.
	MULTI_CLONE_SCENE 		= 2; //private room, only has more than one player per group and it will be destroyed if all players leaved from group.
}

enum ENPCType
{
    NORMAL_NPC	= 0;			  //
    HERO_NPC 	= 1;              //
    TURRET_NPC 	= 2;              //
    FUNC_NPC 	= 3;              //
};