set(ProjectName "NFConfigPlugin")
file(GLOB NFConfigPlugin_ROOT_Cpp
	*.cpp)

file(GLOB NFConfigPlugin_ROOT_Hpp 
	*.h)
add_library(NFConfigPlugin SHARED ${NFConfigPlugin_ROOT_Cpp} ${NFConfigPlugin_ROOT_Hpp})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
set_target_properties( NFConfigPlugin PROPERTIES OUTPUT_NAME_DEBUG "NFConfigPlugin_d")
set_target_properties( NFConfigPlugin PROPERTIES 
	FOLDER "NFSDK"
	ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/_Out/Comm/
	RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/_Out/Comm/
	LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/_Out/Comm/ )

if(UNIX)
	add_dependencies(NFConfigPlugin NFCore)
	if (CMAKE_BUILD_TYPE MATCHES "Release")
		target_link_libraries(NFConfigPlugin  NFCore)
	else()
		target_link_libraries(NFConfigPlugin  NFCore)
	endif()
	if(CMAKE_BUILD_TYPE STREQUAL "Release")		
		add_post_cmd_linux(${ProjectName} "NFLoginServer" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "NFWorldServer" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "NFMasterServer" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "NFProxyServer1" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "NFGameServer1" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial1" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial2" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial3" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial4" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial5" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial6" ".so" "" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial7" ".so" "" "lib")
	else()
		add_post_cmd_linux(${ProjectName} "NFLoginServer" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "NFWorldServer" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "NFMasterServer" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "NFProxyServer1" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "NFGameServer1" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial1" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial2" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial3" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial4" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial5" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial6" ".so" "_d" "lib")
		add_post_cmd_linux(${ProjectName} "Tutorial7" ".so" "_d" "lib")
	endif()
else()
	message("${ProjectName} ${CMAKE_BUILD_TYPE}")
	if(CMAKE_BUILD_TYPE STREQUAL "Release")		
		add_post_cmd_win(${ProjectName} "NFLoginServer" "dll" "")
		add_post_cmd_win(${ProjectName} "NFWorldServer" "dll" "")
		add_post_cmd_win(${ProjectName} "NFMasterServer" "dll" "")
		add_post_cmd_win(${ProjectName} "NFProxyServer1" "dll" "")
		add_post_cmd_win(${ProjectName} "NFGameServer1" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial1" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial2" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial3" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial4" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial5" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial6" "dll" "")
		add_post_cmd_win(${ProjectName} "Tutorial7" "dll" "")
	else()
		add_post_cmd_win(${ProjectName} "NFLoginServer" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "NFWorldServer" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "NFMasterServer" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "NFProxyServer1" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "NFGameServer1" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial1" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial2" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial3" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial4" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial5" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial6" "dll" "_d" "lib")
		add_post_cmd_win(${ProjectName} "Tutorial7" "dll" "_d" "lib")
	endif()
	target_link_libraries(NFConfigPlugin  libprotobuf )
endif()
