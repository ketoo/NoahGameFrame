<?xml version="1.0"?>
<clause number="14.1" title="Expression classifications">
  <paragraph>An expression is classified as one of the following: <list><list_item> A value. Every value has an associated type. </list_item><list_item> A variable. Every variable has an associated type, namely the declared type of the variable. </list_item><list_item> A namespace. An expression with this classification can only appear as the left-hand side of a  <non_terminal where="14.5.4">member-access</non_terminal> (<hyperlink>14.5.4</hyperlink>). In any other context, an expression classified as a namespace causes a compile-time error. </list_item><list_item> A type. An expression with this classification can only appear as the left-hand side of a <non_terminal where="14.5.4">member-access</non_terminal> (<hyperlink>14.5.4</hyperlink>), or as an operand for the as operator (<hyperlink>14.9.10</hyperlink>), the is operator (<hyperlink>14.9.9</hyperlink>), or the typeof operator (<hyperlink>14.5.11</hyperlink>). In any other context, an expression classified as a type causes a compile-time error. </list_item><list_item> A method group, which is a set of overloaded methods resulting from a member lookup (<hyperlink>14.3</hyperlink>). A method group may have an associated instance expression. When an instance method is invoked, the result of evaluating the instance expression becomes the instance represented by this (<hyperlink>14.5.7</hyperlink>). A method group is only permitted in an <non_terminal where="14.5.5">invocation-expression</non_terminal> (<hyperlink>14.5.5</hyperlink>) or a <non_terminal where="14.5.10.3">delegate-creation-expression</non_terminal> (<hyperlink>14.5.10.3</hyperlink>). In any other context, an expression classified as a method group causes a compile-time error. </list_item><list_item> A property access. Every property access has an associated type, namely the type of the property. Furthermore, a property access may have an associated instance expression. When an accessor (the get or set block) of an instance property access is invoked, the result of evaluating the instance expression becomes the instance represented by this (<hyperlink>14.5.7</hyperlink>). </list_item><list_item> An event access. Every event access has an associated type, namely the type of the event. Furthermore, an event access may have an associated instance expression. An event access may appear as the left-hand operand of the += and -= operators (<hyperlink>14.13.3</hyperlink>). In any other context, an expression classified as an event access causes a compile-time error. </list_item><list_item> An indexer access. Every indexer access has an associated type, namely the element type of the indexer. Furthermore, an indexer access has an associated instance expression and an associated argument list. When an accessor (the get or set block) of an indexer access is invoked, the result of evaluating the instance expression becomes the instance represented by this (<hyperlink>14.5.7</hyperlink>), and the result of evaluating the argument list becomes the parameter list of the invocation. </list_item><list_item> Nothing. This occurs when the expression is an invocation of a method with a return type of <keyword>void</keyword>. An expression classified as nothing is only valid in the context of a <non_terminal where="15.6">statement-expression</non_terminal> (<hyperlink>15.6</hyperlink>). </list_item></list></paragraph>
  <paragraph>The final result of an expression is never a namespace, type, method group, or event access. Rather, as noted above, these categories of expressions are intermediate constructs that are only permitted in certain contexts. </paragraph>
  <paragraph>A property access or indexer access is always reclassified as a value by performing an invocation of the  get-accessor or the set-accessor. The particular accessor is determined by the context of the property or indexer access: If the access is the target of an assignment, the set-accessor is invoked to assign a new value (<hyperlink>14.13.1</hyperlink>). Otherwise, the get-accessor is invoked to obtain the current value (<hyperlink>14.1.1</hyperlink>). </paragraph>
</clause>
