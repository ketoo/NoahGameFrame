<?xml version="1.0"?>
<clause number="12.3.3.20" title="General rules for expressions with embedded expressions">
  <paragraph>The following rules apply to these kinds of expressions: parenthesized expressions (<hyperlink>14.5.3</hyperlink>), element access expressions (<hyperlink>14.5.6</hyperlink>), base access expressions with indexing (<hyperlink>14.5.8</hyperlink>), increment and decrement expressions (<hyperlink>14.5.9</hyperlink>, <hyperlink>14.6.5</hyperlink>), cast expressions (<hyperlink>14.6.6</hyperlink>), unary +, -, ~, * expressions, binary +, -, *, /, %, &lt;&lt;, &gt;&gt;, &lt;, &lt;=, &gt;, &gt;=, ==, !=, is, as, &amp;, |, ^ expressions (<hyperlink>14.7</hyperlink>, <hyperlink>14.8</hyperlink>, <hyperlink>14.9</hyperlink>, <hyperlink>14.10</hyperlink>), compound assignment expressions (<hyperlink>14.13.2</hyperlink>), checked and unchecked expressions (<hyperlink>14.5.12</hyperlink>), array and delegate creation expressions (<hyperlink>14.5.10</hyperlink>). </paragraph>
  <paragraph>Each of these expressions has one or more sub-expressions that are unconditionally evaluated in a fixed order. <example>[Example: For example, the binary % operator evaluates the left hand side of the operator, then the right hand side. An indexing operation evaluates the indexed expression, and then evaluates each of the index expressions, in order from left to right. end example]</example> For an expression expr, which has sub-expressions expr<sub>1</sub>, expr<sub>2</sub>, ..., expr<sub>n</sub>, evaluated in that order: <list><list_item> The definite assignment state of v at the beginning of expr<sub>1</sub> is the same as the definite assignment state at the beginning of expr. </list_item><list_item> The definite assignment state of v at the beginning of expr<sub>i</sub> (i greater than one) is the same as the definite assignment state at the end of expr<sub>i-1</sub>. </list_item><list_item> The definite assignment state of v at the end of expr is the same as the definite assignment state at the end of expr<sub>n</sub>. </list_item></list></paragraph>
</clause>
