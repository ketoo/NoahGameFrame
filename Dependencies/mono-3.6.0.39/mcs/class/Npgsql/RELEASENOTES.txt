

2004-11-21

    Npgsql 0.7beta3 development release
    
    Features added:
        Large Object support: Npgsql now supports large object operations. Thanks Emiliano Necciari (e dot necciari at blogic dot it) for the patch!
    
    Bug fixes:
    
        Added workaround when using extended query mode to add parameter types explicitly when sending Parse messages. Backend was sending errors for some queries like (select * from t where $1 in (...) ). Backend was saying it could not recognize parameter type of $1. Thanks Martin ( martijn at boland dot org) for heads up.
        
        Fixed parameter replace when next byte after parameter name is '\\r'. Thanks Ivan Radovanovic (rivan at sezampro dot yu) for the fix.
        
        Fixed NpgsqlDataReader.GetBytes: Added a little fix for proper handling of getbytes with current Npgsql semantics in mind. For while, we just support offset value of 0 as we read all the bytes field value at a time. So there is no copy when offset is not 0.
        
        Fixed IDisposable pattern implementation of NpgsqlTransaction. Now it doesn't incorrectly raise InvalidOperation exceptions. Thanks Ivan Radovanovic ( rivan at sezampro dot yu ) for heads up.
        
        Fixed NpgsqlCommand.Connection set property. Now connection values can be set when a connection is in place, but just if the connection being set is the same as the connection which the transaction is running on. Thanks Ivan Radovanovic ( rivan at sezampro dot yu ) for heads up.
        
        gborg 1000: Fixed NullReferenceException when setting parameter value to DBNull after creating parameter without specifying its NpgsqlDbType.
        
        Fixed NpgsqlDataReader.GetBytes for .Net 1.0 compliance. CopyTo() doesn't have an overload which takes an Int64. Thanks Brar Piening (brar at piening dot info) for heads up
        
        Fixed assembly info version to 0.7.
        
        Fixed handling of invalid authentication methods. Thanks Magnus Hagander (mha at sollentuna dot net) for the heads up.
        
        

2004-09-22
    
    Npgsql 0.7beta2 development release
    
    Features added:
    
        Added support for DbType.Byte type. Thanks Martijn Boland (martijn at boland dot org)
        
        
        
    Bug Fixes:
    
        gborg 952: Added missing handling of NoData message.
        
        Fixed a NullReferenceException when passing a null connnection string to NpgsqlConnection.
        
        gborg 941, 955: Fixed null values handling when using NpgsqlCommand.Prepare(). Thanks Martijn Boland (martijn at boland dot org) for helping with test case.
        
        Fixed an infinite loop when trying to use a parameter whose name is equals to same type name. i.e.: parameter name :text which would conflict with :text 
        parameter name which was being added in the replacement string.
        
        Fixed handling of strings with backslashes. Now they are properly escaped.
        
        Improved portal and plan name creation to use an unique number from NpgsqlConnector instead of using an static field in NpgsqlCommand. Thanks Martin ( martijn at boland dot org) for the heads up.
        
        Improved implementation of NpgsqlConnection.Dispose. Also added warning logging for NpgsqlConnection leakings.
        
        Fixed code to allow calling NpgsqlConnection.Close() many times even when being disposed.
        
        Added support for case insensitive fields index lookup in NpgsqlDataReader. Thanks Martin ( martijn at boland dot org)
    
    
    Note: Still missing generated html api docs.

2004-08-31

	Npgsql 0.7beta1 development release


	Features added:
	
		Added support for point, box, lseg, path, polygon and circle datatypes. They are mapped to NpgsqlPoint, NpgsqlBox, NpgsqlLSeg,
		NpgsqlPolygon and NpgsqlCircle respectively. Thanks Glen Parker for help.
		
		Added NpgsqlDbType enumeration with all supported types.
		
	
	Bug fixes:
        
		Added api documentation in code. Thanks Glen Parker. (No html generation yet. This will be fixed in next release)
		Fixed deserialization of NpgsqlException. There are some issues yet, just the base message is being deserialized. Errors collection are null. Thanks David Palmer (David dot Palmer at SensusTech dot com) for the heads up and fix.
        Improved Unicode encoding support. It was possible to characters in unicode cross the stream buffer and be discarded. Now we use Decoders which handle that situation. Thanks Oskars Ozols (oskars dot ozols at di dot lv)
        Improved connection startup code. Now new connections in ms.net goes a lot faster. Thanks Mikko Korkalo (mikko.korkalo at f-solutions dot net) for the patch.
		Fixed a problem with plan execution in 7.3 backend versions. The text parameters weren't being quoted and backend complained about that.
		
		- gborg 898: Added HasRows method to NpgsqlDataReader. Thanks keitsi at minttupuffet dot net for feature request.
		- gborg 899: Fixed return of IsClosed after closing NpgsqlDataReader. Thanks Mikko Korkalo (mikko.korkalo at f-solutions dot net) for the patch.
		
	Know Issues:
		There are some reports about initial connection delay when using Npgsql in windows with ms .net implementation. We are still investigating what is causing that. Please, report us if you also have this problem.
 


2004-06-15
	Npgsql 0.6 development release.

	After so much time without a release, we finally got this out! Sorry
for all this time without releases. We will try to get more often releases
from now on. 
	I'd like to specially thank Glen Parker (glenebob at nwlink dot com) for all the help given in this release. Thank you very much Glen!

	What's new in this version: 
	
	- Connection Pooling support. Glen Parker worked very much in the
redesign of connection pooling. You can use the connection pooling 
by specifying the following key-value pairs in the connection string:

	MaxPoolSize: specifies the max number of connections Npgsql will use
for its pool. 
	Pooling: True or False. Controls whether connection pooling is used.  Default = True;
	Timeout: Time to wait for connection open in seconds.

	- SSL Connection support. You now can connect to postgresql using ssl connections. To
do so, you must add the pair ssl=yes in connection string. Thanks Carlos Guzman (carlosga at telefonica dot net)

	- More connection string options:
	Protocol: Protocol version to use, instead of automatic; Integer 2 or 3;
	Encoding: Encoding to use when connected to backend. Currently can only be SQL_ASCII or Unicode. Default: SQL_ASCII.

	- Error Handling:
	NpgsqlException is now used exclusively for errors reported by the backend.
	NpgsqlException now provides access to all information returned by the backend with an error. (More specific informations as error number only available on 7.4+ server versions)

	- General:
	Protocol version 3 handling is much closer to completion.
	Lots of API documentation added.
	
	
	Bug fixes:

	Added support for Unicode encoding. Fixes feature request 534 on gborg. Thanks Ivar
<ivar at lumisoft dot ee> for pointing it out.

	Added code to set datestyle to iso when connecting using protocol 3.0 version. Thanks Sami Kuhmonen <feenix at iqs dot fi> for pointing it out.

	Faster support of bytea binary data. Thanks Jackson Harper (jackson at ximian dot com)
and Jonathan Gilbert (2a5gjx302 at sneakemail dot com). The performance for adding binary data is
10x faster than original code :)
	
	CommandBuilder and better Dataset support. Thanks Pedro Yoros (yoros at wanadoo dot es).

	Fixed problem when getting empty resultsets. Thanks lynnroth for pointing it out. 

	Connection.Close couldn't be called twice. gborg 828. Thanks Glen Parker (glenebob at nwlink dot com)

	Wrong date format sent to DB. Thanks Glen Parker (glenebob at nwlink dot com)

	RedHat Postgresql messes version string. Thanks Glen Parker (glenebob at nwlink dot com)

	NpgsqlMessageTypes.EmptyQueryResponse doesn't read enough from response string. Thanks Glen Parker (glenebob at nwlink dot com)

 	Problem with czech diacritics. Thanks stehule at kix dot fsv dot cvut dot cz for the patch.

	fill method updates db without specifying insert command and creates wrong commandtext.



	
	
	

2003-05-31
    Npgsql 0.5 development release.
    
    What's new in this version:
    
      - New datatypes supported: bool, int2, int4, int8, numeric, timestamp, date, time and text data types.
      These types are mapped to DbTtype enum: Boolean, Int16, Int32, Int64, Decimal,
      DateTime, Date, Time and String.
      
      - NpgsqlParameter now supports those types through the DbType enumeration and not just Int32, Int64
      
      - NpgsqlDataAdapter now has more helper contructors. Thanks stevenao for reporting this (Bug 455)
      
      - MD5 Authentication is now supported. Thanks Brar Piening. 
        Mono MD5 implementation is being used. Thanks Sebastien Pouliot.
        
      - NpgsqlDataAdapter can be used to select, insert, update and delete data with DataSets.
      
      - StrongType datasets generated with xsd can be used.
      
      - Support for Listen/Notify events through the NotificationEventHandler delegate and
        NpgsqlConnection.OnNotification event. Thanks Wojtek Wierzbicki. Now applications can 
        hook on it to receive notification messages from server. This notification is asynchronous which means they will
        be delivered to client apps in the next interaction of Npgsql with backend.
        
	- NUnit20 tests were added. There are 48 tests which can also be used as a source of references of new Npgsql functionality.
	Of course, new tests are very welcome :)
       
    
    Bugfixes:
    
      - Large resultsets are now correctly handled(Bug id 467). Thanks Chris Wenneman.
      - Null values handling are now fixed. Thanks Stuart Ballard for showing this problem.
      - Quotes in strings are now *actually* working. 
    
    
    This release is very stable and have a lot of immediate functionality is now working.
    It can be used in production environments. Please, get the non-debug releases to production use.
    Thanks all for help debugging and sending your bug reports and patches! :)

    fxjr
    
    
    
    

2002-06-10
    Npgsql 0.2 development release.
    
    In this version we got many things working...
    
    - You can send insert, update, delete queries through NpgsqlCommand.ExecuteNonQuery() method.
    - You can send queries like, select count(*) from table, select version() with 
      NpgsqlCommand.ExecuteScalar() method.
    - There is logging support. (Thanks Dave Page)
      To use it, place code like that in your program:
      
      // Enable logging.
	  NpgsqlEventLog.Level = LogLevel.Debug;            // LogLevel.
	  NpgsqlEventLog.LogName = "NpgsqlTests.LogFile";   // LogFile.
    
    - You can use Npgsql with Mono (Thanks Kristis Makris). It is not working perfectly. :( 
    - There is a winforms test suite (Thanks Dave Page).
    - Clearer code in NpgsqlConnection removing *magic* numbers and constants. (Thanks Kristis Makris)
    - Better support of ODBC-like ConnectionString in NpgsqlConnection (Thanks Dave Page)
    - Thanks Ulrich Sprick for all discussion and ideas.
    
    And much more to come! 
    Thanks all team !

2002-05-18
	
	First Npgsql beta release.
	In this version there is a limited functionality. It is only possible to
connect and disconnect from server.
	Only clear text authentication is supported right now.
	To compile you can use the SharpDevelop to open the Combine file (Npgsql.cmbx) or
type at command console: csc /t:library /out:Npgsql.dll NpgsqlConnection.cs AssemblyInfo.cs NpgsqlException.cs
This will create the file Npgsql.dll that can be copied to the application directory.

	I will be working in the Command functionality now.
	
	
	Play with it and send your bugs and comments :)
	(fxjr)
