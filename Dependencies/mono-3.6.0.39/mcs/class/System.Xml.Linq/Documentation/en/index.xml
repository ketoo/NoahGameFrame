<Overview>
  <Assemblies>
    <Assembly Name="System.Xml.Linq" Version="4.0.0.0">
      <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Mono development team")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("(c) Various Mono authors")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDefaultAlias("System.Xml.Linq.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("System.Xml.Linq.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("4.0.30319.17020")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("4.0.30319.17020")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Mono Common Language Infrastructure")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("System.Xml.Linq.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en-US")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.SatelliteContractVersion("4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.AllowPartiallyTrustedCallers</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="System.Xml.Linq">
      <Type Name="Extensions" Kind="Class" />
      <Type Name="LoadOptions" Kind="Enumeration" />
      <Type Name="ReaderOptions" Kind="Enumeration" />
      <Type Name="SaveOptions" Kind="Enumeration" />
      <Type Name="XAttribute" Kind="Class" />
      <Type Name="XCData" Kind="Class" />
      <Type Name="XComment" Kind="Class" />
      <Type Name="XContainer" Kind="Class" />
      <Type Name="XDeclaration" Kind="Class" />
      <Type Name="XDocument" Kind="Class" />
      <Type Name="XDocumentType" Kind="Class" />
      <Type Name="XElement" Kind="Class" />
      <Type Name="XName" Kind="Class" />
      <Type Name="XNamespace" Kind="Class" />
      <Type Name="XNode" Kind="Class" />
      <Type Name="XNodeDocumentOrderComparer" Kind="Class" />
      <Type Name="XNodeEqualityComparer" Kind="Class" />
      <Type Name="XObject" Kind="Class" />
      <Type Name="XObjectChange" Kind="Enumeration" />
      <Type Name="XObjectChangeEventArgs" Kind="Class" />
      <Type Name="XProcessingInstruction" Kind="Class" />
      <Type Name="XStreamingElement" Kind="Class" />
      <Type Name="XText" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Xml.Schema">
      <Type Name="Extensions" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Xml.XPath">
      <Type Name="Extensions" Kind="Class" />
    </Namespace>
  </Types>
  <Title>System.Xml.Linq</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Ancestors&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; Ancestors&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XNode;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; Ancestors&lt;(class System.Xml.Linq.XNode) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Ancestors&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; Ancestors&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Xml.Linq.XName name) where T : System.Xml.Linq.XNode;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; Ancestors&lt;(class System.Xml.Linq.XNode) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Xml.Linq.XName name) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="name" Type="System.Xml.Linq.XName" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="AncestorsAndSelf">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; AncestorsAndSelf (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; AncestorsAndSelf(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="AncestorsAndSelf">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; AncestorsAndSelf (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source, System.Xml.Linq.XName name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; AncestorsAndSelf(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source, class System.Xml.Linq.XName name) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
          <Parameter Name="name" Type="System.Xml.Linq.XName" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Attributes">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; Attributes (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; Attributes(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Attributes">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; Attributes (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source, System.Xml.Linq.XName name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; Attributes(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source, class System.Xml.Linq.XName name) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
          <Parameter Name="name" Type="System.Xml.Linq.XName" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="DescendantNodes&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XNode&gt; DescendantNodes&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XContainer;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XNode&gt; DescendantNodes&lt;(class System.Xml.Linq.XContainer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XNode&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XContainer</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="DescendantNodesAndSelf">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XNode&gt; DescendantNodesAndSelf (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XNode&gt; DescendantNodesAndSelf(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XNode&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Descendants&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; Descendants&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XContainer;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; Descendants&lt;(class System.Xml.Linq.XContainer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XContainer</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Descendants&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; Descendants&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Xml.Linq.XName name) where T : System.Xml.Linq.XContainer;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; Descendants&lt;(class System.Xml.Linq.XContainer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Xml.Linq.XName name) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XContainer</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="name" Type="System.Xml.Linq.XName" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="DescendantsAndSelf">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; DescendantsAndSelf (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; DescendantsAndSelf(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="DescendantsAndSelf">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; DescendantsAndSelf (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; source, System.Xml.Linq.XName name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; DescendantsAndSelf(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; source, class System.Xml.Linq.XName name) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;" RefType="this" />
          <Parameter Name="name" Type="System.Xml.Linq.XName" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Elements&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; Elements&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XContainer;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; Elements&lt;(class System.Xml.Linq.XContainer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XContainer</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Elements&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; Elements&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Xml.Linq.XName name) where T : System.Xml.Linq.XContainer;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; Elements&lt;(class System.Xml.Linq.XContainer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Xml.Linq.XName name) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XContainer</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="name" Type="System.Xml.Linq.XName" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="InDocumentOrder&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; InDocumentOrder&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XNode;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; InDocumentOrder&lt;(class System.Xml.Linq.XNode) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Nodes&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XNode&gt; Nodes&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XContainer;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XNode&gt; Nodes&lt;(class System.Xml.Linq.XContainer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XNode&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XContainer</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Remove">
        <MemberSignature Language="C#" Value="public static void Remove (this System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Remove(class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Remove&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void Remove&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Xml.Linq.XNode;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Remove&lt;(class System.Xml.Linq.XNode) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Linq.Extensions" Member="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XAttribute" />
      </Targets>
      <Member MemberName="GetSchemaInfo">
        <MemberSignature Language="C#" Value="public static System.Xml.Schema.IXmlSchemaInfo GetSchemaInfo (this System.Xml.Linq.XAttribute source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.IXmlSchemaInfo GetSchemaInfo(class System.Xml.Linq.XAttribute source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XAttribute" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XElement" />
      </Targets>
      <Member MemberName="GetSchemaInfo">
        <MemberSignature Language="C#" Value="public static System.Xml.Schema.IXmlSchemaInfo GetSchemaInfo (this System.Xml.Linq.XElement source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.IXmlSchemaInfo GetSchemaInfo(class System.Xml.Linq.XElement source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XElement" RefType="this" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XAttribute" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Xml.Linq.XAttribute source, System.Xml.Schema.XmlSchemaObject partialValidationType, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Xml.Linq.XAttribute source, class System.Xml.Schema.XmlSchemaObject partialValidationType, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XAttribute" RefType="this" />
          <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
          <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
          <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="partialValidationType">To be added.</param>
          <param name="schemas">To be added.</param>
          <param name="validationEventHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XAttribute" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Xml.Linq.XAttribute source, System.Xml.Schema.XmlSchemaObject partialValidationType, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler, bool addSchemaInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Xml.Linq.XAttribute source, class System.Xml.Schema.XmlSchemaObject partialValidationType, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler, bool addSchemaInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XAttribute" RefType="this" />
          <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
          <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
          <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
          <Parameter Name="addSchemaInfo" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="partialValidationType">To be added.</param>
          <param name="schemas">To be added.</param>
          <param name="validationEventHandler">To be added.</param>
          <param name="addSchemaInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XDocument" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Xml.Linq.XDocument source, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Xml.Linq.XDocument source, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XDocument" RefType="this" />
          <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
          <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="schemas">To be added.</param>
          <param name="validationEventHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XDocument" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Xml.Linq.XDocument source, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler, bool addSchemaInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Xml.Linq.XDocument source, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler, bool addSchemaInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XDocument" RefType="this" />
          <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
          <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
          <Parameter Name="addSchemaInfo" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="schemas">To be added.</param>
          <param name="validationEventHandler">To be added.</param>
          <param name="addSchemaInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XElement" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Xml.Linq.XElement source, System.Xml.Schema.XmlSchemaObject partialValidationType, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Xml.Linq.XElement source, class System.Xml.Schema.XmlSchemaObject partialValidationType, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XElement" RefType="this" />
          <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
          <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
          <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="partialValidationType">To be added.</param>
          <param name="schemas">To be added.</param>
          <param name="validationEventHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XElement" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Xml.Linq.XElement source, System.Xml.Schema.XmlSchemaObject partialValidationType, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler, bool addSchemaInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Xml.Linq.XElement source, class System.Xml.Schema.XmlSchemaObject partialValidationType, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler, bool addSchemaInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="System.Xml.Linq.XElement" RefType="this" />
          <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
          <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
          <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
          <Parameter Name="addSchemaInfo" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="partialValidationType">To be added.</param>
          <param name="schemas">To be added.</param>
          <param name="validationEventHandler">To be added.</param>
          <param name="addSchemaInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.Schema.Extensions" Member="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="CreateNavigator">
        <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="CreateNavigator">
        <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node, class System.Xml.XmlNameTable nameTable) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="nameTable">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="XPathEvaluate">
        <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Object</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="expression">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="XPathEvaluate">
        <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Object</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="expression">To be added.</param>
          <param name="resolver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="XPathSelectElement">
        <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.Linq.XElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="expression">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="XPathSelectElement">
        <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.Linq.XElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="expression">To be added.</param>
          <param name="resolver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="XPathSelectElements">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="expression">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Xml.Linq.XNode" />
      </Targets>
      <Member MemberName="XPathSelectElements">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
        </Parameters>
        <Docs>
          <param name="node">To be added.</param>
          <param name="expression">To be added.</param>
          <param name="resolver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Xml.XPath.Extensions" Member="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
