<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<system.serviceModel>
		<behaviors>
			<serviceBehaviors>
				<behavior name="NewBehavior">
					<serviceAuthorization principalPermissionMode="UseAspNetRoles"
					 roleProviderName="RoleProvider" impersonateCallerForAllOperations="true"
					 serviceAuthorizationManagerType="SerAuthManagType">
						<authorizationPolicies>
							<add policyType="PolicyType1" />
							<add policyType="PolicyType2" />
						</authorizationPolicies>
					</serviceAuthorization>
					<dataContractSerializer ignoreExtensionDataObject="true" maxItemsInObjectGraph="32768" />
					<serviceCredentials type="ServiceCredentialsType">
						<clientCertificate>
							<certificate findValue="FindValue" storeLocation="CurrentUser"
							 storeName="Root" x509FindType="FindByIssuerName" />
							<authentication customCertificateValidatorType="CustomCertificateValidationType"
							 certificateValidationMode="PeerOrChainTrust" revocationMode="Offline"
							 trustedStoreLocation="CurrentUser" includeWindowsGroups="false"
							 mapClientCertificateToWindowsAccount="true" />
						</clientCertificate>
						<serviceCertificate findValue="FindValue" storeLocation="CurrentUser"
						 storeName="Root" x509FindType="FindByIssuerName" />
						<userNameAuthentication userNamePasswordValidationMode="MembershipProvider"
						 includeWindowsGroups="false" membershipProviderName="MembershipProviderName"
						 customUserNamePasswordValidatorType="CustomUserNamePasswordValidatorType"
						 cacheLogonTokens="true" maxCachedLogonTokens="252" cachedLogonTokenLifetime="00:30:00" />
						<windowsAuthentication includeWindowsGroups="false" allowAnonymousLogons="true" />
						<peer>
							<certificate findValue="FindValue" storeLocation="LocalMachine"
							 storeName="Root" x509FindType="FindByIssuerName" />
							<peerAuthentication customCertificateValidatorType="CustomCertificateValidatorType"
							 certificateValidationMode="Custom" revocationMode="Offline" trustedStoreLocation="LocalMachine" />
							<messageSenderAuthentication customCertificateValidatorType="CustomCertificateValidatorType"
							 certificateValidationMode="None" revocationMode="Offline" trustedStoreLocation="LocalMachine" />
						</peer>
						<issuedTokenAuthentication customCertificateValidatorType="CustomCertificateValidatorType"
						 certificateValidationMode="PeerOrChainTrust" revocationMode="Offline"
						 trustedStoreLocation="CurrentUser" samlSerializerType="SalmSerializerType"
						 allowUntrustedRsaIssuers="true">
							<knownCertificates>
								<add findValue="FindValue" storeLocation="CurrentUser" storeName="Root"
								 x509FindType="FindByIssuerName" />
							</knownCertificates>
						</issuedTokenAuthentication>
						<secureConversationAuthentication securityStateEncoderType="SecurityStateEncoderType" />
					</serviceCredentials>
					<serviceDebug httpHelpPageEnabled="false" httpHelpPageUrl="http://help.page.url"
					 httpsHelpPageEnabled="false" httpsHelpPageUrl="https://help.page.url"
					 includeExceptionDetailInFaults="true" />
					<serviceMetadata externalMetadataLocation="http://external.metadata.location"
					 httpGetEnabled="true" httpGetUrl="http://get.url" httpsGetEnabled="true"
					 httpsGetUrl="https://get.url" policyVersion="Default" />
					<serviceSecurityAudit auditLogLocation="Application" suppressAuditFailure="false"
					 serviceAuthorizationAuditLevel="Success" messageAuthenticationAuditLevel="Success" />
					<serviceThrottling maxConcurrentCalls="32" maxConcurrentSessions="20"
					 maxConcurrentInstances="14" />
					<serviceTimeouts transactionTimeout="00:03:00" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
</configuration>