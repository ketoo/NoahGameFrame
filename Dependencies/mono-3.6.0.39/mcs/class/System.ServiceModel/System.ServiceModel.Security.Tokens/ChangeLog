2010-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityTokenParameters.cs, SupportingTokenParameters.cs,
	  SslSecurityTokenParameters.cs, IssuedSecurityTokenParameters.cs,
	  SspiSecurityTokenParameters.cs,
	  SecureConversationSecurityTokenParameters.cs :
	  implement ToString().

2010-07-15  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenProvider.cs : verify mismatch. We don't have
	  correct verification code yet, but ignoring this only brings
	  further mismatch error.
	* TlsClientSession.cs : add some commented code.

2010-07-15  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenProvider.cs : pass X509 auth credential, which
	  contains X509 validation information.
	* TlsClientSession.cs : use x509 auth settings to validate service
	  certificate.

2010-07-15  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsServerSession.cs : SendRecord() somehow doesn't work, so
	  use separate stream instread.

2010-07-15  Atsushi Enomoto  <atsushi@ximian.com>

	* BinarySecretSecurityToken.cs : add KeySize.
	* SslSecurityTokenAuthenticator.cs : add some comments.

2010-07-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceModelSecurityTokenRequirement.cs :
	  add ExtendedProtectionPolicy.

2010-07-12  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenAuthenticator.cs,
	  AuthenticatorCommunicationObject.cs,
	  SecureConversationSecurityTokenAuthenticator.cs :
	  add timeout argument to negotication requests.

2008-02-27 Eyal Alaluf <eyala@mainsoft.com>

	* InternalEncryptedKeyIdentifierClause.cs IssuedTokenCommunicationObject.cs:
	  Fix compilation warnings.

2007-04-17  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenParameters.cs :
	  implemented CreateRequestParameters().

2007-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsClientSession.cs, TlsServerSession.cs,
	  SslSecurityTokenProvider.cs : support mutual sslnego.
	* SslnegoCookieResolver.cs : .net seems to include X509Certificate
	  information in the cookie.

2007-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityContextSecurityToken.cs : Cookie needs a setter.
	* SslnegoCookieResolver.cs : set Cookie so that it can be serialized.
	* SslSecurityTokenProvider.cs, SslSecurityTokenAuthenticator.cs :
	  (At provider) check contextId returned by the server.
	  Reverted ProofToken value (see comments).
	* CommunicationSecurityTokenAuthenticator.cs : it now implements
	  IIssuanceSecurityTokenAuthenticator.

2007-03-30  Atsushi Enomoto  <atsushi@ximian.com>

	* AuthenticatorCommunicationObject.cs : added SecurityBindingElement.
	* SslSecurityTokenProvider.cs : a few updates, key is now from
	  proof token.
	* SslSecurityTokenAuthenticator.cs :
	  use LocalServiceSecuritySettings.IssuedCookieLifetime.
	* SpnegoSecurityTokenProvider.cs, SpnegoSecurityTokenAuthenticator.cs,
	  SspiSession.cs : some ongoing updates
	  as well as spnego (kerberos) negotiation handling.
	* TlsClientSession.cs : by specification it is P_SHA, not PRF
	  (though not sure, as CombinedHash is for PRF).

2007-03-30  Atsushi Enomoto  <atsushi@ximian.com>

	* SslnegoCookieResolver.cs : ResolveCookie() should simply return
	  entire SecurityContextToken parsed by dnse:Cookie binary.

2007-03-27  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenAuthenticator.cs, SslSecurityTokenProvider.cs :
	  Ongoing implementation. Applied some changes for SSPI support. 
	  WSSecurityTokenSerializer is implemented to return binary-secret-
	  aware token, so just return it. Fixed some CK-HASH usage.
	* IssuedTokenCommunicationObject.cs :
	  Applied some changes for SSPI support.
	* SpnegoSecurityTokenAuthenticator.cs, SpnegoSecurityTokenProvider.cs,
	  SspiSession.cs : new ongoing implementation for SSPI negotiation.
	* SspiClientSecurityTokenAuthenticator.cs : spnego authenticator
	  will go here (it is just a stub. Created when opening a channel).

2007-03-22  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsClientSession.cs, SslSecurityTokenProvider.cs,
	  SslSecurityTokenAuthenticator.cs : added hash calculation support,
	  not working yet though (probably at service side).

2007-03-20  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenAuthenticator.cs : don't reuse ContextId for SCT.
	  Process ServerFinished before ApplicationData exchange.
	* TlsServerSession.cs : Fixed ClientKeyExchange stream processing.

2007-03-20  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsClientSession.cs, TlsServerSession.cs :
	  added ProcessApplicationData()
	* SslSecurityTokenAuthenticator.cs, SslSecurityTokenProvider.cs :
	  process RequestedProofToken as raw TLS negotiation data.
	* SslnegoCookieResolver.cs : add comments on data format.

2007-03-19  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsClientSession.cs : added CreateAuthHash(), used by authenticator.
	* SecurityContextSecurityToken.cs : support "probably correct" rawdata
	  creation for cookie. It is not the secret key but some binary xml
	  data.
	* SslnegoCookieResolver.cs : added CreateData() for creating
	  binary-xmlized token cookie info.
	* SslSecurityTokenAuthenticator.cs : create session key (dummy for
	  now) and use it instead of MasterSecret. Support t:Authenticator.

2007-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenAuthenticator.cs, SslSecurityTokenProvider.cs :
	  (The build should be fixed at this state.)
	  Implemented RSTR consumption and RSTR collection creation (as the
	  final stage at sslnego phase).

	 Note that it is still not working, as our binary XmlDictionaryReader
	 is not working fine (and still not sure if it will work when they
	 are working fine, as currently there is no way to check if the
	 byte array binary-serialized and encrypted in the dnse:Cookie is
	 the actual symmetric key).

2007-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenParameters.cs : support SecurityContextSecurityToken
	  in CreateKeyIdentifierClause(). Comment out generic xml token
	  support until we need it for sure.

2007-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityContextSecurityToken.cs : implemented almost all members.
	* X509SecurityTokenParameters.cs : added comment on wrong documentation.

2007-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* SslnegoCookieResolver.cs : new file. It contains the resolver for
	  MS's non-standard encrypted sslnego shared key (dnse:Cookie), and
	  more importantly, the description on its data format (which was
	  almost unabled to be guessed, until I use non-protecting 
	  SecurityStateEncoder and dug in depth to Binary XmlDictionaryReader).

2007-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsServerSession.cs, TlsClientSession.cs : complete every operations
	  that depends on ReceiveRecord(). Added accessor to MasterSecret.

2007-03-09  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsServerSession.cs : now ssl negotiation is functional enough to
	  implement SecurityContextToken(Collection) transmit.
	* TlsClientSession.cs : cosmetic code consistency fix.

2007-03-09  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsClientSession.cs, TlsServerSession.cs :
	  okay, there is RecordProtocol, which makes things much easier and
	  correct. Now client seems to be interoperable with .net.

2007-03-08  Atsushi Enomoto  <atsushi@ximian.com>

	* TlsClientSession.cs, TlsServerSession.cs :
	  several fixes; Fixed content type processing (Handshake and
	  ChangeCipherSpec). Fixed chunk output of handshake messages.
	  Set server side key verifier.
	* SslSecurityTokenProvider.cs : use IssueReply for RSTR (fixed SOAP
	  action mismatch).
	* SslSecurityTokenAuthenticator.cs : implemented most of TLS
	  negotiation support, except for the final stage (still not clear
	  what to do here).

2007-03-07  Atsushi Enomoto  <atsushi@ximian.com>

	* AuthenticatorCommunicationObject.cs,
	  CommunicationSecurityTokenAuthenticator.cs,
	  SecureConversationSecurityTokenAuthenticator.cs :
	  new classes for negotiation-based token authenticators.
	* SslSecurityTokenAuthenticator.cs : now it is based on
	  CommunicationSecurityTokenAuthenticator (like corresponding
	  provider class).

2007-03-06  Atsushi Enomoto  <atsushi@ximian.com>

	* SecureConversationSecurityTokenParameters.cs :
	  implemented protected properties.
	* X509SecurityTokenParameters.cs : added missing ToString().

2007-03-05  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenProvider.cs : implemented some client negotiation
	  based on Mono.Security.Protocols.Tls.* and WSTrust contracts.
	* TlsServerSession.cs, TlsClientSession.cs : session state transition
	  manager (controls Tls Context).

2007-03-05  Atsushi Enomoto  <atsushi@ximian.com>

	* UserNameSecurityTokenParameters.cs,
	  RsaSecurityTokenParameters.cs,
	  IssuedSecurityTokenParameters.cs,
	  SslSecurityTokenParameters.cs
	  SspiSecurityTokenParameters.cs,
	  KerberosSecurityTokenParameters.cs,
	  SecureConversationSecurityTokenParameters.cs : updated 
	  InitializeSecurityTokenRequirement() based on updated MSDN docs.
	  Implemented Ssl CreateKeyIdentifierClause().
	  Implemented IssuedToken copy .ctor().

2007-03-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceModelSecurityTokenRequirement.cs,
	  RecipientServiceModelSecurityTokenRequirement.cs,
	  InitiatorServiceModelSecurityTokenRequirement.cs :
	  implemented ToString().

2007-03-01  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenParameters.cs : more initialization of requirement.
	* SslSecurityTokenAuthenticator.cs : new file.

2007-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : okkk, HMAC is extra. Just use SHA1,
	  and not for raw key but for wrapped key.

2007-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs :
	  create HMACSHA1 always with the key to compute hash (I'm not sure
	  it is correct; it is rather to adjust all hash consistent.)

2007-02-21  Atsushi Enomoto  <atsushi@ximian.com>

	* DerivedKeySecurityToken.cs : added ReferenceList for corresponding
	  references to this key.

2007-02-21  Atsushi Enomoto  <atsushi@ximian.com>

	* DerivedKeySecurityToken.cs : new internal class to represent
	  wssc:DerivedKeyToken.

2007-02-16  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : reverted previous change. Key hash
	  could not be identical for the same key, but EncryptedKeySHA1 is
	  based on the wrapped key. So, there is an issue that .NET returns
	  different key than the one in the request message.

2007-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : SecurityKey should hold raw key, not
	  wrapped one.

2007-02-06  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : it cannot resolve clauses from its
	  .ctor() argument identifier clauses. Match EncrypedKeySHA1 clause
	  if the hash values match.
	* InternalEncryptedKeyIdentifierClause.cs :
	  derive from Binary clause.

2007-02-05  Atsushi Enomoto  <atsushi@ximian.com>

	* InternalEncryptedKeyIdentifierClause.cs : new file. It might not be
	  required, but for now it is used to write embedded EncryptedKey in
	  o:SecurityTokenReference.

2007-01-11  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : added internal ReferenceList, to
	  output e:ReferenceList (kind of compromised solution; see comments).

2007-01-09  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : GetWrappedKey() return value should
	  be the encrypted value of argument keyToWrap. Added several argument
	  check.

2006-12-09  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : implemented missing members, except for
	  incomplete MatchKeyIdentifierClause().
	* SecureConversationSecurityTokenParameters.cs : default
	  ChannelProtectionRequirements should cover all body parts i.e.
	  IsBodyIncluded should be true.

2006-12-06  Atsushi Enomoto  <atsushi@ximian.com>

	* SupportingTokenParameters.cs : implemented SetKeyDerivation().

2006-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* X509SecurityTokenParameters.cs : additional constructors.

2006-10-03  Atsushi Enomoto  <atsushi@ximian.com>

	* BinarySecretSecurityToken.cs : it does not seem that it uses
	  urn:uuid:blah ("urn:" is extraneous).

2006-09-27  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityTokenParameters.cs : added internal properties to access
	  protected properties.
	* UserNameSecurityTokenParameters.cs : it's done now.

2006-09-19  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityTokenParameters.cs : removed MonoTODOs.
	* X509SecurityTokenParameters.cs :
	  InitializeSecurityTokenRequirement() is done.

2006-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ProviderCommunicationObject.cs, IssuedTokenCommunicationObject.cs,
	  SslSecurityTokenProvider.cs : both of issued token and ssl requires
	  connection requirement, so commonize the check.

2006-09-15  Atsushi Enomoto  <atsushi@ximian.com>

	* X509SecurityTokenParameters.cs,
	  SspiSecurityTokenParameters.cs,
	  UserNameSecurityTokenParameters.cs,
	  RsaSecurityTokenParameters.cs,
	  IssuedSecurityTokenParameters.cs,
	  SslSecurityTokenParameters.cs : implemented security feature
	  declaration properties (HasAsymmetricKey etc.) and implemented
	  some members.

2006-09-15  Atsushi Enomoto  <atsushi@ximian.com>

	* RsaSecurityTokenParameters.cs : TokenType fix.
	* ProviderCommunicationObject.cs,
	  CommunicationSecurityTokenProvider.cs : an abstract token provider
	  that implements ICommunicationObject, and the abstract communication
	  object that is used in the provider.
	* SslSecurityTokenProvider.cs : a practical example of the above,
	  not done yet though.
	* IssuedTokenCommunicationObject.cs, IssuedSecurityTokenProvider.cs :
	  it is also significantly refactored like the above.
	  The ICommunicationObject part of this provider class now just wraps
	  the intermediate object.

2006-09-12  Atsushi Enomoto  <atsushi@ximian.com>

	* X509SecurityTokenParameters.cs : when token reference style is 
	  Internal, use LocalIdKeyIdentifierClause. The default for this type
	  should be "Any".

2006-09-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceModelSecurityTokenRequirement.cs : implemented IsInitiator.
	* InitiatorServiceModelSecurityTokenRequirement.cs :
	  initialize IsInitiator as true.

2006-09-05  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityContextSecurityTokenAuthenticator.cs,
	  SspiSecurityToken.cs : new files.
	* SupportingTokenParameters.cs : copy ctor became private.

2006-08-30  Atsushi Enomoto  <atsushi@ximian.com>

	* X509SecurityTokenParameters.cs,
	  UserNameSecurityTokenParameters.cs : implemented properties.
	* RsaSecurityTokenParameters.cs : new file.

2006-08-28  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs : (GetToken) partly implemented
	  response message consumption.

2006-08-28  Atsushi Enomoto  <atsushi@ximian.com>

	* X509SecurityTokenParameters.cs :
	  implemented CreateKeyIdentifierClause().

2006-08-28  Atsushi Enomoto  <atsushi@ximian.com>

	* SupportingTokenParameters.cs : added some missing members.

2006-08-25  Atsushi Enomoto  <atsushi@ximian.com>

	* BinarySecretSecurityToken.cs : some .ctor() are protected.

2006-08-25  Atsushi Enomoto  <atsushi@ximian.com>

	* KerberosSecurityTokenParameters.cs : new test.

2006-08-25  Atsushi Enomoto  <atsushi@ximian.com>

	* InitiatorServiceModelSecurityTokenRequirement.cs,
	  RecipientServiceModelSecurityTokenRequirement.cs :
	  just use Properties to set and get each property.
	* SslSecurityTokenParameters.cs : fix ctor chain.
	  hacky InitializeSecurityTokenRequirement implementation.

2006-08-24  Atsushi Enomoto  <atsushi@ximian.com>

	* SecureConversationSecurityTokenParameters.cs :
	  fill SecurityAlgorithmSuite to the requirement.
	* SecurityTokenParameters.cs :
	  added internal IssuerBindingContext property for
	  SecurityBindingElement.SetIssuerBindingContextIfRequired().
	  Use this context in CallInitializeSecurityTokenParameters().

2006-08-23  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenParameters.cs : oops, oops. fix build.

2006-08-23  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenParameters.cs : added missing members.
	* IssuedSecurityTokenProvider.cs : replacing broken data contract
	  based contracts with message based contract.
	  Support IssuerChannelBehaviors.
	* SecureConversationSecurityTokenParameters.cs :
	  more InitializeSerurityTokenRequirement().

2006-08-23  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityContextSecurityTokenResolver.cs
	  ISecurityContextSecurityTokenCache.cs
	  SecurityContextSecurityToken.cs : new files.

2006-08-22  Atsushi Enomoto  <atsushi@ximian.com>

	* SecureConversationSecurityTokenParameters.cs :
	  partially implemented InitializeSecurityTokenRequirement().
	* X509SecurityTokenParameters.cs : added X509ReferenceStyle.
	* SspiSecurityTokenParameters.cs : new file.

2006-08-22  Atsushi Enomoto  <atsushi@ximian.com>

	* SslSecurityTokenParameters.cs,
	  SecureConversationSecurityTokenParameters.cs : new files.
	* SecurityTokenParameters.cs : added internal invoker for
	  InitializeSecurityTokenRequirement().
	* IssuedSecurityTokenParameters.cs, X509SecurityTokenParameters.cs :
	  implement InitializeSecurityTokenRequirement() (incomplete).
	* ServiceModelSecurityTokenRequirement.cs :
	  MessageSecurityVersion is of type SecurityTokenVersion.

2006-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceModelSecurityTokenTypes.cs : new file.

2006-08-16  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs :
	  WST request and response types are renamed.

2006-08-14  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs : use new WSTrust proxy (ClientBase)
	  instead of ChannelFactory.
	* SecurityTokenParameters.cs : added internal helper method for
	  CreateKeyIdentifierClause().
	* ServiceModelSecurityTokenRequirement.cs : in several properties,
	  use TryGetProperty<T>() instead of having direct fields (so that
	  only setting items to "Properties" also affects on those props).

2006-08-11  Atsushi Enomoto  <atsushi@ximian.com>

	* InitiatorServiceModelSecurityTokenRequirement.cs,
	  RecipientServiceModelSecurityTokenRequirement.cs,
	  ServiceModelSecurityTokenRequirement.cs : new files.

2006-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs : moved some premise checks from
	  GetTokenCore() to Open().

2006-08-04  Atsushi Enomoto  <atsushi@ximian.com>

	* WrappedKeySecurityToken.cs : new file.

2006-08-04  Atsushi Enomoto  <atsushi@ximian.com>

	* BinarySecretSecurityToken.cs : new file.

2006-08-03  Atsushi Enomoto  <atsushi@ximian.com>

	* UserNameSecurityTokenParameters.cs,
	  X509SecurityTokenParameters.cs : new files.

2006-08-02  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs : (GetTokenCore) some premise check.

2006-08-01  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs : implemented some properties.
	* RenewedSecurityTokenHandler.cs, IssuedSecurityTokenHandler.cs,
	  IIssuanceSecurityTokenAuthenticator.cs : new files.

2006-08-01  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenProvider.cs, ClaimTypeRequirement.cs : new files.
	* IssuedSecurityTokenParameters.cs : added some missing members.

2006-07-21  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityTokenReferenceStyle.cs : moved from S.SM.Security namespace.

2006-07-21  Atsushi Enomoto  <atsushi@ximian.com>

	* IssuedSecurityTokenParameters.cs, SecurityTokenParameters.cs :
	  new files.

2006-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* SupportingTokenParameters.cs : new file.
