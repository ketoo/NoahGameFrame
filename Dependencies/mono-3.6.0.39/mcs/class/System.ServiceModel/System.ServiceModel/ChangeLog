2010-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs, ServiceHostBase.cs : handle ListenUri to give
	  correct Uri. Reject wrong service endpoint configuration.
	* ClientCredentialSecurityTokenManager.cs : give a bit kind error.

2010-07-27  Atsushi Enomoto  <atsushi@ximian.com>

	* FederatedMessageSecurityOverHttp.cs, OptionalReliableSession.cs,
	  ReliableSession.cs, WSFederationHttpBinding.cs:
	  filled couple of missing members.

2010-07-08  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs, NetNamedPipeBinding.cs,
	  ClientProxyGenerator.cs NetPeerTcpBinding.cs, DuplexClientBase.cs:
	  couple of warning cleanups.

2010-07-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : give non-null Via uri.

2010-06-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceBehaviorAttribute.cs : do not overwrite existing properties
	  which may have been set by preceding behaviors. Fix WSDL output.
	* EnvelopeVersion.cs : fix name and namespace for None property.

2010-06-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : remove TODOs and unused code.
	  Remove comment that is not true.

2010-06-21  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : implement remaining ReadFrom() overloads.
	* ServiceHostBase.cs : remove extra TODOs.

2010-06-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : remove extra throttling field.

2010-06-18  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : Do not build more than one ChannelDispatcher
	  for a Binding. Then check duplicate listen URIs, excluding mex ones.

2010-06-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : retrieve MessageVersion and raise an error
	  if there is none. (Check this earlier than building a listener.)

2010-06-14  Atsushi Enomoto  <atsushi@ximian.com>

	* NetTcpBinding.cs : remove pointless EnvelopeVersion field.
	* ClientRuntimeChannel.cs : disable MessageId output. It does not
	  happen on TCP transport. Added FIXME comment to verify this.

	  This fix makes non-first-time calls from mono client working.

2010-06-04  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientRuntimeChannel.cs : do not create and use extraneous
	  ContractDescription for callback contract. Non-callback ones now
	  works fine.

2010-06-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : CreateProxyType now carefully considers
	  requested proxy type, contract type and callback contract type.
	  i.e. now the resulting proxy has implemented methods for callbacks
	  that are also filled at ContractDescription.
	* ClientRuntimeChannel.cs : reflect some method call changes.

2010-05-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : replace GetFormatter() with Formatter.

2010-05-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : remove unused members for refactoring.
	* OperationContext.cs : add comment on GetCallbackChannel<T>().

2010-05-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : revert the previous change. It was
	  actually sent.

2010-05-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : do not add implicit ReplyTo on output
	  channels.

2010-05-21  Geoff Norton  <gnorton@novell.com>

	* BasicHttpBinding.cs: Transport mode supports authentication as well.

2010-05-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : ServiceMetadataBehavior and ServiceDebugBehavior
	  are special. They must be applied in prior to other behaviors so that
	  newly populated ChannelDispatchers are applied behaviors accordingly.

2010-05-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : remove Sleep() hack and wait channels to get
	  opened to proceed.

2010-05-19  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientBase.cs : implement InnerDuplexChannel and
	  CreateChannel(), by Pieter van der Berg.

2010-05-18  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : revert the previous change, caused regressions.

2010-05-18  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : do not arbitrarily add ServiceDebugBehavior
	  on all configuration-based services. .NET doesn't do that.

2010-04-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs:
	  actually it should be ChannelDispatcher-to-HttpChannelListener,
	  to identify which dispatcher to send reqs.

2010-04-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : add host-to-http-listener mapping so that
	  they can be managed per host.

2010-04-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelTerminatedException.cs : new class.

2010-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : hush on non-ml profile.

2010-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs :
	  use DataContractSerializer.IsStartObject() to check if the fault
	  detail reader is for the fault contract, in addition to Action.

2010-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : fix moonlight build.

2010-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : use FaultContractInfos to create custom
	  FaultException<T>. (It's not picking the expected FCI yet.)

2010-03-30  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : use correct buffer size.

2010-03-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : use FaultConverter as documented at:
	  http://msdn.microsoft.com/en-us/library/ms789039%28VS.100%29.aspx
	  (Though I found _no_ use of this FC class in the world...)

2010-03-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : if there is an existing ChannelDispatcher
	  for the same endpoint URI, reuse it. Patch by Matt Dargavel.

2010-03-18  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : add more.

2010-03-18  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : removed some dummy types (not dummy anymore).

2010-03-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : use namespace for mex binding comparison, to
	  cover other bindings than http (such as https).
	* WSHttpBindingBase.cs : add some comment.

2010-03-16  Jb Evain  <jbevain@novell.com>

	* ClientBase.cs, ClientRuntimeChannel.cs: use MOONLIGHT symbol to
	disambiguate MonoTouch and Moonlight code.

2010-03-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : do not reject endpoints with an identical
	  contract to existing ones but with different binding, address or
	  listen URI.

2010-03-09  Atsushi Enomoto  <atsushi@ximian.com>

	* HttpTransportSecurity.cs : remove MonoTODOs.

2010-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs, ServiceProxyGenerator.cs:
	  make them public and add Contract property for service callback
	  proxies too for the same reason.

2010-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : type cache should be like this
	  (by kumpera).

2010-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientProxyGenerator.cs:
	  Add disabled code, enabled by -d:USE_OD_REFERENCE_IN_PROXY:

	  In generated proxy, avoid using GetCurrentMethod() and pass
	  interface methods to the base ClientRuntimeChannel.

	  (Disabled by default for breakage at
	   CallbackBehaviorAttributeTest.CallbackExample1.)

2010-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs, DuplexChannelFactory.cs,
	  DuplexClientRuntimeChannel.cs, ClientRuntimeChannel.cs,
	  ClientProxyGenerator.cs, ClientBase.cs : add workaround fix for
	  bug #571907, making [Duplex]ClientRuntimeChannel public.

	  Generated proxy type must be stored to not get GCed.

2010-02-10  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : and "To" header is also automatically
	  added if AddressingVersion is WSA1. This likely fixes bug #577139.

2010-02-10  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs, EndpointAddress10.cs :
	  Remove duplicate constant (WSA1).

2010-02-10  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : moved SoapDictionary from BinaryMessageEncoder.

2010-02-10  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : cosmetic attribute reordering.

2010-02-09  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : when WSAddressing10 is used, set ReplyTo
	  and MessageID. (found while fixing #577139).

2010-02-05  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : public->internal.

2010-01-25  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs, ChannelFactory.cs : fix default constructor
	  handling and ensure service endpoint at opening the factory.

2010-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : fix complicated IMetadataExchange handling to
	  pass nunit tests (treat mex binding as special case).

2010-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientRuntimeChannel.cs : do not try to iterate channel
	  acceptor when it is being closed.

2010-01-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : a stability workaround to make nunit test
	  stopper almost reproducible.

2010-01-19  Atsushi Enomoto  <atsushi@ximian.com>

	* WS2007FederationHttpBinding.cs, WS2007HttpBinding.cs:
	  add missing constructors.

2010-01-18  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageSecurityVersion.cs : add new 3.5 members.

2010-01-15  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : add another loop blocker.
	  Do not reject binding configuration with no basic http binding.
	  In SL3 it may be custom and such configuration should be valid.

2010-01-13  Atsushi Enomoto  <atsushi@ximian.com>

	* ExceptionDetail.cs : uncomment DataMember (likely commented out due
	  to missing default serialization in the past).

2010-01-13  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddressBuilder.cs : reader getters were broken.

2010-01-13  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddressBuilder.cs : implement.

2010-01-13  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicHttpBinding.cs : add SL3 EnableHttpCookieContainer support.

2010-01-10  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : uncomment binary message
	  encoding element which was internal-only in SL2 but public in SL3.

2010-01-08  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceProxyGenerator.cs, ServiceRuntimeChannel.cs :
	  Pass service type to correctly retrieve ServiceContractAttribute
	  from the service type, not callback type.

2010-01-08  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : to open duplex callback channel, it must
	  ensure to open the channel itself (not only its inner channel).

2009-12-18  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : remove extra CWLs.

2009-12-18  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs :
	  added ServiceContractGenerationOptions.EventBasedAsynchronousMethods.

2009-12-10  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : a bit more kindful error message.
	* ClientProxyGenerator.cs : fix async parameter offset.

2009-12-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : in AddBaseAddress(), use base_addresses
	  instead of Description. It could be called in InitializeDescription.

2009-12-03  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicHttpBinding.cs : handle transport security properties.

2009-12-02  Sebastien Pouliot  <sebastien@ximian.com>

	* CommunicationObjectAbortedException.cs, ServerTooBusyException.cs,
	ServiceActivationException.cs: Fix base class
	* ServiceKnownTypeAttribute.cs: Seal type and add missing 
	[AttributeUsage] attribute

2009-12-01  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : I made an extraneous change.

2009-12-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs, ChannelFactory_1.cs, ChannelFactory.cs :
	  more SL3 changes.

2009-12-01  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : do not enter infinite loop at
	  empty <binding> element.

2009-11-25  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress10.cs : added it to the 2.1 build for SL3 API.

2009-11-05  Geoff Norton  <gnorton@novell.com>

	* ClientRuntimeChannel.cs: Support OperationContext in async calls
	as well

2009-10-16  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : removed internal dispatcher builder method.

2009-10-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : eliminate possible '/' + '/foo' combination.

2009-10-15  Sebastien Pouliot  <sebastien@ximian.com>

	* ClientRuntimeChannel.cs: Remove the WaitOne 'emitContext' 
	overloads from the Moonlight build. Directly call WaitHandle.
	WaitAll from WaitOne(int) (since the overloads are not always
	present)

2009-10-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : fix relative URI construction for
	  ServiceMetadataExtension. It should create URI like
	  http://localhost/test.svc/wsdl, not http://localhost/wsdl .

2009-10-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : on opening the host, check service endpoints
	  to make sure if there is at least one "non-mex" endpoint.
	  Fix couple of typos.

2009-10-09  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceContext.cs : new constraints on CommunicationObject
	  required calls to base methods.
	* ChannelFactory.cs : ditto. Actually changed timing to call
	  Open() on the internal factory.
	* ServiceHostBase.cs : removed DoOpen() which is almost extra now.
	  Added temporary IMetadataExchange workaround.

2009-10-07  Sebastien Pouliot  <sebastien@ximian.com>

	* OperationContext.cs: Use [ThreadStatic] instead of Thread.
	GetNamedDataSlot with Thread.[Get|Set]Data since it offers type
	safety and don't require keeping extra API inside Moonlight

2009-10-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : a couple of refactoring on contract loopup.
	  Do not push mex contracts to ImplementedContracts.

2009-10-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostingEnvironment.cs : revert the change, to use
	  internal asp.net state again.

2009-10-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : apply endpoint behavior section in config.
	  Otherwise WebScriptEnablingBehavior won't be created.

2009-10-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : fill behaviors first, then add endpoints.
	  IMetadataExchange requires ServiceMetadataBehaviors, but it may be
	  filled only from config (which is to be read later).

2009-10-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : MT users should be warned.
	* ClientBase.cs : make MT-only ChannelBase.Invoke() protected.

2009-09-30  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostingEnvironment.cs : use AspNetCompatibilityEnabled as
	  ASP.NET switch.

2009-09-30  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : use ConfigUtil to get config sections.

2009-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : fix wrong parameter number for async
	  end method with return value.

2009-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientRuntimeChannel.cs : reflecting EndpointDispatcher change.

2009-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : OnOpened() should not hide events that are
	  invoked at the base class.

2009-09-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : partly revert dispatcher builder refactoring
	  to fix some ServiceHostBaseTest regressions.

2009-09-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : it missed end method argument on
	  generating end method proxy.

2009-09-04  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : URI trailing '/' can be added only when the
	  relative URI is non-empty. Do not make http://host/foo.svc as
	  http://host/foo.svc/ , it's not a directory.

2009-09-04  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : add AddBaseAddress(). BaseAddresses must be
	  non-null.

2009-09-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : move DispatcherBuilder out from ServiceHostBase.

2009-09-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : on service contract lookup, do not always
	  expect contract name to match type name.
	* ServiceHost.cs : remove extra local var.

2009-09-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : fix wrong listenUri argument in
	  AddServiceEndpoint() call chain.

2009-09-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : validate behaviors.

2009-09-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : add Extensions.

2009-08-26  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : add (incomplete) binary
	  encoder support at config layer. see:
	  http://lists.ximian.com/pipermail/mono-list/2009-August/043245.html

2009-08-26  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : use ulong as same as Welcome message value.

2009-08-24  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : p2p constants should rather go here.

2009-08-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, DuplexClientRuntimeChannel.cs : split out
	  from former to latter and implemented most part of listener part.
	  Make sure to open internal channel at base ClientRuntimeChannel.
	* ClientProxyGenerator.cs : minimize !NET_2_1 to here.

2009-08-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : some refactoring to reduce weird limitation
	  to apply behaviors to endpoints. (no need to limit to [0]).

2009-08-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : some refactoring to isolate dispatcher
	  builder code from here.

2009-08-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : moved some code to channel/endpoint dispatcher
	  to reduce their dependencies on this type.

2009-08-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : implement async OnBegin/EndOpen like close.
	  Add FIXME and OnOpen() override on duplex channel.

2009-08-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : support UnknownMessageReceived (used by
	  ChannelDispatcher).

2009-08-20  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs, OperationContextScope.cs :
	  implement IsUserContext.

2009-08-20  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs, ChannelFactory_1.cs: with static factory
	  methods, they should close the factory when the channel is closed,
	  but nonstatic CreateChannel() could be called more than once, so
	  do not always close it.
	* ClientRuntimeChannel.cs : take OperationContext.Current into
	  consideration (it could be created by users).

2009-08-19  Atsushi Enomoto  <atsushi@ximian.com>

	* NetNamedPipeBinding.cs, NetNamedPipeSecurity.cs
	  NamedPipeTransportSecurity.cs : new files.
	* Dummy.cs : remove above ones.

2009-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : wildcard action support was not working
	  for one-way channels.

2009-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : set expected AddressFilter.

2009-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : #if !NET_2_1 is removing code too much.

2009-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : made some properties in duplex context
	  channel dispatching to internal client.

2009-08-14  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContextScope.cs : check null arg.

2009-08-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : return timeouts that are set at
	  dispatch runtime later than its .ctor(). Provide ListenUri too.

2009-08-14  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs : add AddressFilterMode and SupportedAddressingMode.
	* ServiceBehaviorAttribute.cs : added missing properties.

2009-08-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : (ChannelBase) now ClientRuntimeChannel demands an
	  explicit address.

2009-08-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : use new IOperationInvoker implementation.

2009-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : change .ctor() args.
	  Add proxy hook methods that simply calls those in callback
	  ClientRuntimeChannel.

2009-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : create callback runtime here, if required.

2009-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : factory was not fully optional. Add
	  contextChannel argument to make room for duplex callback channel.

2009-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : split client-specific code generation
	  from those common to service callback generation.
	* ServiceProxyGenerator.cs : new file, uses common basis above.

2009-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : created derived duplex type.

2009-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : close/abort channels.
	  factory is optional now.

2009-08-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : unify IChannel field to one.

2009-08-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : de-factorying toward callback instancing.

2009-08-06  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs, ClientRuntimeChannel.cs,
	  ChannelFactory_1.cs : more ServiceEndpoint dep reduction.

2009-08-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : removing extra deps on ServiceEndpoint.

2009-08-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : eliminate dependency on ChannelFactory,
	  which will block using it for callback instances.

2009-08-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : fix 2.1 build.

2009-08-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : actually CallbackInstance is set and
	  should be available.

2009-08-05  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs, ClientProxyGenerator.cs, ClientBase.cs,
	  ChannelFactory_1.cs, DuplexClientBase.cs :
	  create IDuplexContextChannel from ClientBase if required.

2009-08-05  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientRuntimeChannel.cs : new proxy base channel.

2009-08-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : it should implement IServiceChannel,
	  not IClientChannel.

2009-08-04  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : GetCallbackChannel<T>() should just return
	  channel (which should also implement T, which must be callback
	  type).

2009-08-04  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceBehaviorAttribute.cs : cosmetic spelling fix.

2009-07-31  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientProxyGenerator.cs, ClientBase.cs,
	  ChannelFactory_1.cs : now proxies take remote address and via uri
	  which could be optionally specified and use it whenever required.

2009-07-30  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : remove TCP listener creator.
	  It is now in PeerDuplexChannel.

2009-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* TransactionFlowAttribute.cs : new file.

2009-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : implement some remaining members.
	  Remove null argument check and make setter optional.

2009-07-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs: add some null checks.

2009-07-17  Atsushi Enomoto  <atsushi@ximian.com>

	* NetTcpBinding.cs : a couple of members should be passed to
	  appropriate binding element.

2009-07-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceBehaviorAttribute.cs : fix IsolationLevel default value.
	* CallbackBehaviorAttribute.cs : ditto.
	  Partly implemented interface methods.

2009-07-14  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationBehaviorAttribute.cs :
	  add AutoDisposeParameters, and apply it.
	* CallbackBehaviorAttribute.cs : added couple of missing members.

2009-07-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceBehaviorAttribute.cs : fix default values and simplify code.

2009-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientBase.cs : oops, fix build.

2009-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexClientBase.cs : add missing members here too.

2009-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : some of Silverlight API are backported to full CLR.

2009-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs : fill missing members.

2009-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : significant refactoring. It does not call resolver
	  to manage the node itself but rather hold its state.

2009-07-09  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : some implementation cleanup before significant
	  refactoring. Mesh state is not maintained here. Use optionally
	  fixed listener address and port. Set offline status when closed.

2009-07-08  Atsushi Enomoto  <atsushi@ximian.com>

	* NetPeerTcpBinding.cs : Fix interface implementations.

2009-07-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceBehaviorAttribute.cs : fill SingletonInstanceContext on
	  opening the host.

2009-06-25  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceContext.cs : add missing member / cosmetic API fix.
	* ServiceBehaviorAttribute.cs : InstanceContextMode is per-session
	  by default.

2009-06-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : remove more TODO.

2009-06-23  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : implement SessionId.
	* ServiceHostBase.cs : implement open/close async methods.
	  remove some TODOs.

2009-06-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : remove some NIEs for actual use.
	  Dispose->Close.

2009-06-12  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : no need for NIE at OnAbort() (at least so far).

2009-06-12  Atsushi Enomoto  <atsushi@ximian.com>

	 * ServiceHostBase.cs : do not give up releasing further channel
	   dispatchers when one of them threw an error. Use strict timeout.

2009-06-08  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceContext.cs :
	  Add call to base (see CommunicationObject change).

2009-05-26  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : IncomingMessage* properties should work
	  for non-reply channels as well.

2009-05-25  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : if Resolve() returns no address, create a new peer
	  address here, and shut it down when it is closed.

2009-05-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ServiceRuntimeChannel.cs :
	  IDuplexSession was not supported.

2009-05-13  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : missing from the previous commit (remove
	  timeouts).

2009-04-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : split dispatcher open from dispatcher loop start.
	  Use DispatchRuntime.Type to specify service type.

2009-04-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : reordered preferrence of created channel types,
	  and fixed to allow duplex channels without CallbackContractType
	  (which does not always exist for duplex channels).

2009-04-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : now Request() supports duplex ones too.

2009-04-22  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs : remove todos. Implement CreateChannel().

2009-04-21  Sebastien Pouliot  <sebastien@ximian.com>

	* ClientBase.cs (NET_2_1): Change cctor not to require being 
	[SecuritySafeCritical] and drop IDisposable.

2009-04-21  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : remove extra field.

2009-04-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : setup IChannel instance at construction
	  time, so that it can GetProperty<T>() immediately after
	  ChannelFactory.CreateChannel().
	  Implement some properties.

2009-04-21  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNode.cs : update API to the latest .NET amd implement some.

2009-04-21  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerResolver.cs, PeerResolverImpl.cs :
	  update API to the latest .NET.

2009-04-20  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : remove some peer transport stuff.
	* NetPeerTcpBinding.cs : implemented some members.
	* PeerSecuritySettings.cs : added copy utility method.

2009-04-17  Geoff Norton  <gnorton@novell.com>

	* ChannelFactory.cs: Ensure we create and open a factory here,
	avoids a NRE regression in
	System.ServiceModel.ClientRuntimeChannel.SetupRequestChannel ()

2009-04-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs, ClientRuntimeChannel.cs : implemented
	  CreateFactory() and moved corresponding code from latter to
	  former. Made implementation closer to .NET behavior.

2009-04-16  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientProxyGenerator.cs, ClientBase.cs,
	  ChannelFactory_1.cs :
	  Sort of reverted internal client channel type changes from
	  February, but to work fine in SL2 too. Now ChannelFactory<T>
	  can handle combined interface of IClientChannel and the contract.

2009-04-16  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs : a bit of constructor implementation.

2009-04-08  Atsushi Enomoto  <atsushi@ximian.com>

	* NetPeerTcpBinding.cs : ListenIPAddress is IPAddress here too.

2009-04-08  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerTransportSecuritySettings.cs : new.
	* PeerSecuritySettings.cs : Transport was missing.

2009-04-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : add duplex channels as channel candidates.

2009-04-07  Atsushi Enomoto  <atsushi@ximian.com>

	* IOnlineStatus.cs : added missing interface.

2009-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : do not bork at some unimplemented bits.

2009-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* CrossDomainAccessManager.cs: temporarily disable
	  access checker to just warn invalid access for now.

2009-03-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceKnownTypeAttribute.cs : correct implementation to populate
	  specified types.

2009-03-05  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageHeaderException.cs : added missing members.

2009-03-04  Atsushi Enomoto  <atsushi@ximian.com>

	* CrossDomainPolicy.cs : added validation method. Not sure if it is
	  complete.
	* CrossDomainAccessManager.cs : validate against crossdomain.xml too.

2009-03-04  Atsushi Enomoto  <atsushi@ximian.com>

	* CrossDomainAccessManager.cs : replace reflection-based
	  Uri retrieval with actually working one.

2009-03-04  Atsushi Enomoto  <atsushi@ximian.com>

	* CrossDomainAccessManager.cs : 2.1 WebRequest misses some
 	  members used here.

2009-03-04  Atsushi Enomoto  <atsushi@ximian.com>

	* CrossDomainAccessManager.cs, ClientAccessPolicy.cs,
	  CrossDomainPolicy.cs : new. support cross domain access check.

2009-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : give successful WCF call completion info.

2009-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : diagnose more precisely.

2009-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : fix wrong argument index.

2009-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : use overridable CreateChannel().

2009-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : make it work with SL2 UI threading model.

2009-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : simply use CodeMethod.GetArg().

2009-02-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientProxyGenerator.cs,
	  ClientBase.cs, ChannelFactory_1.cs, DuplexClientBase.cs:
	  now ClientBase<TChannel>.InnerChannel became ChannelBase<T> as
	  SL2 does. This change required several internal changes in
	  proxy code generation. Also, now TChannel must be class.

2009-02-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : it's not going to create ClientRuntime
	  anymore here. Moving to ServiceEndpoint.cs as the first stage.
	* ClientBase.cs : some comment.

2009-02-13  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : for default constructor, first try to
	  retrieve configuration from its contract name.
	  Diagnose errorneous configuration.
	* SilverlightClientConfigLoader.cs : basicHttpBinding/binding
	  element could be defined two or more times.

2009-02-12  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : so, the proxy generator was buggy to
	  generate end invoke.
	* ClientBase.cs : make it simpler and just work.

2009-02-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : oops, should have tried build with net_2_1_raw.

2009-02-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientBase.cs :
	  implement remaining ChannelBase members and made some required
	  changes in ClientRuntimeChannel.

2009-02-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientProxyGenerator.cs :
	  change async methods signature and dynamic code generation.

2009-01-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : added another missing type.

2009-01-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : fix wrong file reference.

2009-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs :
	  removed extraneous code. Handle "*" (wildcard).

2009-01-22  Alan McGovern  <amcgovern@novell.com>

	* BasicHttpBinding.cs: In silverlight ReaderQuota is immutable and always
	has a default value of ReaderQuota.Max. Therefore no need to call CopyTo.

2009-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* SilverlightClientConfigLoader.cs : in Silverlight, there is
	  "ServiceReference.ClientConfig" which is used to resolve service
	  endpoint configuration. It is to consume that file.
	* ChannelFactory.cs : use above in SL.
	* ClientBase.cs : rename some misleading param names.

2009-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : some code comment.
	* ClientBase.cs : remove some todos.
	* ClientRuntimeChannel.cs : hack some session properties.

2009-01-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : implement InvokeAsync(). Not sure if it works yet.

2009-01-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : fix reflection-based GetConstructor()
	  so that it can work in 2.1 profile (.ctor is made internal).

2009-01-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServerTooBusyException.cs, CommunicationObjectAbortedException.cs,
	  ServiceActivationException.cs : new exception types.

2009-01-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs, ClientRuntimeChannel.cs : added support for
	  interactive channel initializers.

2009-01-12  Geoff Norton  <gnorton@novell.com>

	* ClientBase.cs: Added a few delegates missing from ChannelBase

2009-01-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : added ChannelBase class inside.

2009-01-07  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : changes to include this in net_2_1_raw.

2008-05-28  Noam Lampert <noaml@mainsoft.com>
	* ServiceHost.cs: Allow services to implement more than one contract.

2008-05-22  Noam Lampert <noaml@mainsoft.com>
	* ServiceBehaviorAttribute.cs: Propagate IncludeExceptionDetailsInFaults
	* ExceptionDetail.cs: Modify implementation so that deserialized instance will also work
	* ClientRuntimeChannel.cs: Throw correct fault exception
	
2008-05-01  Eyal Alaluf <eyala@mainsoft.com>

	* ClientProxyGenerator.cs: Add explicit casts for allowing boxing.
	* ServiceHostBase.cs: Simplified in/out parameter handling.

2008-04-22  Igor Zelmanovich <igorz@mainsoft.com>

	* ServiceHostBase.cs: initialize DispatchOperation's Invoker and Formater.
	
2008-04-21  Igor Zelmanovich <igorz@mainsoft.com>

	* ServiceHostBase.cs: consider refactoring of HttpGetWsdl.

2008-04-17  Igor Zelmanovich <igorz@mainsoft.com>

	* ServiceHostBase.cs: fixed BuildChannelDispatcher, init of
	endpoint dispatcher's ContractFilter

2008-04-17  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* ServiceRuntimeChannel.cs: refactoring, consider chganges in channel
	dispatcher and endpoint dispatcher

2008-04-17  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* ServiceHostBase.cs: fixed BuildChannelDispatcher, init of
	endpoint dispatcher's ContractFilter

2008-04-14  Igor Zelmanovich <igorz@mainsoft.com>

	* ExtensionCollection.cs:
	fix ClearItems, InsertItem, RemoveItem and SetItem,
	call Attach/Detach of items.			

2008-04-13  Igor Zelmanovich <igorz@mainsoft.com>

	* BasicHttpBinding.cs:
	* NetMsmqBinding.cs:
	* NetPeerTcpBinding.cs:
	consider fixed API in BindingElementCollection class.			

2008-04-10  Eyal Alaluf <eyala@mainsoft.com>

	* ClientProxyGenerator.cs: Add support for out and by ref params.

2008-04-08  Roei Erez <roeie@mainsoft.com>

	* ServiceHostBase.cs:
	- Refactoring of InitializeRuntime method:
	  -- Build ChanneldDispatcher correctly
	  -- Build EndPointDispatchers
	  -- Fix the order of applying behaviors

2008-04-03  Igor Zelmanovich <igorz@mainsoft.com>

	* ServiceHostBase.cs:
	- implement InitializeRuntime.
	- load behaviors configuration properly.

2008-04-04  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* BasicHttpBinding.cs: fixed GetTransport method

2008-04-03  Roei Erez <roeie@mainsoft.com>

	* ServiceHostBase.cs: fix ApplyConfiguration to consider only the current
	service according to the 'Description' attribute.

2008-04-02  Igor Zelmanovich <igorz@mainsoft.com>

	* ServiceHost.cs:
	* ServiceHostBase.cs:
	ServiceAuthorizationBehavior and ServiceDebugBehavior are added during
	ApplyConfiguration. 

2008-04-01  Igor Zelmanovich <igorz@mainsoft.com>

	* UriSchemeKeyedCollection.cs: fix API (.ctor signature).

2008-04-01  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* BasicHttpBinding.cs: fixed ReaderQuotas in
	BuildMessageEncodingBindingElement

2008-03-31  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* BasicHttpBinding.cs: fixed GetTransport, TransportBindingElement init

2008-03-31  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* BasicHttpBinding.cs: fixed configuration issues

2008-03-27  Igor Zelmanovich <igorz@mainsoft.com>

	* ReliableMessagingVersion.cs: add missing API.

2008-03-25  Vladmir Krasnov  <vladmimir@mainsoft.com>

	* ServiceHostBase.cs: implemented ApplyConfiguration, fixed service 
	hosting

2008-03-04  Eyal Alaluf <eyala@mainsoft.com>

	* ChannelBase.cs: Move configuration handling to ChannelFactory.
	* ChannelFactory_1.cs: Add arguments checks.
	* ChannelFactory.cs: Implement ApplyConfiguration.

2008-02-28  Eyal Alaluf <eyala@mainsoft.com>

	* ChannelBase.cs: Handle better configuration lookup and contract
	  attributes.
	  Add argument null checks.
	* ChannelFactory_1.cs: Indentation chnges.

2008-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs : CreateChannel() is extra.

2008-02-27  Eyal Alaluf <eyala@mainsoft.com>

	* ChannelBase.cs: Handle case where contract configuration name is set
	  in the 'TChannel' type custom attributes.

2008-02-27  Eyal Alaluf <eyala@mainsoft.com>

	* WSHttpBindingBase.cs DuplexChannelFactory.cs: Fix compilation warnings.

2008-02-20  Atsushi Enomoto  <atsushi@ximian.com>

	* NetTcpBinding.cs : store transport and use it for some properties.
	* EnvelopeVersion.cs : updated destinations to 3.0 SP1.

2008-02-17  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : implemented OutgoingMessageHeaders and
	  OutgoingMessageProperties.
	* ExtensionCollection.cs : Pass syncRoot to base.
	  Implemented Find(), FindAll() and IsReadOnly.

2008-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : reject relative Uri.

2008-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : populate ClientOperations before applying
	  IEndpointBehavior and IContractBehavior so that they can access to
	  ClientOperations.

2008-02-14  Igor Zelmanovich  <igorz@mainsoft.com>

	* ServiceContractAttribute.cs: fixed public API
	added property "ConfigurationName"	

2008-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : build fix.

2008-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs, ClientProxyGenerator.cs : the client proxy does not
	  have to be generic, so removed the type argument.
	* ChannelFactory_1.cs : ditto.
	  EnsureOpened() when creating a channel (it
	  used to do so, but disappeared at some point ...).
	* ClientRuntimeChannel.cs : ditto (type argument).
	  Factory must have been opened before creating this channel, so
	  do not try to open factory here.

2008-02-08  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : when listenUri is not absolute, make it
	  absolute before being passed to ServiceEndpoint.
	  Tiny message string fix ("string + string" is hard to translate).

2007-08-19  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddressBuilder.cs ServiceBehaviorAttribute.cs :
	  some more cosmetic API fixes and missing MonoTODOs.

2007-08-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : ServiceBehaviorAttribute must be first retrieved
	  from the service type (or instance).
	* ServiceBehaviorAttribute.cs : InstanceContextMode default is
	  PerCall. Implement support for well-known instance.

2007-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNodeAddress.cs : add private .ctor() for deserialization.

2007-08-16 Marcos Cobena (marcoscobena@gmail.com)

	* AllEnums.cs: PeerReferralPolicy lives now inside System.ServiceModel.PeerResolvers.

2007-08-16  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageContractAttribute.cs : IsWrapped = true by default.

2007-07-26  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerNodeAddress.cs : with private members it is always possible
	  to hack around non-datacontract types.

2007-07-06  Atsushi Enomoto  <atsushi@ximian.com>

	* DuplexChannelFactory.cs: New static method.

2007-07-06  Atsushi Enomoto  <atsushi@ximian.com>

	* MsmqBindingBase.cs NetMsmqBinding.cs : initialize some fields.
	  implemented NetMsmqBinding.CreateBindingElements().

2007-07-24 Marcos Cobena (marcoscobena@gmail.com)

	* DuplexChannelFactory.cs: New static method.

2007-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* NetMsmqSecurity.cs PoisonMessageException.cs
	  MsmqException.cs MsmqPoisonMessageException.cs
	  MsmqBindingBase.cs MessageSecurityOverMsmq.cs
	  NetMsmqBinding.cs MsmqTransportSecurity.cs :
	  couple of msmq stubs.
	* Dummy.cs : removed newly stubbed ones.

2007-04-27  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs, EndpointAddress10.cs :
	  more refactoring.
	  read Metadata element.

2007-04-20  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs,
	  EndpointAddress10.cs,
	  EndpointAddressAugust2004.cs :
	  some rewrite on WriteXml(). For WSA10, it is now based on XML
	  serializer. (Read methods won't go that way btw.)
	  IXmlSerializable.GetSchema() in both versions return null.
	  public GetSchema() returns schema from W3C.

2007-04-17  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added couple of consts.

2007-04-05  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added WsaIdentityUri.
	* EndpointIdentity.cs : implemented ToString().
	* X509CertificateEndpointIdentity.cs : Initialize() was missing.
	* EndpointAddress.cs : implemented WriteContentsTo(), which is
	  actually what WriteTo() should just call. Handle X509 identity
	  as its own way to be serialized.

2007-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : support mutual sslnego.

2007-04-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceKnownTypeAttribute.cs : added.

2007-03-30  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added soem OIDs.

2007-03-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  support spnego authenticator and provider. Provider should not be
	  SspiSecurityTokenProvider, as it is not for spnego.
	* Constants.cs : added some spnego constants.

2007-03-20  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added LifetimeFormat.

2007-03-20  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added Tlsnego WST proof token type.

2007-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added namespace for dnse:Cookie in ssl negotiation.

2007-03-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ExceptionDetail.cs : new file.

2007-03-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs :
	  moved code for applying behavior to ChannelDispatcher.cs.

2007-03-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : added DisplayInitializationUI() stub.
	* ServiceHostBase.cs : raise an error when no channel could be built.

2007-03-05  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added consts for ssl and negotiation bindings.
	* ClientCredentialsSecurityTokenManager.cs :
	  IsIssuedSecurityTokenRequirement() should not return true for
	  non-IssuedToken parameters.

2007-03-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  internalize IsIssuedSecurityTokenRequirement().
	  Use SecurityTokenRequirement.ToString().

2007-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBinding.cs : for UserName credentials, don't require
	  signature confirmations.

2007-02-21  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added WssdDefaultLabel.

2007-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs : ... and largely implemented.

2007-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceRuntimeChannel.cs-tmp, ServiceRuntimeChannel.cs :
	  renamed former to latter.

2007-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs, OperationContextScope.cs : implemented some
	  members and fixed some misimplementations. (They cannot be in use
	  until I create IServiceChannel implementation, like 
	  ClientRuntimeChannel but for services.)

2007-02-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : so, we didn't add ChannelProtectionRequirements
	  and subsequently the reply message was not signed at all.

2007-01-31  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added wsse EncryptedKeySHA1.

2007-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageSecurityVersion.cs, Constants.cs :
	  Use constants in MessageSecurityTokenVersion.
	* ClientCredentialsSecurityTokenManager.cs :
	  CreateSecurityTokenSerializer() should consider securityVersion
	  and emitBspRequiredAttributes based on SecurityTokenVersion.

2007-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added WSSEncryptedKeyToken.

2007-01-10  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added WssBase64BinaryEncodingType (but I cannot
	  enable the code that uses it :| )

2006-12-09  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : moved ChannelProtectionRequirements
	  population to ChannelProtectionRequirements.cs with some fixes.

2006-12-05  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added WS-Security X509 thumbprint identifier
	  value type.

2006-12-04  Atsushi Enomoto  <atsushi@ximian.com>

	* EnvelopeVersion.cs : added Soap12UltimateReceiver to be used in
	  MessageHeader.

2006-12-04  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : (GetContract) If the service type is
	  IMetadataExchange, don't require ServiceMetadataBehavior.

2006-10-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : on closing channel dispatchers, they will
	  remove themselves from dispatchers, so don't iterate directly.

2006-10-18  Ankit Jain  <jankit@novell.com>

	* ServiceHostBase.cs (GetContract): Add HttpGetWsdl contract by default
	to ImplementedContracts.

2006-10-18  Ankit Jain  <jankit@novell.com>

	* ServiceHostBase.cs (GetContract): Throw if adding a IMetadataExchange
	endpoint but ServiceMetadataBehavior has not been added.
	Add contract for HttpGetWsdl to ImplementedContracts.

2006-10-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceSecurityContext.cs : added some members for testing
	  SecurityMessageProperty.
	* WSHttpBinding.cs : some fixes for X509 token modes.

2006-10-06  Ankit Jain  <jankit@novell.com>

	* ServiceHostBase.cs (PopulateDispatchOperation): Identify 'catch all'
	operation and set UnhandledDispatchOperation accordingly.

2006-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBinding.cs : Fixed x509 parameter initialization.
	* ClientRuntimeChannel.cs : get max fault size from ClientRuntime.

2006-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : when fault happened, don't parse it as
	  the expected result but throw FaultException instead.

2006-10-04  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs, ClientRuntimeChannel : pass operation name
	  to ClientRuntimeChannel.Process() explicitly, to get correct 
	  OperationDescription.

2006-10-04  Ankit Jain  <jankit@novell.com>

	* ServiceHostBase.cs (Extensions): Implement.
	(GetContract): HACK to allow IMetadataExchange as the contract for an
	endpoint.
	(DoOpen): Call IServiceBehavior.ApplyDispatchBehavior
	* ServiceBehaviorAttribute.cs (ApplyDispatchBehavior): Remove NYI
	exception.
	* InstanceContext.cs (GetServiceInstance): Implement.

2006-10-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceBehaviorAttribute.cs : added IncludeExceptionDetailInFaults
	  and removed old ReturnUnknownExceptionsAsFaults.
	* Constants.cs : added WsaAnonymousUri.
	* EndpointAddress.cs : use above.
	* ClientRuntimeChannel.cs : comment on FIXME.

2006-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : setup the channel before inspection.

2006-09-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : implemented some of
	  CreateSecurityTokenAuthenticator(), which seems used in
	  IRequestChannel for security.

2006-09-27  Ankit Jain  <jankit@novell.com>

	* Dummy.cs (ServiceHostingEnvironment): Remove.
	* ServiceHostingEnvironment.cs: New.

2006-09-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : HasProtectionLevel computation for
	  ChannelProtectionRequirements was more complex.

2006-09-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : pass proper IsBodyIncluded argument.
	  Fix warnings.

2006-09-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : MessagePartSpecification is created for
	  every message i.e. per action, not per message part.
	* ServiceContractAttribute.cs, FaultContractAttribute.cs,
	  OperationContractAttribute.cs, MessageContractAttribute.cs :
	  Fixed HasProtectionLevel. It is always true when ProtectionLevel is set.

2006-09-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : default timeouts could be retrieved from Binding.
	* ServiceContractAttribute.cs : added [Has]ProtectionLevel.
	* ChannelFactory_1.cs, ClientRuntimeChannel.cs :
	  ChannelProtectionRequirements is needed for BindingParameterCollection.
	  Actually it was created but was going nowhere.
	* ClientBase.cs : removed some MonoTODOs.

2006-09-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : pass binding and endpoint address directly to 
	  ChannelFactory.ctor() so that it does not miss ClientCredentials.

2006-09-20  Atsushi Enomoto  <atsushi@ximian.com>

	* WSDualHttpSecurity.cs, DnsEndpointIdentity.cs, SpnEndpointIdentity.cs,
	  MessageSecurityOverTcp.cs, NetTcpSecurity.cs, UpnEndpointIdentity.cs,
	  TcpTransportSecurity.cs : added missing types.
	* Dummy.cs : removed all above.
	* EndpointIdentity.cs : implemented.
	* BasicHttpBinding.cs : consider HTTPS.
	* MessageSecurityOverHttp.cs : IsSecureConversationEnabled() always
	  returns true unless overriden.
	* WSDualHttpBinding.cs : added Security.
	* NetTcpBinding.cs : assorted API fixes and some implementation code.

2006-09-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : remove ClientCredential addition.

2006-09-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs :
	  oops, MessageBodyDescription.ReturnValue could be null.

2006-09-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : support kerberos provider
	  creation (though it won't work anyways).
	* ChannelFactory_1.cs : add client credentials to the endpoint _here_,
	  not only in ClientBase. Also support ChannelProtectionRequirements
	  which will be required by message security support.

2006-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageSecurityVersion.cs : SecurityTokenVersion is implemented.

2006-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : null credential check.
	  Make "missing credential error" message correct (the missing 
	  certificate might be service certificate while it always blamed
	  client certificate).

2006-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : by default, use non-session channel i.e.
	  use session channels only for those bindings that does not allow
	  sessionless channels.

2006-09-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : more implementation in
	  CreateSecurityTokenProvider().

2006-09-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : refactored
	  communication-based token provider creation. See S.SM.S.Tokens
	  change as well.

2006-09-12  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBinding.cs : set X509ReferenceStyle to Thumbprint in
	  x509 ProtectionTokenParameters by default.

2006-09-08  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : fixed IOutputChannel support as well to
	  open in prior to issue an output (send).

2006-09-08  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : wrong message to inspect response.

2006-09-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : Binding.MessageVersion could be null, so
	  set default in such case.

2006-09-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : seems like RC1 does not automatically attach
	  ServiceMetadataBehavior.
	* ServiceHostBase.cs : use const instead of literal.

2006-09-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ClientBase.cs :
	  implemented IClientMessageInspector support.

2006-09-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  implement service certificate acquisition: it depends on the
	  KeyUsage and IsInitiator whether it uses client certificate or
	  service certificate. (And service certificate acquisition is a bit
	  complex.)

2006-09-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : now it is this type that creates the inner
	  proxy type (CreateRuntime() and its usage are moved from
	  ClientBase). CreateChannel() should create an actual proxy
	  instance instead of just an IChannel.
	* ClientBase.cs : inner_proxy and inner_channel are thus filled
	  just using ChannelFactory.CreateChannel() now.
	* ClientProxyGenerator.cs : it now generates the proxy type from
	  ChannelFactory, not ClientBase<T>.
	* ClientRuntimeChannel.cs : now that Binding.MessageVersion could
	  return null, it must fill default version by itself.
	  Updated .ctor() arguments and fields.

2006-09-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : implement EnsureOpened().
	* ChannelFactory_1.cs : open the factory before creating a channel.

2006-09-05  Atsushi Enomoto  <atsushi@ximian.com>

	* RsaEndpointIdentity.cs, WSFederationHttpSecurity.cs,
	  WSFederationHttpBinding.cs, ServiceAuthorizationManager.cs :
	  more new files.
	* WSFederationBinding.cs : removed obsolete file.
	* EndpointIdentity.cs : implemented some.
	* FederatedMessageSecurityOverHttp.cs : some default value settings.
	* Dummy.cs : removed some new files, and added S.SM.PR classes.

2006-09-01  Atsushi Enomoto  <atsushi@ximian.com>

	* TransactionProtocol.cs : changing default tx will anyways cause 
	  problem, so just change it to default borking OleTx.

2006-08-31  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : there's a big todo on this class.
	* ClientBase.cs : minor MonoTODO comment.
	* Constants.cs : added ws-secureconv namespace.
	* ClientRuntimeChannel.cs : implemented several members.

2006-08-30  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : apply ServiceBehavior.AddBindingParameters().
	  Renamed Initialize() -> OnOpen().
	* Dummy.cs : removed RsaSecurityTokenParameters.

2006-08-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : (CreateDescription) add ServiceDebugBehavior to 
	  ServiceDescription. Note that it does not mean it is "enabled".

2006-08-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : use endpoint behaviors to collect binding
	  parameters which is used in BuildChannelFactory().

2006-08-25  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs : fixed UserNamePasswordValidationMode values.
	* Dummy.cs : removed security classes that are added this time.

2006-08-25  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  implemented AnonymousSslnego provider creation.
	  Use SecurityTokenVersion for CreateSecurityTokenSerializer().
	* WSHttpBinding.cs : when NegotiateServiceCredential is false,
	  it does not use AnonymousSslnego but uses X509. Similarly, when 
	  ClientCredentialType is Windows not SSPI but Kerberos.
	* Dummy.cs : removed KeberosSecurityTokenParameters.

2006-08-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  more CreateSecureConversationProvider() implementation.

2006-08-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  ongoing SecureConversation requirement support.
	* Constants.cs : imported some constants from ../../tools/sts.
	* WSHttpBinding.cs : tiny comments.

2006-08-23  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : removed SecurityContextSecurityToken.

2006-08-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  improved CreateSecurityTokenProvider(). Split into some methods.
	  (Next thing to do is to implement secure conversation stuff here.)
	* AllEnums.cs : added X509KeyIdentifierClauseType.
	* WSHttpBinding.cs : default message security version is
	  WSS11+BasicProfile. Set ProtectionTokenParameters, either of
	  the returned element itself or of the secure conversation element.

2006-08-22  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : removed MessagePartSpecification and
	  SecureConversationSecurityTokenParameters.
	* WSHttpBinding.cs : turned out that it basically create 
	  SecureConversationSecurityTokenParameters for 
	  ProtectionTokenParameters of the security binding element.
	  (still needs more love here.)

2006-08-21  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageContractAttribute.cs : added IsWrapped, WrapperName and 
	  WrapperNamespace.
	* MessageSecurityVersion.cs : default is WSS11 w/o Basic Profile.

2006-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBinding.cs : if Message security does not say
	  EstablishSecurityContext, call SetKeyDerivation(false).

2006-08-17  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added WSS token URIs. modified X509v3 constant.
	* Dummy.cs : added SspiSecurityToken.

2006-08-14  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContractAttribute.cs : added missing [Has]ProtectionLevel.
	* ClientCredentialsSecurityTokenManager.cs : implementes some members
	  for client side security token creation.
	* WSHttpBinding.cs : in CreateMessageSecurity(), create proper
	  security token parameters depending on its credential type. Also
	  for non-message security, return null.
	* WSHttpBindingBase.cs : consider the case that
	  CreateMessageSecurity() returns null. Create proper messaging
	  encoding binding element that considers EnvelopeVersion,
	  MessageEncoding and TextEncoding.
	* ClientRuntimeChannel.cs : channel factory must be opened before
	  creating a channel. Some more input check.

2006-08-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs :
	  Credentials -> ClientCredentials.

2006-08-10  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentialsSecurityTokenManager.cs : new file.
	* Dummy.cs : removed above.
	* ChannelFactory.cs : return ClientCredentials from endpoint's
	  behavior.
	* ClientBase.cs : removed extra field.

2006-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs, ServiceHost.cs : minor API fixes.

2006-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : do nothing on OnClose().
	* ChannelFactory_1.cs : fixed some method signatures.
	* X509CertificateEndpointIdentity : implemented public members.
	* EndpointIdentity.cs : implemented CreateX509CertificateIdentity().

2006-08-04  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : more removal.

2006-08-04  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : remove added type.

2006-08-02  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs, FederatedMessageSecurityOverHttp.cs :
	  cosmetic API fixes.

2006-08-01  Ankit Jain  <jankit@novell.com>

	* EndpointAddress.cs (ReadFrom): Move the code ..
	(ReadFromInternal): .. to here. Use this in all ReadFrom overloads.
	* EndpointAddress10.cs (ReadXml):
	(WriteXml): Use EndpointAddress's methods.
	* EndpointAddressAugust2004.cs (ReadXml):
	(WriteXml): Use EndpointAddress's methods.

2006-08-01  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added XmlDsig.

2006-08-01  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added some WS-Security constants.

2006-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : removed some security classes that are newly added.

2006-07-21  Atsushi Enomoto  <atsushi@ximian.com>

	* X509CertificateEndpointIdentity.cs : new file.
	* Dummy.cs : removed above.

2006-07-21  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : added some new X509 types.
	* Identity.cs, EndpointIdentity.cs : renamed former to latter.

2006-07-21  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs : added SecurityTokenInclusionMode.
	* Dummy.cs :
	  removed SecurityTokenParameters and IssuedSecurityTokenParameters.
	* BasicHttpBinding.cs : removed some todos.

2006-07-20  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicHttpSecurity.cs : implemented.
	* BasicHttpMessageSecurity.cs : API fix. Fill default security suite.
	* BasicHttpBinding.cs : implemented Security. When Message security
	  is enabled, create a security binding element.
	* HttpTransportSecurity.cs : Realm is "" by default.

2006-07-20  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : added MSSerialization.

2006-07-20  Atsushi Enomoto  <atsushi@ximian.com>

	* Constants.cs : new file.

2006-07-19  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : WriteTo() implementation. Only Uri is supported
	  for now.

2006-07-18  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : implemented ReadFrom(). Added missing MonoTODO.
	* EndpointAddressBuilder.cs : implemented some members.

2006-07-18  Atsushi Enomoto  <atsushi@ximian.com>

	* WSDualHttpBinding.cs : it is not ISecurityCapabilities anymore.

2006-07-18  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBinding.cs :
	  Implemented Security property.
	  CreateBindingElements() not omits SecurityBindingElement when
	  message security is not enabled.
	  GetTransport() returns HttpsTransportBindingElement when transport
	  security is enabled.
	* WSHttpBindingBase.cs : get_Scheme() returns https when appropriate.
	* HttpTransportSecurity.cs, MessageSecurityOverHttp.cs,
	  WSHttpSecurity.cs, NonDualMessageSecurityOverHttp.cs : new files.
	* Dummy.cs : removed above.

2006-07-18  Atsushi Enomoto  <atsushi@ximian.com>

	* EnvelopeVersion.cs, ChannelFactory_1.cs, MessageSecurityVersion.cs,
	  Identity.cs, ChannelFactory.cs, InstanceContext.cs :
	  more June CTP changes.

2006-07-14  Atsushi Enomoto  <atsushi@ximian.com>

	* DeliveryRequirementsAttribute.cs,
	  ServiceHostBase.cs : IContractBehavior API updates.

2006-07-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : assembly.Save() does not seem to be
	  required anymore. Maybe it was a runtime bug.

2006-07-13  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : fix warning.

2006-07-13  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : don't create ClientOperation while we
	  already created corresponding ones.
	* ServiceHostBase.cs : When input parameter is only Message, set
	  SerializeRequest as false. When output parameter is Message, set
	  DeserializeReply as false.
	* ClientBase.cs : When input parameter is only Message, set
	  DeserializeRequest as false. When output parameter is Message, set
	  SerializeReply as false.
	  Both of those changes are to remove hack in DefaultOperationFormatter

2006-07-12  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : IMetadataExchange is the only case that
	  requires non fulltype name in AddServiceEndpoint(), so handle it
	  as a special case.

2006-07-12  Ankit Jain  <jankit@novell.com>

	* EndpointAddress10.cs: New.

2006-07-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs :
	  Generate BeginMethod and EndMethod as well. To do so, extract
	  some code block into another method.

2006-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs : fix some binary compat.
	* Dummy.cs : some June CTP updates.

2006-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* ReliableSession.cs,
	  OptionalReliableSession.cs : new implementation files.
	* Dummy.cs : The above are not dummy now.
	* MessageSecurityVersion.cs : implemented public properties.
	* WSHttpBindingBase.cs,
	  WSHTtpBinding.cs : implemented some parts so that at least .ctor()
	  and CreateBindingElements() do not raise an error.

2006-07-10  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBindingBase.cs, WSHttpBinding.cs :
	  June CTP API fixes. Implemented CreateBindingElements() (it does
	  not work since some binding elements will raise an exception).
	* Dummy.cs :
	  Removed TransactionFlowBindingElement.
	* TransactionProtocol.cs :
	  New file.
	* AllEnums.cs :
	  Removed TransactionProtocol which became a class, not enum.

2006-07-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs, ServiceHostBase.cs : S.SM.Dispatcher dependent fix.

2006-07-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : InnerProxy -> Channel.

2006-07-06  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicHttpBinding.cs : AddressingVersion is now None.
	* MessageHeaderException.cs : new exception type.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* DefaultCommunicationTimeouts.cs : receive timeout is 10 minutes
	  in June CTP.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : oops, misreplaced Identity.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* Identity.cs, EndpointAddress.cs, Dummy.cs,
	  EndpointAddressBuilder.cs : Identity -> EndpointIdentity.
	* MessageBodyAttribute.cs :
	  MessageBodyAttribute -> MessageBodyMemberAttribute.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* NodeQuotaExceededException.cs : removed unused code.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs, ServiceHostBase.cs, ChannelFactory.cs :
	  CommunicationObject abstract changes brought this madness.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs : IRequestContext -> RequestContext.

2006-07-05  Atsushi Enomoto  <atsushi@ximian.com>

	* IContextChannel.cs, PeerNode.cs,
	  IDuplexClientChannel.cs, BasicHttpBinding.cs, ChannelFactory_1.cs,
	  ServiceContractAttribute.cs, ICommunicationObject.cs,
	  IClientChannel.cs, DuplexChannelFactory.cs, IServiceChannel.cs,
	  AllEnums.cs, ChannelFactory.cs, BasicHttpSecurity.cs:
	  several June CTP interface changes.
	* ClientRuntimeChannel.cs : In reflection to June CTP updates, it
	  needed several internal changes. Channels are created at first
	  request time as there is no way to predict whether request and/or
	  output is used.

2006-07-03  Ankit Jain  <jankit@novell.com>

	* TransferMode.cs: Move from System.ServiceModel.Channels to here.
	* AllEnums.cs: Move QueueTransferProtocol from
	System.ServiceModel.Channels to System.ServiceModel .
	Remove PoisonMessageHandling.

2006-07-03  Ankit Jain  <jankit@novell.com>

	* AllEnums.cs: Update to June CTP changes.

2006-06-30  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs : added ReceiveErrorHandling.

2006-06-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : pass bindingConfiguration from configuration element
	  to create Binding. It's not considered though.

2006-06-27  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : quick workaround for some config class weirdness.

2006-06-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientBase.cs : some configuration support implementation.

2006-06-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : oops, parameter 0 is the instance itself.

2006-06-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientProxyGenerator.cs : new file to generate InnerProxy type.
	* ClientRuntimeChannel.cs : implemented some members. New Process()
	  method handles actual request/response binding.
	* ClientBase.cs,
	  ChannelFactory_1.cs : moved CreateRuntime() from
	  ChannelFactory<T> to ClientBase<T>. ClientBase<T> is abstract in
	  WCF beta2. Reordered some internal field creation.
	  Renamed some "channel" to "contract". Those MS misnamings s__k.

2006-06-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : only interface can be the Type argument in
	  ChannelFactory<T>#.ctor(Type).

2006-06-16  Ankit Jain  <jankit@novell.com>

	* AllEnumcs.cs (MetadataResolverMode.WsTransferGet): Update to case fix
	in beta2.

2006-06-12  Ankit Jain  <jankit@novell.com>

	* EndpointAddressAugust2004.cs (.ctor): Change from private to internal.

2006-05-29  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultException.cs, FaultException_1.cs : in beta2 default action
	  here is null.

2006-05-29  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBindingBase.cs, Identity.cs, AllEnums.cs
	  WSDualHttpBinding.cs : updated API fixes.

2006-05-29  Atsushi Enomoto  <atsushi@ximian.com>

	* EnvelopeVersion.cs : moved back from S.SM.Channels.

2006-05-29  Atsushi Enomoto  <atsushi@ximian.com>

	moved to proper namespace dirs:
	* ServiceCredentials.cs, ClientCredentials.cs,
	  ServiceMetadataBehavior.cs :
	  - to S.SM.Description.
	* AspNetIntegrationRequirementsAttribute.cs,
	  IServiceHostFactory.cs, ServiceHostFactory.cs :
	  - to S.SM.Activation.
	* EndpointDispatcher.cs : - to S.SM.Dispatcher.

2006-05-29  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs, Dummy.cs, ClientCredentials.cs, ServiceCredentials.cs,
	  InstanceContext.cs, EndpointDispatcher.cs, ServiceHostFactory.cs,
	  IServiceHostFactory.cs, ServiceMetadataBehavior.cs,
	  AspNetIntegrationRequirementsAttribute.cs :
	   namespace changes. Removed Obsoleted.
	* BasicHttpBinding.cs, NetTcpBinding.cs, WSHttpBindingBase.cs :
	  IBindingManualAddressing vanished in beta2.

2006-04-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientRuntimeChannel.cs : missing file.

2006-04-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : CreateFactory return IChannelFactory.
	* ServiceHostBase.cs : Fixed incorrect iterations to populate 
	  DispatchOperations.
	* ClientBase.cs,
	  ClientRuntimeChannel.cs : I'm not sure if this is the right
	  approach, but here is an approach to implement ClientBase.
	* ChannelFactory_1.cs : ongoing implementation for ClientBase.

2006-04-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : GetContract() now rejects operation-less
	  cotnract, so added dummy operation as well in the dummy contract.

2006-03-23  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : removed some extra security classes.

2006-03-17  Atsushi Enomoto  <atsushi@ximian.com>

	* ActionNotSupportedException.cs : new file.
	* EndpointDispatcher.cs : removed comment.
	* ServiceHostBase.cs :
	  create EndpointDispatcher in ChannelDispatcher.Attach().
	  Added GetContract() for internal use.

2006-03-16  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs ChannelFactory_1.cs :
	  removed extraneous contructors.
	* EndpointDispatcher.cs : removed extra channel list.
	* ServiceHost.cs : added field for contracts and use it when
	  contracts are created in AddServiceEndpoint().
	* ServiceHostBase.cs : add opened channel dispatchers to its list.

2006-03-15  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContext.cs OperationContextScope.cs
	  ServiceMetadataBehavior.cs ServiceBehaviorAttribute.cs
	  ServiceHostFactory.cs : Feb. CTP API fixes.

2006-03-14  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : removed some S.S.Channels classes.
	* BasicHttpBinding.cs : message encoding could be Mtom. Also its
	  arguments (version and encoding) could be configurable.

2006-03-14  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceContext.cs : added some missing members. few implementation.
	* BasicHttpSecurity.cs BasicHttpMessageSecurity.cs : new files.
	* Dummy.cs : removed above.

2006-03-08  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageHeader_1.cs : added IsReferenceParameter arg (and comment).

2006-03-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : OnOpened() is overriden, not virtual.

2006-03-07  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBindingBase.cs WSHttpBinding.cs WSFederationBinding.cs
	  NetPeerTcpBinding.cs NetTcpBinding.cs WSDualHttpBinding.cs :
	  removed OnInitialize() and OnApplyConfiguration.

2006-03-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostBase.cs : populate type from type name as expected (still
	  not sure but this implementation would mostly make sense).

2006-03-06  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHostFactory.cs : new file.
	* ServiceHostBase.cs, ServiceHost.cs : they were still missing some
	  members. Updated implementation to work in Feb. CTP way.

2006-03-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs : no need to call CreateDescription() in
	  InitializeEndpoint().
	* ChannelFactory_1.cs : .ctor(Type) could invoke InitializeEndpoint()
	  as well as other .ctors.

2006-03-03  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultException_1.cs : removed extra fields that are moved to
	  non-generic type.
	* Faultexception.cs : Added missing members. Null arg check.
	* FaultContractAttribute.cs : removed extra set_HasProtectionLevel.

2006-03-03  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicHttpBinding.cs : implemented some members to pass the tests.

2006-03-02  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultReason.cs FaultContractAttribute.cs FaultException.cs
	  FaultException_1.cs : MessageFault related API fixes.

2006-03-02  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : more API fix. Anonymous URI has changed to
	  reasonable URI which does not pretend standards.

2006-02-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentials.cs Identity.cs ServiceSecurityContext.cs
	  X509CertificateInitiatorServiceCredential.cs
	  X509CertificateRecipientClientCredential.cs :

	  Dependent fixes for System.IdentityModel reorgainzation.

2006-02-23  Atsushi Enomoto  <atsushi@ximian.com>

	* moved several files to new namespace directoties.

2006-02-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ActionFilter.cs ActionFilterTable.cs AddressHeader.cs
	  AddressHeaderCollection.cs AddressingVersion.cs
	  AspNetIntegrationRequirementsAttribute.cs
	  AsymmetricSecurityBindingElement.cs
	  BasicHttpBinding.cs BehaviorCollection.cs
	  BinaryMessageEncodingBindingElement.cs Binding.cs BindingElement.cs
	  BindingElementCollection.cs BindingParameterCollection.cs
	  BindingRequirementsAttribute.cs ChannelBehaviorCollection.cs
	  ChannelDescription.cs ChannelFactory.cs ChannelFactory_1.cs
	  ClientBase.cs ClientCredentials.cs CompositeDuplexBindingElement.cs
	  ConnectionOrientedTransportBindingElement.cs
	  ContractBehaviorCollection.cs ContractDescription.cs
	  CustomBinding.cs DispatchBehavior.cs DispatchOperation.cs
	  Dispatcher.cs Dummy.cs EmptyFaultException.cs EndpointAddress.cs
	  EndpointAddressBuilder.cs EndpointAddressFilter.cs
	  EndpointAddressFilterTable.cs EndpointBehaviorCollection.cs
	  EndpointFilter.cs EndpointFilterTable.cs EndpointListener.cs
	  FaultDescription.cs FaultDescriptionCollection.cs
	  FaultException.cs Filter.cs FilterInvalidBodyAccessException.cs
	  FilterNodeQuotaExceededException.cs FilterTable.cs
	  GenericWrapperChannelFactory.cs GetMetadataRequest.cs
	  GetMetadataRequestParameters.cs GetMetadataResponse.cs
	  GetRequest.cs GetResponse.cs HostedBindingBehavior.cs
	  HttpTransportBindingElement.cs HttpsTransportBindingElement.cs
	  IBindingCapabilities.cs IBindingManualAddressing.cs
	  IBindingRuntimePreferences.cs IChannel.cs IChannelBehavior.cs
	  IChannelFactory.cs IChannelInitializer.cs IChannelListener.cs
	  IChannelManager.cs IClientChannel.cs IContractBehavior.cs
	  IContractBehaviorAttribute.cs IDispatchOperationSelector.cs
	  IDuplexChannel.cs IDuplexClientChannel.cs IDuplexSession.cs
	  IDuplexSessionChannel.cs IEndpointBehavior.cs
	  IEndpointDispatcher.cs IErrorHandler.cs IFilterTable.cs
	  IInputChannel.cs IInputSession.cs IInputSessionChannel.cs
	  IInputSessionShutdown.cs IInstanceContextInitializer.cs
	  IInstanceProvider.cs IMessageHeaderInfo.cs IMessageProperty.cs
	  IMetadataExchange.cs IOperationBehavior.cs IOperationInvoker.cs
	  IOutputChannel.cs IOutputSession.cs IOutputSessionChannel.cs
	  IProxyFormatter.cs IProxyMessageInspector.cs
	  IProxyOperationSelector.cs IReplyChannel.cs
	  IReplySessionChannel.cs IRequestChannel.cs IRequestContext.cs
	  IRequestSessionChannel.cs IServiceBehavior.cs ISession.cs
	  ISessionChannel.cs IStubFormatter.cs IStubMessageInspector.cs
	  ITransportBindingElement.cs InstanceListener.cs
	  InvalidBodyAccessException.cs IssuedTokenClientCredential.cs
	  ListenUriBehavior.cs MatchAllEndpointBehavior.cs MatchAllFilter.cs
	  MatchNoneFilter.cs Message.cs MessageBodyDescription.cs
	  MessageBuffer.cs MessageContractAttribute.cs
	  MessageDescription.cs MessageDescriptionCollection.cs
	  MessageEncodingBindingElement.cs MessageFault.cs
	  MessageFaultBodyWriter.cs MessageHeader.cs
	  MessageHeaderDescription.cs MessageHeaderDescriptionCollection.cs
	  MessageHeaders.cs MessageImpl.cs MessageInterceptorEventArgs.cs
	  MessagePartDescription.cs MessagePartDescriptionCollection.cs
	  MessageProperties.cs MessagePropertyDescription.cs
	  MessagePropertyDescriptionCollection.cs MessageVersion.cs
	  MetadataDialect.cs MetadataReference.cs MetadataSection.cs
	  MtomMessageEncodingBindingElement.cs
	  MultipleFilterMatchesException.cs MustUnderstandBehavior.cs
	  NamedPipetransportBindingElement.cs
	  NavigatorInvalidBodyAccessException.cs NetPeerTcpBinding.cs
	  NetTcpBinding.cs OperationBehaviorAttribute.cs
	  OperationBehaviorCollection.cs OperationContext.cs
	  OperationDescription.cs OperationDescriptionCollection.cs
	  PeerResolverBindingElement.cs PeerSecurityBehavior.cs
	  PeerTransportBindingElement.cs PnrpPeerResolverBindingElement.cs
	  ProxyBehavior.cs ProxyOperation.cs ReflectedContractCollection.cs
	  SecurityBindingElement.cs ServiceAuthorizationBehavior.cs
	  ServiceBehaviorAttribute.cs ServiceBehaviorCollection.cs
	  ServiceCredentials.cs ServiceDescription.cs ServiceEndpoint.cs
	  ServiceEndpointCollection.cs ServiceHost.cs
	  ServiceMetadataBehavior.cs ServiceSecurityAuditBehavior.cs
	  SymmetricSecurityBindingElement.cs TcpTransportBindingElement.cs
	  TextMessageEncodingBindingElement.cs TransportBindingElement.cs
	  TypedMessageConverter.cs UnderstoodHeaders.cs
	  UnknownFaultException.cs UnknownMessageReceivedEventArgs.cs
	  UserNamePasswordClientCredential.cs
	  UserNamePasswordServiceCredential.cs ViaUriBehavior.cs
	  WSDualHttpBinding.cs WSFederationBinding.cs WSFederationSecurity.cs
	  WSHttpBinding.cs WSHttpBindingBase.cs
	  X509CertificateInitiatorClientCredential.cs
	  X509CertificateInitiatorServiceCredential.cs
	  X509CertificateRecipientClientCredential.cs
	  X509CertificateRecipientServiceCredential.cs
	  XPathFilter.cs XPathFilterTable.cs XPathMessageContext.cs
	  XmlFormatterOperationBehavior.cs
	  XmlSerializerOperationBehavior.cs :
	  Feb. CTP API chapter 1 - changes are so massive :-(

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* Dispatcher.cs : filter is defaulted to MatchNoneFilter.
	* EndpointListener.cs : null address in .ctor() is rejected.

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* HttpTransportBindingElement.cs : no need to provide
	  IDefaultCommunicationTimeout here. Binding implements it.

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* DispatchOperation.cs DispatchBehavior.cs
	  ProxyOperation.cs ProxyBehavior.cs : initialize Operations property
	  with a collection. We need concrete SynchronizedKeyedCollection
	  implemantation classes for each.
	* ServiceDescription.cs : apply IOperationBehaviors stored in
	  OperationDescription.

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XPathMessageContext.cs EndpointAddressBuilder.cs : new files.
	* Dummy.cs : removed above.
	* XPathFilterTable.cs FilterTable.cs ClientBase.cs :
	  added missing bits.

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* FederatedMessageSecurityOverHttp.cs WSFederationSecurity.cs
	  WSFederationBinding.cs : new files.
	* Dummy.cs : removed above.
	* XPathFilterTable.cs : added some missing bits.

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ProxyBehavior.cs : another .ctor() that can be used at client side.
	* ChannelFactory_1.cs : call ApplyBehavior for each ChannelBehavior.
	  Call OnCreateDescription() (it can be probably used in derived
	  classes to add custom behaviors etc.)

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs :
	  Initialize() handles listener creation (so it's cleaner now).
	* ServiceDescription.cs :
	  Implemented and updated behavior processing.

2006-02-15  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointListener.cs : removed unused code.
	* ServiceEndpoint.cs : binding could be null in .ctor()
	* AddressHeaderCollection.cs : implemented AddHeadersTo().
	  Null argument check in FindHeader().
	* ServiceDescription.cs : tiny todo cleanup.

2006-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageImpl.cs : implemented Headers.
	* ActionFilter.cs : null check. uncommented Headers-dependent code.

2006-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* XPathFilterTable.cs MatchAllEndpointBehavior.cs
	  MustUnderstandBehavior.cs : new files.
	* MtomMessageEncodingBindingElement.cs
	  TextMessageEncodingBindingElement.cs
	  BinaryMessageEncodingBindingElement.cs : IWsdlExporter fixes.
	* ProxyBehavior.cs : added some of the missing properties.

2006-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* IBindingManualAddressing.cs, EndpointAddressFilterTable.cs
	  EndpointFilterTable.cs : new files.
	* Dispatcher.cs
	  TextMessageEncodingBindingElement.cs
	  BinaryMessageEncodingBindingElement.cs
	  MessageEncodingBindingElement.cs : some API fixes.

2006-02-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ReflectedContractCollection.cs : added internal Add().
	* ServiceMetadataBehavior.cs : for now just pass ApplyBehavior().
	* ServiceBehaviorAttribute.cs :
	  Implemented ApplyBehaviors() a bit more.
	* ServiceHostBase.cs, ServiceHost.cs, ServiceDescription.cs :
	  Several API fixes to match Jan. CTP. Processing model around
	  Initialize and Open are fixed.

2006-02-11  Ankit Jain  <jankit@novell.com>

	* ServiceHost.cs (ServiceHost.AddServiceEndpoint): Build endpoint
	address using a matching base address, if the one specified is relative.
	* UriSchemeKeyedCollection.cs (UriSchemeKeyedCollection.ctor): Base
	address cannot contain a query string.

2006-02-11  Ankit Jain  <jankit@novell.com>

	* ServiceHost.cs (ServiceHost.ConstructorInit): ServiceType must be a
	class.
	* UriSchemeKeyedCollection.cs (UriSchemeKeyedCollection.ctor): Insert
	URIs into the collection, while ensuring that only one URI per Scheme is
	allowed.

2006-02-09  Atsushi Enomoto  <atsushi@ximian.com>

	* BindingElement.cs : (BuildChannelListener) null argument check.
	* EndpointListener.cs : updated to match the latest CTP. It does not
	  use CreateListener() anymore. Use "timeout".
	* HttpTransportBindingElement.cs : Support BuildChannelListener().
	* ServiceDescription.cs : updated InitializeServiceHost() to match
	  the latest CTP.
	* ServiceHost.cs : thus re-enabled InitializeServiceHost() again.

2006-02-08  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultReason.cs : make use of alias. The first argument for
	  SynchronizedReadOnlyCollection is a lock object, not a list.
	* SynchronizedReadOnlyCollection.cs :
	  The argument string for ArgumentNullException is a parameter name,
	  not a message. Implementation is collected to one .ctor().
	* MessageFault.cs : serialize details, not Reason. To write Reason
	  element, use the envelope's namespace.

2006-02-08  Atsushi Enomoto  <atsushi@ximian.com>

	* Message.cs : More comments. Implemented Create(version, fault).
	* MessageImpl.cs : Fixed virtual->override.
	* FaultReason.cs : argument check.
	* FaultReasonText.cs : it should use full name instead of ISO 2 letter
	  name. Matches() should match if the argument culture is a "child"
	  culture (i.e. it should return true if its Parent matches).
	* MessageFault.cs :
	  When it does not have Details then do not try to write it.
	  has_detail was not correctly used.
	  It should not write xmlns attributes for fault code namespace URI if
	  it is empty.

2006-02-08  Atsushi Enomoto  <atsushi@ximian.com>

	* Message.cs : implemented couple of members.
	* MessageImpl.cs : new file that contains couple of Message 
	  implementation classes.
	* MessageFault.cs : make use of WriteXmlnsAttribute().

2006-02-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReaderBodyWriter.cs
	  XmlFormatterBodyWriter.cs
	  MessageFaultBodyWriter.cs : BodyWriter implementation classes.
	* Message.cs : implemented most of CreateMessage() as to call another
	  one, using above BodyWriter impl. classes.

2006-02-02  Atsushi Enomoto  <atsushi@ximian.com>

	* GenericWrapperChannelFactory.cs : forgot to set the "inner" field.

2006-02-01  Atsushi Enomoto  <atsushi@ximian.com>

	* GenericWrapperChannelFactory.cs : new file for
	  BindingElement.BuildChannelFactory<TChannel>().
	* BindingElement.cs : use above.
	* ChannelDescription.cs : .ctor() argument null check.
	* ChannelFactory_1.cs : because of above, pass the generic type
	  argument.

2006-02-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelDescription.cs : Behaviors instance is needed.
	* ChannelFactory_1.cs : check some null args. ChannelDescription
	  initially does not hold any type info.
	* ChannelFactory.cs : removed some NotImplementedException for
	  further implementation.
	* ServiceEndpoint.cs : EndpointAddress in .ctor() could be null.

2006-01-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ConnectionOrientedTransportBindingElement.cs,
	  TcpTransportBindingElement.cs : easy .ctor() implementation.

2006-01-26  Atsushi Enomoto  <atsushi@ximian.com>

	* HttpTransportBindingElement.cs : HttpChannelFactory() does not
	  need ChannelBuildContext anymore (... for now).
	* MessageEncodingBindingElement.cs :
	  Simple use context.(Can)BuildBlah() for each corresponding method.
	  GetProtectionRequirements() returns null here.

2006-01-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : get rid of ChannelLoader and create
	  ChannelDescription directly.
	* MessageEncodingBindingElement.cs : implemented BuildChannelFactory()
	  (not sure if it is correct, but seems like it does nothing there.)

2006-01-25  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescription.cs : removed debugging code.
	* FilterNodeQuotaExceededException.cs
	  FilterInvalidBodyAccessException.cs
	  CommunicationObjectFaultedException.cs
	  AddressAccessDeniedException.cs EndpointNotFoundException.cs
	  OperationRequirement.cs NetTcpBinding.cs FaultException.cs
	  InvalidBodyAccessException.cs NodeQuotaExceededException.cs
	  CommunicationException.cs AddressHeaderCollection.cs
	  MetadataDocument.cs ProtocolException.cs
	  QuotaExceededException.cs NetPeerTcpBinding.cs
	  InvalidMessageContractException.cs
	  AddressAlreadyInUseException.cs PeerTransportBindingElement.cs
	  NavigatorInvalidBodyAccessException.cs
	  NavigatorNodeQuotaExceededException.cs
	  MetadataReference.cs MetadataSection.cs
	  MultipleFilterMatchesException.cs DuplexClientBase.cs
	  ChannelFactory.cs PeerSecurityBehavior.cs :
	  several API fixes found by corcompare update.

2006-01-25  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescription.cs : don't Add ContractDescription twice inside
	  AddServiceEndpoint. Got sample service working.

2006-01-19  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs BehaviorCollection.cs Message.cs
	  GetResponse.cs ServiceHostBase.cs
	  XmlSerializerOperationBehavior.cs TransportBindingElement.cs
	  TextMessageEncodingBindingElement.cs MessageHeaders.cs
	  ServiceMetadataExtension.cs HttpTransportBindingElement.cs
	  MessageHeaderDescriptionCollection.cs
	  MessageInterceptorEventArgs.cs ChannelFactory_1.cs
	  HttpsTransportBindingElement.cs ServiceDescription.cs
	  BinaryMessageEncodingBindingElement.cs MessageFault.cs
	  MessageEncodingBindingElement.cs ChannelFactory.cs
	  MessageDescriptionCollection.cs :
	  several updates to catch up Jan. CTP API.

2006-01-17  Atsushi Enomoto  <atsushi@ximian.com>

	* AddressHeader.cs : null Name and Namespace are just ignored.

2006-01-17  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : fixed incorrect Equals(). Set empty headers
	  for .ctor()s without AddressHeaders.

2006-01-17  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : never use == for Uri.

2006-01-17  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs ClientBase.cs ServiceDescription.cs
	  ServiceHost.cs CustomBinding.cs :
	  several updates for Dec.CTP.

2005-11-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory.cs, ChannelFactory_1.cs : several updates on .ctor().

2005-11-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceMetadataBehavior.cs : removed DataContract stuff.
	* ServiceDescription.cs :
	  Use Contains() to query item from collections.
	* ContractDescription.cs :
	  Added new constructors. Session->UsesSession.

2005-11-21  Atsushi Enomoto  <atsushi@ximian.com>

	* ReflectedContractCollection.cs : new file.
	* ChannelBehaviorCollection.cs BindingParameterCollection.cs :
	  Removed vanished DataContract attributes.
	* BehaviorCollection.cs :
	  Updated Remove()/RemoveAll() signatures to Nov. CTP.
	* ServiceDescription.cs
	  ServiceHost.cs ServiceEndpoint.cs :
	  Changes caused by the removal of ServiceLoader and TypeLoader.
	  Those types are unified into ServiceDescription.cs.

2005-11-21  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointListener.cs, InstanceListener.cs : updated to Nov. CTP.

2005-11-21  Atsushi Enomoto  <atsushi@ximian.com>

	* IListener.cs, IListenerFactory.cs : vanished in Nov. CTP.
	* CompositeDuplexBindingElement.cs InstanceListener.cs
	  AsymmetricSecurityBindingElement.cs BindingElement.cs
	  EndpointListener.cs IChannelListener.cs Binding.cs
	  HttpTransportBindingElement.cs SymmetricSecurityBindingElement.cs
	  PnrpPeerResolverBindingElement.cs TcpTransportBindingElement.cs
	  NamedPipetransportBindingElement.cs HttpsTransportBindingElement.cs
	  ServiceDescription.cs SecurityBindingElement.cs
	  PeerTransportBindingElement.cs ServiceHost.cs
	  MessageEncodingBindingElement.cs :
	  IListener related updates to Nov. CTP.

2005-11-20  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlFormatterOperationBehavior.cs,
	  XmlSerializerOperationBehavior.cs : more updates to Nov. CTP.

2005-11-20  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnums.cs : updated to Nov. CTP.

2005-11-20  Atsushi Enomoto  <atsushi@ximian.com>

	* SessionFaultedEventArgs.cs, PrimitiveOperationFormatter.cs :
	  removed in Nov. CTP

	* FaultDescription.cs MessageDescription.cs
	  ContractBehaviorCollection.cs XmlFormatterOperationBehavior.cs
	  Dummy.cs MessageHeaderDescription.cs
	  OperationDescriptionCollection.cs OperationDescription.cs
	  MessageHeaderDescriptionCollection.cs
	  OperationBehaviorCollection.cs ServiceAuthorizationBehavior.cs
	  MessageBodyDescription.cs ContractDescription.cs
	  FaultDescriptionCollection.cs IClientChannel.cs
	  ServiceBehaviorCollection.cs MessagePartDescription.cs ISession.cs
	  ServiceSecurityContext.cs ServiceBehaviorAttribute.cs
	  MessageDescriptionCollection.cs : some updates to Nov. CTP.

2005-11-20  Atsushi Enomoto  <atsushi@ximian.com>

	* IFaultProvider.cs MessageException.cs IPersistentSession.cs
	  IFaultContext.cs MessageOperationFormatter.cs 
	  IOneWayMessageAsyncIntermediary.cs IntermediaryBinding.cs 
	  ChannelIOException.cs ChannelException.cs EndpointFilterProvider.cs 
	  IPersistentInputSession.cs IRequestReplyMessageAsyncIntermediary.cs 
	  ChannelListenException.cs IEndpointFilterProvider.cs 
	  MessageIOException.cs IRequestReplyMessageIntermediary.cs 
	  ConnectionRefusedException.cs CommunicationErrorEventArgs.cs 
	  ISessionRecovery.cs IPersistentOutputSession.cs 
	  ChannelConnectException.cs IOneWayMessageIntermediary.cs : 
	  removed in Nov. CTP.

	* Dispatcher.cs, Dummy.cs, AddressAccessDeniedException.cs,
	  EndpointNotFoundException.cs, InvalidBodyAccessException.cs,
	  ProtocolException.cs, ICommunicationObject.cs,
	  InvalidMessageContractException.cs,
	  AddressAlreadyInUseException.cs, IEndpointDispatcher.cs :
	  updated to Nov. CTP.

2005-11-20  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : internalized ServiceLoader (removed in Nov. CTP).

2005-11-20  Atsushi Enomoto  <atsushi@ximian.com>

	* CustomBinding.cs : implemented most of the members.
	* BindingElement.cs : was seeing
	  http://savas.parastatidis.name/2005/04/08/4b0b99b1-92c6-4442-ab2e-4c4951009ef4.aspx
	  and modified channel build logic a bit.

2005-11-03  Atsushi Enomoto  <atsushi@ximian.com>

	* HttpTransportBindingElement.cs : new stub.
	* Dummy.cs : removed above.
	* Filter.cs : data contracts.
	* EndpointListener.cs : (CreateListener) enabled commented code with
	  explicit casts.
	* BehaviorCollection.cs : added missing members.

2005-11-03  Atsushi Enomoto  <atsushi@ximian.com>

	* TextMessageEncodingBindingElement.cs,
	  ChannelBehaviorCollection.cs,
	  BinaryMessageEncodingBindingElement.cs :
	  Implemented CreateMessageEncoderFactory().
	* EndpointListener.cs : CreateListener() does not compile until
	  #76625 got fixed.

2005-11-02  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceContext.cs : it cannot override (now that) non-virtual
	  OnClose().

2005-11-02  Atsushi Enomoto  <atsushi@ximian.com>

	* PeerResolverBindingElement.cs : new file, which should be here
	  (MS puts it under sys.sm.design).
	* PnrpPeerResolverBindingElement.cs,
	  ChannelBehaviorCollection.cs : new file.
	* Dummy.cs : removed above.

	A set of minor fixes:
	* ConnectionOrientedTransportBindingElement.cs : internal copy .ctor().
	* CustomBinding.cs : non-virtual Initialize().
	* ViaUriBehavior.cs : implemented.
	* ServiceHost.cs : some AddEndpoint() are virtual.
	* PeerNodeAddress.cs,
	  ActionFilter.cs : [DataContract].
	* EmptyFaultDescription.cs, UnknownFaultException.cs : sealed.
	* FaultDescriptionCollection.cs,
	  ServiceBehaviorCollection.cs,
	  ContractBehaviorCollection.cs,
	  OperationBehaviorCollection.cs,
	  : [KnownType]. Hide public .ctor() for some.
	* WSDualHttpBinding.cs : missing set_ClientBaseAddress().
	* FaultContractAttribute.cs : extraneous set_DetailType().
	* BindingElementCollection.cs : removed extraneous Contains<T>().
	* AspNetIntegrationRequirementsAttribute.cs : fixed AttributeUsage.

2005-11-01  Atsushi Enomoto  <atsushi@ximian.com>

	* UserNamePasswordServiceCredential.cs,
	  X509CertificateInitiatorClientCredential.cs,
	  UserNamePasswordClientCredential.cs,
	  X509CertificateInitiatorServiceCredential.cs,
	  X509CertificateRecipientClientCredential.cs,
	  X509CertificateRecipientServiceCredential.cs : new files.
	* Dummy.cs : removed above.
	* ServiceCredentials.cs, ClientCredentials.cs :
	  use them in those credential aggregators.

2005-11-01  Atsushi Enomoto  <atsushi@ximian.com>

	* TypedMessageConverter.cs, PeerResolverImpl.cs, PeerResolver.cs,
	  PeerNodeAddress.cs, HttpDigestClientCredential.cs,
	  ExtensionCollection.cs, IssuedTokenClientCredential.cs : new files.
	* Dummy.cs : removed above.

	* Binding.cs, BasicHttpBinding.cs, NetTcpBinding.cs, WSHttpBinding.cs,
	  WSDualHttpBinding.cs, IntermediaryBinding.cs, CustomBinding.cs :
	  .ctor(string).
	* MessageEncodingBindingElement.cs : init XmlDictionaryReaderQuotas.
	* TcpTransportBindingElement.cs,
	  PeerTransportBindingElement.cs : scheme.
	* NetPeerTcpBinding.cs : some implementation.
	* ClientCredentials.cs : Implemented some properties. It seems like
	  an aggregated security info.
	* AsymmetricSecurityBindingElement.cs,
	  SymmetricSecurityBindingElement.cs : ToString().
	* HttpTransportBindingElement.cs :
	  Removed extraneous BuildChannelFactory().
	* OperationDescriptionCollection.cs : attribute fix.
	* OperationContext.cs : Extensions is not that simple.
	* CompositeDuplexBindingElement.cs : set_ClientBaseAddress().

2005-11-01  Atsushi Enomoto  <atsushi@ximian.com>

	* AsymmetricSecurityBindingElement.cs,
	  LocalServiceSecuritySettings.cs,
	  SymmetricSecurityBindingElement.cs,
	  ServiceCredentials.cs, LocalClientSecuritySettings.cs : new files.
	* Dummy.cs : removed above.
	* SecurityBindingElement.cs : added internal .ctor().
	* ServiceBehaviorAttribute.cs, ServiceContractAttribute.cs,
	  ServiceAuthorizationBehavior.cs : tiny API fixes.

2005-11-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceSecurityContext.cs, ServiceBehaviorAttribute.cs : new files.
	* Dummy.cs : removed above.
	* SecurityBindingElement.cs,
	  ServiceAuthorizationBehavior.cs : signature fix.

2005-10-31  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityBindingElement.cs,
	  BodyWriter.cs : new files.
	* Dummy.cs : removed above.
	* ServiceSecurityAuditBehaviot.cs : implemented.

2005-10-28  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceContext.cs, ChannelFactory_1.cs, ServiceHostBase.cs,
	  EndpointListener.cs : now timeouts are protected internal.
	* HttpTransportBindingElement.cs : use HttpListenerFactory for
	  BuildListenerFactory().

2005-10-27  Atsushi Enomoto  <atsushi@ximian.com>

	* FilterNodeQuotaExceededException.cs,
	  NodeQuotaExceededException.cs,
	  NavigatorNodeQuotaExceededException.cs : removed internal .ctor()
	  since it will just result in messageless exception.

2005-10-27  Atsushi Enomoto  <atsushi@ximian.com>

	* Dispatcher.cs :
	  Attach() adds the listener to ServiceHostBase.EndpointListeners.
	  Same for Detach(). Attach() sets supported channels (maybe the
	  actual player is in another place though).
	  Use ReadOnlyCollection<Type> for SupportedChannels.
	* BindingElementCollection.cs : InsertItem() and SetItem() caused
	  infinite loop. Use Items.
	* EndpointListener.cs : kinda implemented CreateListener(). It's still
	  not working due to runtime bug (not sure if I can create repro).
	* Binding.cs : Name and Namespaces have their default values.
	* ServiceDescription.cs : ServiceHostBase.EndpointListeners.Add() is
	  now done in Dispatcher.Attach().

2005-10-27  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddress.cs : == should check null.
	* BindingRequirementsAttribute.cs : new file.
	* Dummy.cs : removed above.
	* EndpointBehaviorCollection.cs, EndpointAddress.cs,
	  EndpointListener.cs, ServiceEndpoint.cs : (.ctor) null arg check.

2005-10-27  Atsushi Enomoto  <atsushi@ximian.com>

	* Dispatcher.cs : implemented some members.
	* EndpointListenerCollection.cs : now it exposes Items as "internal".
	* EndpointFilterProvider.cs : InitialActions was missing.

2005-10-27  Atsushi Enomoto  <atsushi@ximian.com>

	* MessagePropertyDescriptionCollection.cs,
	  MessageHeaderDescriptionCollection.cs,
	  MessagePartDescriptionCollection.cs,
	  BehaviorCollection.cs : Fixed misunderstood GetKeyForItem().
	* EndpointListener.cs : kinda asynced.

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* BinaryMessageEncodingBindingElement.cs,
	  MtomMessageEncodingBindingElement.cs,
	  TextMessageEncodingBindingElement.cs,
	  MessageEncodingBindingElement.cs : implemented some members. Now
	  this base class takes MessageVersion in its .ctor().
	* AddressingVersion.cs : Use Equals(). operator == does not work.
	* ServiceDescription.cs : Open created EndpointListener at 
	  InitializeServiceHost() (I'm not 100% sure about it).
	* EndpointListener.cs : implemented some members.

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* Binding.cs : implemented .ctor(name, ns).
	* CustomBinding.cs : fixed .ctor() process.

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ContractDescription.cs : added duplicate contract check.

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs, ServiceHostBase.cs : actually OnInitialize() should
	  be used to trigger loader.Description.InitializeServiceHost().
	* ContractDescription.cs : search ServiceContractAttribute through 
	  interfaces as well.
	* SynchronizedCollection.cs : use (consistent) InsertItem() in Add().

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : hook Open event.
	* TransportBindingElement.cs,
	  HttpTransportBindingElement.cs : fixed default values.
	* BasicHttpBinding.cs : fixed default values. implemented 
	  CreateBindingElements().
	* BindingElementCollection.cs : AddRange() was not working.

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* Binding.cs : set timeouts inside .ctor().

2005-10-26  Atsushi Enomoto  <atsushi@ximian.com>

	* BindingElement.cs, Binding.cs, IChannelManager.cs,
	  ChannelFactory_1.cs, ChannelFactory.cs :
	  several API fixes detected by improved corcompare.

2005-10-25  Atsushi Enomoto  <atsushi@ximian.com>

	* Message.cs : CreateReplyMessage() are not static.

2005-10-25  Atsushi Enomoto  <atsushi@ximian.com>

	* BindingElement.cs, IListener.cs, IChannelListener.cs, Binding.cs :
	  added missing generic class constraints.

2005-10-25  Atsushi Enomoto  <atsushi@ximian.com>

	* IListenerFactory.cs : class constraints were missing for generic args.

2005-10-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ContractDescription.cs : (GetContract) by default http://tempuri.org/
	  is used for Namespace.

2005-10-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceAuthorizationBehavior.cs : PrincipalPermissionMode default
	  value is .UseWindowsGroups (funky).

2005-10-24  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationRequirement.cs : new file.
	* Dummy.cs : removed above.
	* ServiceHostBase.cs : implemented EndpointListeners.
	* ServiceDescription.cs : implemented InitializeServiceHost(). It is
	  still not incorrect.

2005-10-24  Atsushi Enomoto  <atsushi@ximian.com>

	* CompositeDuplexBindingElement.cs, WSDualHttpBinding.cs :
	  tiny API fixes.

2005-10-23  Atsushi Enomoto  <atsushi@ximian.com>

	* MessageVersion.cs : ditto.

2005-10-23  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultCode.cs : fixed infinite loop.

2005-10-23  Duncan Mak  <duncan@novell.com>

	* MessageHeaders.cs (WriteHeader, WriteHeaderContents):
	(WriteStartHeader): Implemented.
	(Action, FaultTo, From, MessageId, RelatesTo, ReplyTo, To): Added
	fields for these properties. I'm guessing that Message sets these
	in the Message.Headers property.

2005-10-23  Atsushi Enomoto  <atsushi@ximian.com>

	* IExtensibleObject.cs, IExtension.cs, IExtensionCollection.cs :
	  Now that #76363 got fixed, we can fix interface signatures.
	* ServiceMetadataExtension.cs : new file.
	* Dummy.cs : removed above.

2005-10-22  Duncan Mak  <duncan@novell.com>

	* AddressAccessDeniedException.cs:
	* AddressAlreadyInUseException.cs:
	* FilterInvalidBodyAccessException.cs:
	* InvalidBodyAccessException.cs:
	* MessageException.cs:
	* MessageIOException.cs:
	* NavigatorInvalidBodyAccessException.cs:
	* ProtocolException.cs:
	* QuotaExceededException.cs: Fixed various signature bugs.

	* EndpointNotFoundException.cs:
	* InvalidMessageContractException.cs: Missed these two in the last
	commit.

	* EmptyFaultException.cs: 
	* FaultException.cs:
	* UnknownFaultException.cs: Implemented these classes except for
	the 'GetObjectData'. Run TestGetObjectData to see how it comes out
	with XmlFormatter. We need to implement the serialization of
	FaultCode and FaultDetail (as FaultCodeData and FaultCodeReason).

	All Exceptions are now implemented.
	
2005-10-22  Duncan Mak  <duncan@novell.com>

	* AddressAccessDeniedException.cs:
	* AddressAlreadyInUseException.cs:
	* ChannelConnectException.cs:
	* ChannelException.cs:
	* ChannelIOException.cs:
	* ChannelListenException.cs:
	* CommunicationException.cs:
	* CommunicationObjectFaultedException.cs:
	* ConnectionRefusedException.cs:
	* FilterInvalidBodyAccessException.cs:
	* FilterNodeQuotaExceededException.cs:
	* InvalidBodyAccessException.cs:
	* MessageException.cs:
	* MessageIOException.cs:
	* MultipleFilterMatchesException.cs:
	* NavigatorInvalidBodyAccessException.cs:
	* NavigatorNodeQuotaExceededException.cs:
	* NodeQuotaExceededException.cs:
	* ProtocolException.cs:
	* QuotaExceededException.cs: Added all missing Exceptions except
	for those in the family of FaultException.

	* FaultCode.cs:	New implementation. I wrote some test cases for
	this class, and this fixes some of the things in the existing implementation.

2005-10-21  Duncan Mak  <duncan@novell.com>

	* FilterTable.cs: Implemented, but for the Match* methods, I need
	to look into how priority works.

2005-10-21  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultCode.cs:
	* FaultReason.cs:
	* System.ServiceModel/MessageFault.cs:
	* System.ServiceModel/FaultReasonText.cs: new files for MessageFault implementation.
	* Dummy.cs : removed above.
	* Message.cs : some overload resolution.
	* MessageHeader.cs : tiny returntype fix.

2005-10-21  Atsushi Enomoto  <atsushi@ximian.com>

	* InstanceListenerCollection.cs : rough impl.
	* InstanceContext.cs : sealed.

2005-10-19  Atsushi Enomoto  <atsushi@ximian.com>

	* Message.cs : filled all missing members.
	* HttpTransportBindingElement.cs:
	* TcpTransportBindingElement.cs:
	* NamedPipetransportBindingElement.cs:
	* PeerTransportBindingElement.cs:
	* MessageEncodingBindingElement.cs : Now that bug #76382 is gone,
	  we can define BuildChannelFactory().
	* IExtensionCollection.cs : tiny generic parameter name fix.

2005-10-18  Atsushi Enomoto  <atsushi@ximian.com>

	* DefaultCommunicationTimeouts.cs : new internal class.
	* ChannelFactory_1.cs, ServiceHostBase.cs : a bit of implementations.
	* OperationBehaviorAttribute.cs : implemented IOperationBehavior.
	* OperationContext.cs, InstanceContext.cs : a bit of implementations.

2005-10-17  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointListenerReadOnlyCollection.cs : new file.
	* Dummy.cs : removed above.
	* EndpointListenerCollection.cs : correct inheritance.
	* ChannelFactory.cs : tiny argname fix
	* ChannelFactory_1.cs : implemented some .ctor()s.
	* ServiceAuthorizationBehavior.cs : implemented. This shows how
	  IServiceBehavior works (quite simple).

2005-10-14  Atsushi Enomoto  <atsushi@ximian.com>

	* Dispatcher.cs : connect dispatcher and dispatchbehavior here.
	* EndpointBehaviorCollection.cs : fix base class.

2005-10-14  Duncan Mak  <duncan@novell.com>

	* MessageHeaders.cs: I started implementing this awhile ago, but
	it's been sitting on my machine doing nothing for a while now. So
	I finished stubbing it and I'm committing it. 

	Remaining work:
	Understand WS-Addressing and figure out how to handle
	RelatesTo/ReplyTo, and what it means to that headers are
	understood.

	* UnderstoodHeaders.cs: Implemented.

2005-10-14  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointAddressFilter.cs : new file.
	* Dummy.cs : removed above.
	* EndpointListener.cs, DispatchBehavior.cs, ProxyBehavior.cs :
	  modified some impl. code to match DispatchBehavior dependency graph.

2005-10-14  Atsushi Enomoto  <atsushi@ximian.com>

	* EndpointFilterProvider.cs, EndpointFilter.cs : new files.
	* Dummy.cs : removed above.
	* EndpointListener.cs : implemented some.
	* InstanceListener.cs, XPathFilter.cs : signature fixes.
	* MessageOperationFormatter.cs : ditto.

2005-10-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ContractDescription.cs : message contract support implementation
	  in GetContract() implementation.

2005-10-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ContractDescription.cs : more GetContract() implementation.

2005-10-13  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultDescription.cs, MessageDescription.cs, FaultContractAttribute.cs
	  OperationContractAttribute.cs, OperationDescription.cs,
	  ContractDescription.cs :
	  implemented some part of ContractDescription.GetContract().
	* ServiceHost.cs : improved AddEndpoint() overload solution.

2005-10-12  Atsushi Enomoto  <atsushi@ximian.com>

	* ClientCredentials.cs : new (and last) public IChannelBehavior file.
	* Dummy.cs : removed above.
	* UriSchemeKeyedCollection.cs : removed incorrect code (almost all).
	* ServiceHostBase.cs, ServiceHost.cs, OperationDescription.cs, 
	  ContractDescription.cs : implemented some.

2005-10-12  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationBehaviorAttribute.cs : new file.
	* Dummy.cs : removed above.
	* ServiceContractAttribute.cs, ActionFilterTable.cs : attribute fix
	* XmlSerializerOperationBehaviro.cs : tiny fix.

2005-10-12  Atsushi Enomoto  <atsushi@ximian.com>

	* CompositeDuplexBindingElement.cs, SynchronizedCollection.cs
	  InstanceListenerCollection.cs : added more files.
	* Dummy.cs : removed above.
	* SynchronizedKeyedCollection.cs : roughly implemented.
	* SynchronizedReadOnlyCollection.cs : tiny attribute fix.

2005-10-12  Atsushi Enomoto  <atsushi@ximian.com>

	* FaultDescription.cs, ContractBehaviorCollection.cs,
	  FaultContractAttribute.cs, MessageOperationFormatter.cs,
	  BindingParameterCollection.cs, OperationBehaviorCollection.cs,
	  FaultDescriptionCollection.cs, PrimitiveOperationFormatter.cs,
	  ServiceBehaviorCollection.cs, DuplexClientBase.cs : new files.
	* Dummy.cs : removed above.
	* CommunicationErrorEventArgs.cs, HostedBindingBehavior.cs,
	  ProxyBehavior.cs, MetadataDialect.cs : tiny fixes.

2005-10-11  Atsushi Enomoto  <atsushi@ximian.com>

	* MtomMessageEncodingBindingElement.cs :
	  one more missing message encoding binding element.
	* MessageBodyArrayAttribute.cs, MessageDescription.cs
	  MessagePropertyDescriptionCollection.cs,
	  MessageContractMemberAttribute.cs,
	  MessageHeaderDescription.cs, MessagePropertyAttribute.cs,
	  MessageParameterAttribute.cs, MessageHeaderDescriptionCollection.cs,
	  MessagePartDescriptionCollection.cs, MessageBodyDescription.cs,
	  MessageHeaderAttribute.cs, MetadataDialect.cs,
	  MessagePartDescription.cs, MessageHeaderArrayAttribute.cs
	  MessagePropertyDescription.cs, MessageDescriptionCollection.cs :
	  new files for message serialization stuff.
	* Dummy.cs : removed all above.
	* ChannelDescription.cs, MessageBodyAttribute.cs,
	  MessageContractAttribute.cs : attribute fixes.

2005-10-11  Atsushi Enomoto  <atsushi@ximian.com>

	* Dispatcher.cs, DispatchOperation.cs : new files.
	* Dummy.cs : removed above.
	* GetMetadataRequestParameters.cs : serialization attributes fix.
	* HostedBindingBehavior.cs : hacky impl.
	* InstanceContext.cs : added missing OnBlah() methods.

2005-10-11  Atsushi Enomoto  <atsushi@ximian.com>

	* AspNetIntegrationRequirementsAttribute.cs, MessageProperties.cs,
	  TextMessageEncodingBindingElement.cs, ProxyOperation.cs,
	  BinaryMessageEncodingBindingElement.cs,
	  MessageEncodingBindingElement.cs : new files.
	* Dummy.cs : removed above.
	* DispatchBehavior.cs : stubbed.
	* GetMetadataRequestParameters.cs : tiny API fix.

2005-10-09  Atsushi Enomoto  <atsushi@ximian.com>

	* ConnectionOrientedTransportBindingElement.cs,
	  TcpTransportBindingElement.cs, NamedPipetransportBindingElement.cs,
	  PeerTransportBindingElement.cs :
	  Now all transport but MSMQ crap are added.
	* Dummy.cs : removed above.

2005-10-09  Atsushi Enomoto  <atsushi@ximian.com>

	* BehaviorCollection.cs, ChannelDescription.cs,
	  SynchronizedKeyedCollection.cs : new files.
	* Dummy.cs : removed above.
	* BindingElementCollection.cs : warning fix.
	* ProxyBehavior.cs : API fixes.

2005-10-09  Atsushi Enomoto  <atsushi@ximian.com>

	* TransportBindingElement.cs, HttpTransportBindingElement.cs :
	  new channel files.
	* Dummy.cs : removed above.
	* MessageBodyAttribute.cs : default order is -1.
	* GetMetadataRequest.cs : added [MessageBody]
	* MessageVersion.cs : fixed name.
	* ChannelFactory_1.cs, ChannelFactory.cs : some channel factory impl.

2005-10-09  Atsushi Enomoto  <atsushi@ximian.com>

	* BindingElement.cs : new file.
	* Dummy.cs : removed above.
	* Binding.cs, WSDualHttpBinding.cs, WSHttpBinding.cs,
	   ChannelFactory.cs, CustomBinding.cs, ViaUriBehavior.cs :
	   implemented a bit.

2005-10-08  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBinding.cs : new file.
	* Dummy.cs : removed above.
	* WSHttpBindingBase.cs :implemented some.

2005-10-08  Atsushi Enomoto  <atsushi@ximian.com>

	* IReplyChannel.cs, IRequestContext.cs, IRequestChannel.cs:
	  moved from ../System.ServiceModel.Channels.
	* Dummy.cs : reflected above changes.
	* BasicHttpBinding.cs : added some impl. code.
	* ChannelFactory_1.cs: added missing OnInitialize().

2005-10-08  Atsushi Enomoto  <atsushi@ximian.com>

	* AllEnumcs.cs : all enums in one file.
	* Dummy.cs : removed all enums.
	* CommunicationState.cs, OperationFormatUse.cs,
	  OperationFormatStyle.cs : thus removed.

2005-10-08  Atsushi Enomoto  <atsushi@ximian.com>

	* IInputSession.cs, IInstanceContextInitializer.cs,
	  IRequestSessionChannel.cs,IReplySessionChannel.cs,
	  IStubFormatter.cs,IProxyOperationSelector.cs,
	  IRequestReplyMessageIntermediary.cs,IOperationInvoker.cs,
	  IPersistentSession.cs,IParameterInspector.cs,
	  IOneWayMessageAsyncIntermediary.cs,IInstanceProvider.cs,
	  ISessionRecovery.cs,IOutputSession.cs,IProxyFormatter.cs,
	  ISessionChannel.cs,IPersistentOutputSession.cs,
	  IInputSessionChannel.cs,IMessageProperty.cs,IInputSessionShutdown.cs,
	  InstanceContextIdleCallback.cs,IProxyMessageInspector.cs,
	  IOneWayMessageIntermediary.cs,ISharedSessionLifetime.cs,
	  ITransportBindingElement.cs,ITransactedTransportListenerFactory.cs,
	  IStubMessageInspector.cs,ISession.cs,
	  IRequestReplyMessageAsyncIntermediary.cs,IPersistentInputSession.cs,
	  IOutputSessionChannel.cs : added almost all interfaces.
	* Dummy.cs : removed above ifaces.
	* IChannelListener.cs, IExtensionCollection.cs,
	  ISecurityCapabilities.cs : fixed some signatures.
	* BasicHttpBinding.cs, NetPeerTcpBinding.cs, NetTcpBinding.cs,
	  IntermediaryBinding.cs, WSDualHttpBinding.cs, CustomBinding.cs :
	  dependent fixes on those iface fixes.

2005-10-06  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : some stubbing in this file for config stuff.

2005-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* IListener.cs : fixed generic constraints.

2005-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlSerializerFormatAttribute.cs, DataContractFormatAttribute.cs,
	  XmlFormatterOperationBehavior.cs, XmlSerializerOperationBehavior.cs,
	  OperationFormatUse.cs, IOperationBehavior.cs,
	  OperationFormatStyle.cs : new files
	* Dummy.cs : removed above types.
	* DispatchBehavior.cs, EndpointListenerCollection.cs,
	  InstanceListener.cs, EndpointListener.cs, IMetadataExchange.cs,
	  Binding.cs, OperationContractAttribute.cs, PeerSecurityBehavior.cs,
	  OperationDescription.cs : fixed several signatures.

2005-10-04  Atsushi Enomoto  <atsushi@ximian.com>

	* IListener.cs, IListenerFactory.cs : added listener supprot files.
	* Dummy.cs : removed above.

2005-10-03  Atsushi Enomoto  <atsushi@ximian.com>

	* Dummy.cs : OperationContextScope was not removed. Fixed typo.

2005-10-03  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationContextScope.cs, OperationContext.cs : new files.
	* Dummy.cs : removed above.
	* IErrorHandler.cs : signature fix.

2005-10-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ChannelFactory_1.cs : new file for generic ChannelFactory.
	* CommunicationState.cs : new file for CommunicationObject impl.
	* Dummy.cs : removed above.
	* ServiceMetadataBehavior.cs : stubbed up.

2005-10-02  Atsushi Enomoto  <atsushi@ximian.com>

	* GetMetadataRequest.cs, GetMetadataResponse.cs, MetadataBundle.cs,
	  MetadataDocument.cs, IMetadataExchange.cs, GetResponse.cs,
	  GetMetadataRequestParameters.cs, MessageBodyAttribute.cs,
	  GetRequest.cs, MetadataReference.cs, MetadataSection.cs,
	  MessageContractAttribute.cs : added ws-mex stuff.
	* Dummy.cs : removed above types.

2005-09-30  Atsushi Enomoto  <atsushi@ximian.com>

	* IDefaultCommunicationTimeouts.cs, IDuplexClientChannel.cs,
	  IDuplexSessionChannel.cs, IExtension.cs, IInputChannel.cs,
	  IChannelBehavior.cs, IOutputChannel.cs, IDuplexSession.cs,
	  IClientChannel.cs, IChannelInitializer.cs, IChannelListener.cs,
	  IEndpointDispatcher.cs, IDispatchOperationSelector.cs,
	  IContractBehaviorAttribute.cs, IErrorHandler.cs,
	  IDuplexChannel.cs, IEndpointFilterProvider.cs : new files.
	* Dummy.cs : removed new types above.
	* IExtensibleObject.cs, ServiceHostBase.cs IExtensionCollection.cs:
	  fixed incorrect signatures.

2005-09-30  Duncan Mak  <duncan@novell.com>

	* EnvelopeVersion.cs (Namespace): Renamed from 'Uri' to be
	consistent with AddressingVersion.Namespace property (they are
	both internal).

2005-09-29  Duncan Mak  <duncan@novell.com>

	* EndpointAddress.cs: Added missing Attributes.
	(ReadFrom): Added missing overload.
	(Identity): Added missing property.
	(GetSchema): Implemented.

	* MatchAllFilter.cs, MatchNoneFilter.cs: Added [DataContract]
	attribute.

	* MessageHeader.cs: Implemented MessageHeader<T>.

2005-09-29  Duncan Mak  <duncan@novell.com>
	
	* ActionFilterTable (TryGetValue): Remember to assign to data,
	even in the 'false' case.

	* MessageBuffer.cs (WriteMessage): Write it out using a
	Binary XmlDictionaryWriter.

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* XPathFilter.cs : so, more stubs.

2005-09-29  Duncan Mak  <duncan@novell.com>

	* ActionFilterTable.cs (CreateFilterTable): Removed extraneous
	method.

	* AddressHeader.cs (Equals, GetAddressHeaderReader):
	(GetHashCode, GetValue): Added missing methods.

	* AddressHeaderCollection.cs (.ctor, FindHeader): Uncommented.

	* EnvelopeVersion.cs (GetHashCode): Added missing method.

	* FilterTable.cs (Remove): Removed extraneous overload.

	* IChannel.cs: Updated to Sept. CTP definition.

	* IChannelFactory.cs: Moved IChannelFactory<T> to here
	* IChannelFactory_1.cs:  from here.

	* MessageBuffer.cs (WriteMessage): Added missing method.

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* XPathFilter.cs : new file.
	* Dummy.cs : removed above.
	* MessageHeader.cs : fixed some members as static.
	* ContractDescription.cs : added DataContract attributes.
	* BindingElementCollection.cs : added SetItem().
	* ChannelFactory.cs : fixed .ctor().

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* ICommunicationObject.cs, IChannelFactory_1.cs,
	  OperationDescription.cs : some signature fixes.

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* WSDualHttpBinding.cs : and actual class rename after svn mv.

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpDualBinding.cs, WSDualHttpBinding.cs : from former to latter.

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* IChannelFactory_1.cs, ChannelFactory.cs :
	  new files for ChannelFactory.
	* Dummy.cs : removed extraneous stubs.
	* IChannelFactory.cs : added two more overloads.

2005-09-29  Atsushi Enomoto  <atsushi@ximian.com>

	* WSHttpBindingBase.cs, BindingElementCollection.cs, ClientBase.cs,
	  IBindingRuntimePreferences.cs, BasicHttpBinding.cs,
	  IBindingCapabilities.cs, NetPeerTcpBinding.cs, NetTcpBinding.cs,
	  Binding.cs, IntermediaryBinding.cs, ISecurityCapabilities.cs,
	  WSHttpDualBinding.cs, CustomBinding.cs : new files.
	* Dummy.cs : removed the above types.
	  Added some of the missing generic interfaces.

2005-09-29  Duncan Mak  <duncan@novell.com>

	* SynchronizedReadOnlyCollection.cs: Added checks for
	ArgumentNullException to the constructors.

2005-09-29  Duncan Mak  <duncan@novell.com>	

	* ActionFilter.cs: Implemented, except for 'Match', which requires
	MessageHeaders to be implemented.

	* ActionFilterTable.cs: Implemented, except for the IFilterTable
	parts.

	* FilterTable.cs: Stubbed out.	

	* Filter.cs, MatchAllFilter.cs, MatchNoneFilter.cs:
	* SeekableXPathNavigator.cs: Implemented.

2005-09-28  Duncan Mak  <duncan@novell.com>

	* SynchronizedReadOnlyCollection.cs
	(IList.Contains, IList.IndexOf): Fixed the conditions for throwing
	Exceptions. GMCS was allowing incorrect code (bug #76267). Removed
	the test for null, as it is unnecessary (see test cases).

2005-09-28  Duncan Mak  <duncan@novell.com>

	* AddressHeaderCollection.cs:
	* IChannelManager: Added using statement to
	System.Collections.ObjectModel.

	* SynchronizedReadOnlyCollection.cs: Implemented.

2005-09-28  Duncan Mak  <duncan@novell.com>	

	* EnvelopeVersion.cs (Soap11, Soap12): Store them as singletons
	instead of creating a new one everytime.
	(Soap12.UltimateDestinationActorValues): Added missing
	String.Empty.
	
	* IMessageHeaderInfo.cs: Added interface.

	* MessageHeader.cs: Implemented.	

2005-09-28  Duncan Mak  <duncan@novell.com>	

	* AddressHeader.cs (CreateAddressHeader): Implemented.
	(OnWriteAddressHeaderContents): Fixed typo.
	(OnWriteStartAddressHeader): Fixed visibility.
	(WriterAddressHeader, WriteAddressHeaderContents): Implemented.
	(WriteStartAddressHeader): Implemented.
	(DefaultAddressHeader): new internal class used by
	CreateAddressHeader.

	* IFilterTable.cs: Added interface.	

	* MessageBuffer.cs: Added stubs.

2005-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceThrottlingBehavior.cs : moved to *.Design directory.

2005-09-28  Duncan Mak  <duncan@novell.com>

        * ServiceSecurityBehavior.cs: Fixed typo. 
        
2005-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceHost.cs : now it holds ServiceLoader, and ServiceDescription
	  comes from the loader.
	* ListenUriBehavior.cs : fixed inheritance, signature and members.
	* ServiceThrottlingBehavior.cs : fixed namespace (so this file is
	  being moved) and implemented some props.
	* ServiceDescription.cs : MonoTODO.

2005-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* IContractBehavior.cs, OperationDescriptionCollection.cs,
	  ContractDescription.cs, OperationDescription.cs,
	  IEndpointBehavior.cs : new files.
	* Dummy.cs : removed added types above.

2005-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceEndpoint.cs, EndpointBehaviorCollection.cs,
	  IServiceBehavior.cs, DispatchBehavior.cs, ServiceMetadataBehavior.cs,
	  ListenUriBehavior.cs, ProxyBehavior.cs,
	  HostedBindingBehavior.cs, ServiceAuthorizationBehavior.cs,
	  ServiceSecuiryAuditBehavior.cs, ServiceEndpointCollection.cs,
	  ViaUriBehavior.cs, ServiceThrottlingBehavior.cs,
	  PeerSecurityBehavior.cs, ServiceDescription.cs : new files.
	* ServiceHost.cs : added Description.
	* ServiceHostBase.cs : base type fix.

2005-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceAuthorization.cs, ServiceThrottle.cs : new files.
	* Dummy.cs : removed newly-added types.
	* ServiceHost.cs, ServiceHostBase.cs : implemented a bit.
	* UriSchemeKeyedCollecion.cs : copyright lines.

2005-09-27  Atsushi Enomoto  <atsushi@ximian.com>

	* CommunicationErrorEventArgs.cs : new file.
	* CommunicationObject.cs, EndpointListener.cs,
	  InstanceContext.cs, ServiceHostBase.cs : signature fixes.
	* Dummy.cs : removed one for new class.

2005-09-27  Duncan Mak  <duncan@novell.com>

	* IFaultContext.cs
	* IFaultProvider.cs: Added these interfaces.

	* MessageInterceptorEventArgs.cs:
	* SessionFaultedEventArgs.cs:
	* UnknownMessageReceivedEventArgs.cs: Added the EventArgs.
	
2005-09-27  Duncan Mak  <duncan@novell.com>

	* AddressHeader.cs: 
	* EndpointAddress.cs: Stubbed.
	
	* AddressHeaderCollection.cs: Implemented, waiting for Message to
	be implemented, and for the generic Collections class to be completed.

	* AddressingVersion.cs:
	* EnvelopeVersion.cs:
	* MessageVersion.cs: Implemented.

	* Dummy.cs: Added ReadOnlyCollection<T> and SynchronizedCollection<T>.	

	* IChannel.cs:
	* IChannelFactory.cs:
	* IChannelManager.cs:
	* ICommunicationObject.cs: Added these interfaces.
