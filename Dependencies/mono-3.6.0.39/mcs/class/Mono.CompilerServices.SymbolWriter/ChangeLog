2009-04-15  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs: Move `ISourceFile', `ICompileUnit' and
	`IMethodDef' into MonoSymbolFile.cs.  This allows us to use the
	symbol reader part without MonoSymbolWriter.cs.

2009-04-15  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(LineNumberTable.DW_LNE_MONO__extensions_start): New const.
	(LineNumberTable.DW_LNE_MONO__extensions_end): New const.
	(LineNumberTable.DoRead): Ignore unknown extended opcodes if
	they're within the Mono extension range.

2009-03-05  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(CompileUnitEntry.IncludeFiles): New public property.
	(CompileUnitEntry.ReadData): Also read include files.

2008-11-19  Marek Safar  <marek.safar@gmail.com>

	* MonoSymbolWriter.cs, MonoSymbolTable.cs: Change always boxed
	value type LineNumberEntry to class. It saves 19MB for corlib
	compilation.

2008-11-17  Andreia Gaita <avidigal@novell.com>

	* Makefile: Remove uneeded win32-specific hack

2008-10-15  Cedric Vivier  <cedricv@neonux.com>

	* SymbolWriterImpl.cs: implement `SetMethodSourceRange` using the
	new underlying MonoSymbolWriter's API so that the symbol files
	generated by SRE-using compiler are useful again.

2008-09-23  Marek Safar  <marek.safar@gmail.com>

	* Makefile: Use bootstrap profile to build with correct symbol
	writer.

2008-06-18  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(OffsetTable): Bump version to 50.0.

2008-06-18  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(OffsetTable.MinorVersion): Bump to 7.
	(OffsetTable.Flags): New public enum.
	(OffsetTable.FileFlags): New public property.
	(OffsetTable.IsAspxSource): Removed.

2008-06-17  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(MethodEntry.Flags): Removed `IsCompilerGenerated'.

2008-06-16  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(SourceMethodBuilder.SetCompilerGenerated): Removed; we now use
	the `DebuggerHiddenAttribute'.

2008-06-11  Martin Baulig  <martin@ximian.com>

	* SymbolWriterImpl.cs: Put this back and make it work with the
	current symbol writer.

2008-06-11  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.OpenMethod): Maintain a method stack, so we can
	now recursively call OpenMethod().

2008-06-11  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(SourceFileEntry.WriteData): Silently ignore non-existing files.

2008-06-11  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.SetRealMethodName): Removed, call it on the
	`SourceMethodBuilder'.
	(MonoSymbolWriter.SetCompilerGenerated): Likewise.

2008-06-11  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(ISourceMethod): Renamed to `IMethodDef'.
	(SourceMethodBuilder): New public class.
	(MonoSymbolWriter.OpenMethod): Added `int ns_id' argument and
	return a `SourceMethodBuilder'.

2008-06-10  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(OffsetTable.MinorVersion): Bump to 6.  There were no changes to
	the file format, but we were generating incorrect source file
	indices in the line number table due to a bug, which made
	backtraces report an incorrect source file.

2008-06-10  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.MarkSequencePoint): Added overloaded version
	taking a `SourceFileEntry' instead of a file index.

2008-06-10  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.CloseMethod): Quick-fix; still a lot of broken
	code out there.

2008-06-05  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(MethodEntry.Flags): New public enum.
	(MethodEntry.MethodFlags): New public fields.
	(MethodEntry.LocalNamesAmbiguous): Removed; this is now part of
	the `MethodFlags'.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.SetCompilerGenerated): New public method.

2008-06-02  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(ICompileUnit): New public interface.
	(MonoSymbolWriter.Sources): Removed.
	(MonoSymbolWriter.OpenMethod): Take an `ICompileUnit', removed
	`startRow', `startColumn', `endRow' and `endColumn'.
	(MonoSymbolWriter.DefineCompilationUnit): New public method.
	(MonoSymbolWriter.DefineNamespace): Operate on `ICompileUnit'.

	* MonoSymbolFile.cs
	(MonoSymbolFile.CompileUnit): New public properties.

	* MonoSymbolTable.cs
	(OffsetTable): Replace `Version' by `MajorVersion' and
	`MinorVersion'.  Add `CompileUnitCount', `CompileUnitTableOffset'
	and `CompileUnitTableSize'.
	(CompileUnitEntry): New public method.
	(LineNumberTable): Removed `StartFile' and `StartRow'.
	(MethodEntry): Removed `StartRow' and `EndRow'.

2008-06-02  Martin Baulig  <martin@ximian.com>

	* SymbolWriterImpl.cs: Removed.

2008-05-28  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(MethodIndexEntry): Removed.
	(MethodEntry): Moved everything into the data section, so it can
	be read dynamically on-the-fly.  The `MethodEntry' now has a fixed
	size of 12 bytes in the symbol file containing only token, data
	offset and line number table offset.

2008-05-28  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(MethodEntry.LocalTypeIndices): Removed.
	(MethodEntry.GetLineNumberTable): New public method; replaces the
	`LineNumbers' and `NumLineNumbers' fields.
	(MethodEntry.GetLocals): New public method; replaces the `Locals'
	and `NumLocals' fields.
	(MethodEntry.GetCodeBlocks): New public method; replaces the
	`CodeBlocks' and `NumCodeBlocks' fields.
	(MethodEntry.GetScopeVariables): New public method; replaces the
	`ScopeVariables' and `NumScopeVariables' fields.
	(MethodEntry.GetRealName): New public method; replaces `RealName'.
	(MethodEntry): Removed the old fields.

2008-05-28  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(MethodSourceEntry): Removed.
	(SourceFileEntry.Methods): Removed.

2008-05-26  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.DefineDocument): Added overloaded version taking
	additional `byte[] guid' and `byte[] hash' arguments.

	* MonoSymbolFile.cs
	(OffsetTable.IsAspxSource): New public field.
	(SourceFileEntry): Completely redesigned this; only write index
	and data offset, everything else goes into the data section.
	(SourceFileEntry.AutoGenerated): New public property.
	(SourceFileEntry.CheckChecksum): New public method.

2008-05-16  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(LineNumberEntry.IsHidden): New public field.
	(LineNumberTable): Add support for hidden line numbers.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.MarkSequencePoint): Add overloaded version
	taking an additional `bool is_hidden' argument.

2008-05-05  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs
	(MonoSymbolFile.OffsetTable): New public property.
	(MonoSymbolFile.FileName): New public readonly field.

	* MonoSymbolTable.cs
	(OffsetTable): Make this a class and not a struct.
	(OffsetTable): Add `LineNumberTable_LineBase',
	`LineNumberTable_LineRange' and `LineNumberTable_OpcodeBase'.
	(LineNumberEntry): Removed the reading/writing functions.
	(LineNumberTable): Get `LineBase', `LineRange' and `OpcodeBase'
	from the `OffsetTable' rather than hardcoding it here.
	(MethodEntry): Make `NumLineNumbers' and `LineNumbers' properties;
	massive cleanup, use leb128 everywhere and removed all the
	obsolete fields.

2008-04-29  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(OffsetTable.Version): Bump to 42.
	(LineNumberTable): New public class.  Provides a new line number
	table format which is based on Dwarf 2.
	(MethodEntry): Replaced BuildLineNumberTable() by
	CheckLineNumberTable(); we're now more strict than we were before
	and disallow not monotonic increasing entries,  we don't check for
	duplicates anymore since the new LineNumberTable takes care of that.
	(LineEntry): Added public `File' field which is a file index.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.MarkSequencePoint): Added `int file' argument.

2008-04-29  Martin Baulig  <martin@ximian.com>

	**** Kahalo changes start here ****

2008-05-05  Martin Baulig  <martin@ximian.com>

	Drop support for old pre-terrania symbol files.

	* MonoSymbolFile.cs
	(MonoSymbolFile.CompatibilityMode): Removed.

	* MonoSymbolTable.cs
	(LexicalBlockEntry): Removed this obsolete class.

2008-04-02  Martin Baulig  <martin@ximian.com>

	* *.cs: Remove the `#if !DISABLE_TERRANIA_CHANGES' conditionals.

2008-03-14  Martin Baulig  <martin@ximian.com>

	Merged the debugger's `terrania' branch into trunk.

2008-03-13  Martin Baulig  <martin@ximian.com>

	* *.cs: Add `DISABLE_TERRANIA_CHANGES' conditionals everywhere
	around the new code; they'll be removed when I'm back from my
	vacations.

2008-03-13  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(LexicalBlockEntry): Mark this as obsolete.

2008-03-11  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs (MethodEntry): Removed `LocalTypeIndices'.

2008-03-10  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(LocalVariableEntry): Removed the `Signature' field; we don't
	write this into the symbol file anymore.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.DefineLocalVariable): The `byte[] signature'
	argument is now obsolete.

2008-02-19  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs
	(MonoSymbolFile.Version): New public readonly field.
	(MonoSymbolFile.CompatibilityMode): Likewise; this is enabled if
	we're reading an old `39' file.

	* MonoSymbolTable.cs
	(OffsetTable.CompatibilityVersion): New public const; we keep
	backwards compatibility with this version.
	(OffsetTable.Write): Add `version' argument; allow writing the old
	file format.
	(MethodEntry): Check `file.CompatiblityMode'.

2008-02-19  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.SetRealMethodName): New public method.

	* MonoSymbolTable.cs
	(MethodEntry.RealName): New public field; this is only used for
	anonymous methods and iterators.

2008-02-15  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(CodeBlockEntry): New public class.
	(MethodEntry): Replace the old lexical blocks with a new concept
	of `code blocks'.  Keep backwards compatibility.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter): Add OpenCompilerGeneratedBlock(),
	CloseCompilerGeneratedBlock(), StartIteratorBody(),
	EndIteratorBody(), StartIteratorDispatcher(),
	EndIteratorDispatcher().	

2008-02-02  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(OffsetTable.Version): Bump to 40.
	(OffsetTable): Add `AnonymousScopeCount',
	`AnonymousScopeTableOffset' and `AnonymousScopeTableSize'.
	(CapturedVariable): New public struct.
	(CapturedScope): New public struct.
	(ScopeVariable): New public struct.
	(AnonymousScopeEntry): New public class.
	(SourceFileEntry.DefineMethod): Added overloaded version taking an
	additional `ScopeVariable[]' argument.

	* MonoSymbolFile.cs
	(MonoSymbolFile.AnonymousScopeCount): New public property.
	(MonoSymbolFile.GetAnonymousScope): New public method.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.DefineAnonymousScope): New public method.
	(MonoSymbolWriter.DefineCapturedLocal): New public method.
	(MonoSymbolWriter.DefineCapturedParameter): New public method.
	(MonoSymbolWriter.DefineCapturedThis): New public method.
	(MonoSymbolWriter.DefineCapturedScope): New public method.
	(MonoSymbolWriter.DefineScopeVariable): New public method.

2008-02-02  Martin Baulig  <martin@ximian.com>

	***** Terrania changes start at this point *****

2007-08-27  Jb Evain  <jbevain@novell.com>

	* MonoSymbolFile.cs, SymbolWriterImpl.cs: add some Cecil specific
	code protected by a CECIL defined.

Mon Jan 29 16:51:33 CET 2007 Paolo Molaro <lupus@ximian.com>

	* MonoSymbolWriter.cs: unlink the file before writing it, since it may
	be mmapped by the runtime.

2007-01-29  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs
	(MonoSymbolFile.Assembly): Removed this property.
	(MonoSymbolFile.Guid): New public property.

2006-09-24  Joshua Tauberer  <jit@occams.info>

	* MonoSymbolFile.cs: Allow MonoSymbolFile to be created
	  without passing a System.Reflection.Assembly, so we can
	  use this with Cecil.  Only the GUID check is avoided.

2005-09-14  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs (OffsetTable): Bump version to 39.
	(LocalVariableEntry.Index): New field.

	* MonoSymbolWriter.cs
	(MonoSymbolWriter.DefineLocalVariable): Added `int index' argument.

	* MonoSymbolFile.cs
	(MonoDebuggerSupport.GetLocalIndex): New method.

2005-09-05  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoDebuggerSupport): Make this internal and
	move everything we don't need here into the debugger.

2005-06-20  Chris Toshok  <toshok@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.Dispose): make public.

2005-05-25  Lluis Sanchez Gual  <lluis@novell.com>

	* SymbolWriterImpl.cs: An implementation of ISymbolWriter. It is just a
	wrapper for the MonoSymbolWriter class that mcs is using.

2005-04-04  Marek Safar  <marek.safar@seznam.cz>

	* MonoSymbolFile.cs: Removed unused fields.

2005-02-10  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs
	(MonoDebuggerSupport.MakeArrayType): New public method.
	(MonoDebuggerSupport.ResolveType): New public method.
	(MonoDebuggerSupport.GetTypeToken): New public method.

2005-02-10  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoDebuggerSupport.GetMethodIndex): New
	public method.

2004-11-23  Ben Maurer  <bmaurer@ximian.com>

	* MonoSymbolFile.cs (CreateSymbolFile): Take a filestream to
	write to. Do not return a byte array.

	(MyMemoryStream): Unused now.

	* MonoSymbolWriter.cs: Take advantage of the api change above.

	Overall, this prevents us from having to allocate the debug file
	in ram. For corlib, the debug file is about 1.5 mb. So it takes up
	over 3 mb (you must write it in chunks then get the big array)

	With the file stream, it takes up 4 kb or so for the buffer.

2004-10-20  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.Write): Sort the method table
	before actually writing it to disk and update MethodEntry.Index.

	* MonoSymbolTable.cs (MethodEntry.Index): Make this a writable
	property; set it after creating all the methods and sorting the
	method table.

2004-09-21  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoDebuggerSupport.CheckRuntimeVersion): New
	public method.

2004-08-27  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile..ctor): Read the GUID from the
	symbol file before reading the OffsetTable.

2004-08-27  Chris Toshok  <toshok@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.ReadSymbolFile): pass name to
	MonoSymbolFile.ctor, not filename, so we load the .mdb file
	instead of the .dll.
	(MonoSymbolFile.ctor): pass FileAccess.Read to the FileStream
	ctor.

2004-08-27  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoDebuggerSupport.GetGuid): The function is
	called Module.Mono_GetGuid(), not Module.MonoDebugger_GetGuid().

2004-07-30  Martin Baulig  <martin@ximian.com>

	The library is now called Mono.CompilerServices.SymbolWriter.dll
	and is in the Mono.CompilerServices.SymbolWriter namespace.

	* MonoSymbolFile.cs (MonoDebuggerSupport.GetGuid): New public
	static method.
	(MonoSymbolFile.WriteString): Use the BinaryWriter's method.
	(MonoSymbolFile.ReadString): Use the BinaryReader's method.
	(MonoSymbolFile.Write): Write the module's Guid into the symbol
	file.

	* MonoSymbolTable.cs, MonoSymbolWriter.cs: Reworked the API.

2004-07-27  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.Write): Sort the methods
	according to their token values.
	(MonoSymbolFile.ReadSymbolFile): Support reading the debugging
	information from an external ".mdb" file.

	* MonoSymbolTable.cs
	(SourceFileEntry): Make the .ctor protected, not internal.
	(SourceFileEntry.DefineMethod): This is no longer specific to
	System.Reflection(.Emit).
	(MethodEntry): We don't need the class and parameter types, the
	JIT is already getting this information automatically.
	(MethodEntry.ClassTypeIndex): Make this obsolete.
	(MethodEntry.ParamTypeIndicies): Likewise.

2004-07-02  Raja R Harinath  <rharinath@novell.com>

	* Makefile (LIBRARY_USE_INTERMEDIATE_FILE): Define.
	(LIBRARY_COMPILE): Simplify.

2004-06-24  Raja R Harinath  <rharinath@novell.com>

	* Makefile (LIBRARY_COMPILE): Only define for W32.

2004-06-23 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Makefile: build using mcs on windows.

2004-06-19  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs
	(SourceFileTable.Namespaces): New public property.

2004-06-02  Martin Baulig  <martin@ximian.com>

	Set version number to 37.

2004-05-23 Ben Maurer  <bmaurer@users.sourceforge.net>

	* MonoSymbolTable.cs (BuildLineNumberTable): Avoid arraylist.

2004-01-16  Martin Baulig  <martin@ximian.com>

	Set version number to 36.

	* MonoSymbolFile.cs (MonoSymbolFile): Removed 'FindMethod' and
	'MethodLookup'.

	* MonoSymbolTable.cs (MethodEntry): Don't write the method's full
	name into the symbol file.

2004-01-16  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoDebuggerSupport): As suggested by Ben
	Maurer, create a delegate type for each of the methods and then
	store the method.

2004-01-15  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoDebuggerSupport): New public class
	containing static wrappers for calling the `MonoDebugger_*'
	function in S.R.Assembly.

2004-01-13  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs: Added more #region's and a comment at the
	top of the file.

	* MonoSymbolWriter.cs (SourceMethod.BuildLineNumberTable): Removed
	it here since it's in MethodEntry again.

2004-01-13  Martin Baulig  <martin@ximian.com>

	* ChangeLog, MonoSymbolTable.cs: Reviewed Ben's patches.  For
	those which are not ok, I'll add detailed comments to the source
	code.	

2003-12-28 Ben Maurer  <bmaurer@users.sourceforge.net>

	[Revision 1.41, not approved.  Martin]
	* MonoSymbolTable.cs (MethodEntry): kill more
	useless fields.

2003-12-28 Ben Maurer  <bmaurer@users.sourceforge.net>

	[Revision 1.40, not approved.  Martin]
	* MonoSymbolTable.cs (MethodEntry): Remove the
	SourceFileIndex field, we already have the info.

2003-12-28 Ben Maurer  <bmaurer@users.sourceforge.net>

	[Revision 1.39, approved.  Martin]
	* MonoSymbolTable.cs: Don't make the MethodIndexEntry
	part of the method entry class, because it just
	takes up extra space.

2003-12-28 Ben Maurer  <bmaurer@users.sourceforge.net>

	[Revisions 1.37 and 1.38; not approved.  Martin]
	* MonoSymbolTable.cs (MethodEntry.BuildLineNumberTable): Removed.

	* MonoSymbolTable.cs, MonoSymbolWriter.cs: Use
	fewer arrays, dont use arraylists with structs.

2003-12-27 Ben Maurer  <bmaurer@users.sourceforge.net>

	* MonoSymbolFile.cs: Much, much better string writing.

2003-12-20 Ben Maurer  <bmaurer@users.sourceforge.net>

	[Revision 1.36, approved.  Martin]
	* MonoSymbolTable.cs: Fewer StringBuilder allocs.

2003-12-08  Zoltan Varga  <vargaz@freemail.hu>

	* MonoSymbolWriter.cs: Create ArrayLists only when needed.

2003-12-07 Ben Maurer  <bmaurer@users.sourceforge.net>

	[Revision 1.35, approved.  Martin]
	* MonoSymbolTable.cs: It is faster to do a linear search
	than it is to make a hashtable. Even though the linear
	search is O(n^2) while the hashtable is O(n), the allocation
	cost for a hashtable is *very* high, especially when only
	a few members will be added.

2003-09-06  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs: Removed debugging output.

2003-08-05  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs (MethodEntry.Index): New public field.

2003-06-27  Zoltan Varga  <vargaz@freemail.hu>

	* MonoSymbolWriter.cs: Enable calling of DefineDocument multiple
	times with the same URL.

2003-06-10  Zoltan Varga  <vargaz@freemail.hu>

	* MonoSymbolFile.cs: Fix off-by-one error.

2003-03-22  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs (MethodEntry.LocalNamesAmbiguous): New public
	field.  Specifies whether two local variables have the same name.

2003-03-13  Martin Baulig  <martin@ximian.com>

	Added basic support for lexical scopes.  This is just to tell a
	debugger that a local variable is only available in a specific
	lexical scope and that another variable of the same name may exist
	in another lexical scope.  See debugger/test/TestLexicalScope.cs
	for examples.

	* MonoSymbolTable.cs (LexicalScopeEntry): New class.
	(LocalVariableEntry): Added `BlockIndex' field which specifies the
	lexical scope of this variable.

	* MonoSymbolWriter.cs (SourceBlock): Removed, we're now using
	LexicalScopeEntry instead.

2003-02-22  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs: Incremented version number.

2003-02-22  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.FindMethod): Fixed a bug.
	(MonoSymbolFile.MethodLookup): New method.

2003-02-18  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.GetMethod): Added overloaded
	version which takes a MethodBase.

2003-02-18  Martin Baulig  <martin@ximian.com>

	* MonoSymbolTable.cs (MethodIndexEntry): New public struct.

	* MonoSymbolFile.cs (MonoSymbolFile.GetMethodByToken): New method.

2003-02-18  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.Assembly): New public property.

	* MonoSymbolTable.cs (MethodEntry.MethodBase): New public property.
	(MethodEntry.LocalTypes): New public variable.

2003-02-18  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MethodEntry.ThisTypeIndex): Renamed to
	ClassTypeIndex; provide this for all methods so we can get the
	class of static methods.

2003-02-10  Nick Drochak  <ndrochak@gol.com>

	* Mono.CSharp.Debugger.build: passing the /r using an 'arg' node works.
	The <include> node wasn't getting to the compiler. This fixes build
	breakage on cygwin.

	* MonoSymbolFile.cs: Qualify which Min method. Fixes build breakage
	on cygwin.

2003-02-09  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs (MonoSymbolWriter.ctor): We don't need the
	`mbuilder_array' anymore.

2003-02-09  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs (SourceFile): Derive from SourceFileEntry.
	(SourceBlock): We don't need source lines here.
	(SourceMethod): We're always constructed with source info.

	* MonoSymbolTable.cs: Added support for namespaces.
	(NamespaceEntry): New struct.
	(SourceFileEntry.DefineNamespace): New method.
	(MethodEntry.BuildLineNumberTable): The table is already sorted,
	so we don't need to do this here.

2003-02-09  Martin Baulig  <martin@ximian.com>

	* IMonoSymbolWriter.cs: Ooops, I forgot to remove this.

2003-02-08  Martin Baulig  <martin@ximian.com>

	* MonoSymbolDocumentWriter.cs: Removed.

	* MonoSymbolWriter.cs (SourceFile): Implement ISymbolDocumentWriter.

2003-02-08  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (GetMethodSource): New public method.
	(FindMethod): Return the correct index.

2003-02-07  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (Methods, Sources): New public properties.

2003-02-07  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs (MonoSymbolFile.ReadSymbolFile): New public
	static method, returns null (without throwing an exception) if the
	assembly doesn't have any debugging info.

2003-02-07  Martin Baulig  <martin@ximian.com>

	* MonoSymbolWriter.cs (MonoSymbolWriter.Initialize): Removed the
	custom initialization function.

	* MonoSymbolTableWriter.cs: Removed; the code is now in
	MonoSymbolFile.cs and MonoSymbolWriter.cs.

2003-02-07  Martin Baulig  <martin@ximian.com>

	* MonoSymbolFile.cs: The symbol file is now a resource in the
	assembly instead of a separate file.

	* MonoSymbolTable.cs: Did a few more cleanups, sort the line
	number table and remove duplicate line numbers.

2003-02-05  Martin Baulig  <martin@ximian.com>

	Modified the symbol file format to speed up method looks by name
	and cleaned this up a lot.

	* MonoSymbolFile.cs: New public class.  This is now a public class
	and writes and reads the symbol file.

	* IMonoBinaryReader.cs: Removed.

	* MonoSymbolTable.cs: Set version number to 29.

2003-01-17  Zoltan Varga  <vargaz@freemail.hu>

	* MonoSymbolWriter.cs (OpenMethod): Make it work on constructors.

2002-10-13  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 28.
	(SourceFileEntry): Read the methods when they're needed.
	(MethodSourceEntry): Made this a struct, not a class.

2002-10-13  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 27.  Added a source
	file table which is used to search a method by source file + line number.

2002-09-21  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 26.  Removed all the dynamic
	stuff, this library now just deals with the compiler generated symbol table.
	The dynamic stuff is private between the JIT and the debugger.

2002-09-21  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 25.  Added information about
	local variables.

2002-09-20  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 24.  Added a type index
	table.  Write the type of a local variable or a parameter as an index
	into this table.

2002-09-20  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs: Remove all the unused interfaces.

2002-09-20  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 23, include the size
	of a variable.

2002-09-20  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 22.  Provide information
	about parameters and local variables.

2002-09-20  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs: Use fullly qualified name for
	System.Diagnostics.SymbolStore.ISymbolWriter rather than `using' this
	namespace.  This allows us to use the name `ISymbolWriter' in our own
	code.

2002-09-18  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 21.  Encode the source file
	as a 4-byte length field followed by the UTF8 encoded string.

2002-09-18  Martin Baulig  <martin@gnome.org>

	* IMonoBinaryReader.cs: New interface.

	* MonoSymbolTable.cs: Use IMonoBinaryReader instead of binary reader.

2002-09-16  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Set version number to 20.

2002-09-14  Martin Baulig  <martin@gnome.org>

	* MonoSymbolWriter.cs, IMonoSymbolWriter.cs, MonoSymbolTableWriter.cs:
	Make all classes and interfaces which don't need to be public internal.

2002-09-14  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Use only CLS-compliant types here, bumped version
	number to 19.

	* MonoSymbolTableReader.cs: Removed, this is now in the debugger.

2002-09-03  Martin Baulig  <martin@gnome.org>

	* AssemblerWriterI386.cs, IAssemblerWriter.cs, MonoDwarfFileWriter.cs,
	README, README.relocation-table, csharp-lang.[ch], gdb-csharp-support.patch,
	gdb-variable-scopes.patch: Removed.

2002-09-03  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTableReader.cs (MonoSymbolTableReader.ImageFile): New
	public property.

	* MonoSymbolTable.cs: Bumped version number to 18.

2002-08-27  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs (MethodAddress): Removed `TrampolineAddress'.

2002-08-27  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs: Changed the file format in a way that allows us
	open it read-only and to use a specially malloced area for all the
	dynamic data.	

2002-08-25  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTableReader.cs: New file.  This is the reader for the
	new symbol file format.

2002-08-24  Martin Baulig  <martin@gnome.org>

	* MonoSymbolTable.cs, MonoSymbolTableWriter.cs: New files.  This
	creates a binary application.dbg file which will be used by the
	JIT to display source lines for exceptions.

	* list.unix: Disabled the dwarf file writer in the build.

2002-08-23  Martin Baulig  <martin@gnome.org>

	* MonoSymbolWriter.cs (MonoSymbolWriter.Initialize): Added
	assembly name argument.  Since the symbol writer needs to read the
	final assembly, we need to give it its full pathname.

2002-08-23  Martin Baulig  <martin@gnome.org>

	* makefile.gnu, list.unix: Added.

2002-07-05  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Added support for types in referenced assemblies.

2002-07-05  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Added support for arrays.

	* gdb-csharp-support.patch: Updated.

2002-06-29  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs (DieInheritance): Make this actually work.

2002-06-29  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs, MonoSymbolWriter.cs: Put all TAG_subprogram's into their
	corresponding struct/class declarations.

2002-06-28  Martin Baulig  <martin@gnome.org>

	* gdb-csharp-support.patch: Updated.

2002-06-28  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Use a TAG_string_type when we're using GNU extensions.
	Make static struct/class fields actually work.  Provide a TAG_typedef for struct's
	and classes.

2002-05-30  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter (IMonoSymbolWriter): Added custom `Initialize' method.

	* MonoSymbolWriter.cs (Initialize): The ISymbolWriter's `Initialize' method
	is no longer supported and throws an exception.
	(Initialize (string, string[])): New custom initialization function.

	* MonoDwarfFileWriter.cs (DwarfFileWriter): Added `string[] args' argument
	to the constructor to pass command line arguments.

	* gdb-csharp-support.patch: Updated for GDB 5.2.

2002-05-30  Martin Baulig  <martin@gnome.org>

	* MonoSymbolWriter.cs (MonoSymbolWriter): The constructor now get's the
	AssemblyBuilder's `methods' array as third argument.
	(OpenMethod): Use this array to get the method builder rather than using an
	interncall for it.
	(get_method_builder): Removed this interncall.

2002-05-25  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Finished the type rewrite, put back strings and arrays.

2002-05-24  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (ISourceMethod): Added `FullName' and `Parameters'.
	(ITypeHandle): New interface.

	* DwarfFileWriter.cs: Largely reorganized the type writing code.  Types are
	now represented by ITypeHandle objects which are stored in a per-dwarf-writer
	hash table.  At the moment, all types still need to be in one compile unit due
	to lacking support in gdb - but this new type code here already supports this.

	* MonoSymbolWriter.cs: Moved all the subclasses to the top-level and made them
	public, cleaned up the code, put everything into one compile unit.
	(DefineLocalVariable): Added a version of this function which takes useful args.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (IMonoSymbolWriter): Added `Sources' and `Methods'
	properties.

	* MonoDwarfFileWriter.cs (WriteSymbolTable): New public method.  Moved the
	code that writes the "mono_line_numbers" section here from the LineNumberEngine.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (IVariable): Replaced Token with `ISourceMethod Method'.

	* MonoSymbolWriter.cs (MonoSymbolWriter): The constructor now has an additional
	ModuleBuilder argument.
	(OpenMethod): Immediately call the `get_method' interncall to get the MethodBase
	from the token, then store the MethodBase instead of the token.  The token may
	still change during the metadata library's fixup process.
	(DoFixups): When the image has been written to disk, call the GetToken () method
	on all MethodBuilders and all ConstructorBuilders to get the final metadata tokens.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* AssemblerWriterI386.cs: Don't use GNU extensions and produce assembler
	output which is free of comments and extra whitespaces so that it's suitable
	for `as -f'.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (ISourceMethod): Replaced `MethodInfo MethodInfo' with
	`MethodBase MethodBase' and added `Type ReturnType'.  We're now correctly
	dealing with constructors and not crashing anymore.

2002-05-21  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Write a special line number table which can be read
	in by the metadata library to get line number information in backtraces.

2002-05-06  Martin Baulig  <martin@gnome.org>

	* MonoSymbolWriter.cs (MonoSymbolWriter.Close): Use Assembly.LoadFrom (), not
	AppDomain.Load () to load the assembly.

2002-04-26  Martin Baulig  <martin@gnome.org>

	* gdb-csharp-support.patch: A patch for GDB (against the latest CVS version)
	to implement C# support.

	* csharp-lang.c, csharp-lang.h, csharp-mono-lang.c: Copy these into your GDB
	source directory after applying the patch.

2002-04-26  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs (DieInternalString): Removed.

2002-04-25  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Reflect latest MonoString changes.

2002-04-13  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (ISourceBlock): Added `Blocks' property and `AddBlock'
	method to support nested blocks.

	* MonoSymbolWriter.cs: Correctly handle nested blocks.

	* MonoDwarfFileWriter.cs (DieMember): Provide info for all fields, not just for
	public ones; also added DW_AT_accessibility.
	(DieVariable): Reflected latest debug-symfile.c changes.

2002-04-12  Martin Baulig  <martin@gnome.org>

	* gdb-variable-scopes.patch: A patch for GDB (against the latest CVS version)
	to implement variable lifetimes.

2002-04-12  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs (DieVariable): Provide info about the variable's
	lifetime using DW_AT_begin_scope and a new baulig extension DW_AT_end_scope.

2002-03-29  Martin Baulig  <martin@gnome.org>

	* AssemblerWriterI386.cs: Rewrote most of the string output function, do the
	number->string conversion manually. It's now taking about 15 seconds to write
	a symbol file for MCS, no longer more than a minute.

	* MonoDwarfFileWriter.cs: Added some profiling code, speeded things up, fixed
	a few bugs.

2002-03-25  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs (CreateType): Return a `DieType'.
	(RegisterType): Add the type to the type hash before creating dependency types
	so we don't get recursion loops.
	(RegisterPointerType): New func to register a "pointer to type" type.
	(DieTypeDef, DiePointerType, DieArrayType, DieStringType, DieClassType): New
	types; added support for strings, arrays and basic support for classes.
	
2002-03-24  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs: Killed all methods in this interface, no longer needed.

	* MonoSymbolWriter.cs (MonoSymbolWriter): The constructor now takes a string
	argument which is the full pathname of the assembly - you must call Close()
	after the assembly has been written to disk since the symbol writer needs to
	load the finished assembly to get its metadata.

	* MonoDwarfFileWriter.cs: Added support for enums and structs.
	
2002-03-24  Martin Baulig  <martin@gnome.org>

	* MonoDwarfFileWriter.cs: Added support for method parameters.

2002-03-24  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (IMonoSymbolWriter): Removed my custom OpenMethod(),
	we're now using the ISymbolWriter's method.
	(IVariable): Added `byte[] Signature' property.

	* MonoSymbolWriter.cs (SetAssembly): New method. This must be called before
	Close(); the assembly parameter is the already-written assembly, ie. it must
	contain the full metadata.
	(OpenMethod): Only take the token argument and set MethodInfo later in DoFixups.
	(SetMethodSourceRange): You must call this function to tell the symbol writer
	in which source file the method is defined.
	(DefineLocal): Store the signature in the local.
	(DoFixups): Use two new interncalls to set the SourceMethod's MethodInfo field
	and the LocalVariable's Type field.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (ISourceBlock): New interface.
	(ILocalVariable): Renamed this interface to IVariable.
	(IVariable): Added Line, Type, Token.
	(ILocalVariable, IMethodParameter): New interfaces, derive from IVariable.
	(ISourceMethod): Added Blocks. Renamed FirstLine and LastLine to Start and End,
	changed their type to ISourceLine. Removed CodeSize.
	(ISourceLine): Renamed Line to Row, added Column. Added OffsetType and Offset.

	* MonoDwarfFileWriter.cs (MonoDwarfFileWriter.DieLexicalBlock): New class.
	(MonoDwarfFileWriter.DieMethodVariable): New class.

	* MonoSymbolWriter.cs (OpenScope, CloseScope): Implemented.
	Reflected latest IMonoSymbolWriter interface changes.

2002-03-20  Martin Baulig  <martin@gnome.org>

	* IAssemblerWriter.cs: New interface.

	* AssemblerWriterI386.cs: New class.

	* MonoDwarfFileWriter.cs: Use the IAssemblerWriter interface to make this class
	platform and assembler independent.

2002-03-20  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (ISourceMethod): Added FirstLine, LastLine, CodeSize and
	Token properties.

	* MonoDwarfFileWriter.cs: Implemented line number support.

2002-03-19  Martin Baulig  <martin@gnome.org>

	* IMonoSymbolWriter.cs (ISourceFile, ISourceMethod, ISourceLine, ILocalVariable):
	New interfaces.

	* IMonoSymbolWriter.cs (OpenMethod): Take a System.Reflection.MethodInfo, not
	a string.

2002-03-19  Martin Baulig  <martin@gnome.org>

	This is an implementation of the System.Diagnostics.SymbolStore.SymbolWriter
	interface. It's still work in progress and not yet used anywhere.

	There is some preliminary documentation in the source files and some more
	docu in the README and README.relocation-table files.

	* IMonoSymbolWriter.cs: New file.
	* MonoDwarfFileWriter.cs: New file.
	* MonoSymbolDocumentWriter.cs: New file.
	* MonoSymbolWriter.cs: New file.

	* README, README.relocation-table: Documentation.

