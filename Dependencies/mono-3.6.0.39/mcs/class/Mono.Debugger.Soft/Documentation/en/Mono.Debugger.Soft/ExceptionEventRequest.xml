<Type Name="ExceptionEventRequest" FullName="Mono.Debugger.Soft.ExceptionEventRequest">
  <TypeSignature Language="C#" Value="public sealed class ExceptionEventRequest : Mono.Debugger.Soft.EventRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionEventRequest extends Mono.Debugger.Soft.EventRequest" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger.Soft</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Debugger.Soft.EventRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public override void Enable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Enable() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Soft.TypeMirror ExceptionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.Debugger.Soft.TypeMirror ExceptionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Soft.TypeMirror</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
