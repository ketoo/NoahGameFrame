2009-05-07 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Connection.cs: if the socket is already disconnected, Shutdown will
	fail with a SocketException... Also, catch *all* the possible
	exceptions since the socket.Close method could also throw
	ObjectDisposedException.
	Fixes bug #449092.

2008-12-20  Jeroen Asselman <jeroen-novel@asselman.com>

	* Connection.cs: Apply patch from #436775, there is no need to
	free the semaphores both in the catch clauses as well as the
	finally clause.

2006-12-28  Jon Larimer <jlarimer@gmail.com>

	* Connection.cs: Add a try/finally section to release the
	semId semaphore in case the connection fails.  

	Fixes #80102

2006-02-26  Konstantin Triger <kostat@mainsoft.com>

	* SupportClass.cs, Message.cs, MessageAgent.cs, MessageVector.cs: increase compliancy with jldap making
		the MessageVector a synchronized collection. Based on Mike Glenn <mglenn@zoominternet.net> and 
		JD Conley <jd.conley@coversant.net> patches.

2006-01-26 Konstantin Triger <kostat@mainsoft.com>

        * Connection.cs: TARGET_JVM: catch ObjectDisposedException in addition 
        	to ThreadAbortException
        * SupportClass.cs: TARGET_JVM: optimizing byte[] <-> sbyte[] conversion

2005-11-06 Konstantin Triger <kostat@mainsoft.com>

        * LdapConnection.cs: TARGET_JVM: create GSSCredential only once, cleanup

2005-11-03 Konstantin Triger <kostat@mainsoft.com>

	* LdapConnection.cs: TARGET_JVM: throw an exception if failed during
		secure binding.

2005-11-03 Konstantin Triger <kostat@mainsoft.com>

	* Connection.cs: TARGET_JVM: ifdef the unsupported method

2005-10-30 Konstantin Triger <kostat@mainsoft.com>

	* LdapConnection.cs: TARGET_JVM: if no credentials supplied, 
	  try to login with current user credentials.
