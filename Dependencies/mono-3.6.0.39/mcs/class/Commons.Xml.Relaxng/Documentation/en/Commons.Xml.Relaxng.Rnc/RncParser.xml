<Type Name="RncParser" FullName="Commons.Xml.Relaxng.Rnc.RncParser">
  <TypeSignature Language="C#" Value="public class RncParser" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Commons.Xml.Relaxng</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 D2 D0 3A 8E 6B EA 7A 2E 74 E8 D1 AF CC 93 E8 85 19 74 95 2B B4 80 A1 2C 91 34 47 4D 04 06 24 47 C3 7E 0E 68 C0 80 53 6F CF 3C 3F BE 2F F9 C9 79 CE 99 84 75 E5 06 E8 CE 82 DD 5B 0F 35 0D C1 0E 93 BF 2E EE CF 87 4B 24 77 0C 50 81 DB EA 74 47 FD DA FA 27 7B 22 DE 47 D6 FF EA 44 96 74 A4 F9 FC CF 84 D1 50 69 08 93 80 28 4D BD D3 5F 46 CD FF 12 A1 BD 78 E4 EF 00 65 D0 16 DF]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Implements a RELAX NG Compact Syntax parser.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="ParseRnc">
      <MemberSignature Language="C#" Value="public static Commons.Xml.Relaxng.RelaxngPattern ParseRnc (System.IO.TextReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Commons.Xml.Relaxng.RelaxngPattern</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <summary>This static method internally calls ParseRnc (reader, new NameTable ()).</summary>
        <param name="reader">a <see cref="T:System.IO.TextReader" /> that holds the compact syntax source.</param>
        <returns>The resulting <see cref="T:Commons.Xml.Relaxng.RelaxngPattern" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseRnc">
      <MemberSignature Language="C#" Value="public static Commons.Xml.Relaxng.RelaxngPattern ParseRnc (System.IO.TextReader reader, System.Xml.XmlNameTable nameTable);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Commons.Xml.Relaxng.RelaxngPattern</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <summary>This static method internally creates a new instance of this class and then parses the input compact syntax and returns the result pattern.</summary>
        <param name="reader">a <see cref="T:System.IO.TextReader" /> that holds the compact syntax source.</param>
        <param name="nameTable">a <see cref="T:System.Xml.XmlNameTable" /> that is passed to the instance constructor.</param>
        <returns>The resulting <see cref="T:Commons.Xml.Relaxng.RelaxngPattern" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public Commons.Xml.Relaxng.RelaxngPattern Parse (System.IO.TextReader source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Commons.Xml.Relaxng.RelaxngPattern</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <summary>Parses the input compact syntax source and returns the pattern object.</summary>
        <param name="source">a <see cref="T:System.IO.TextReader" /> that holds the input compact syntax.</param>
        <returns>a <see cref="T:Commons.Xml.Relaxng.RelaxngPattern" /></returns>
        <remarks>The resulting pattern is not compiled. To make sure that the pattern is valid in the context of simplification and limitation defined by the RELAX NG specification, you have to call Compile () against the resulting pattern.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RncParser (System.Xml.XmlNameTable nameTable);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <summary>The constructor.</summary>
        <param name="nameTable">a <see cref="T:System.Xml.XmlNameTable" /> that is used through this parser.</param>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public int Line { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Represents the line number that progresses on parse.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Represents the column number that progresses on parse.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public string DefaultNamespace { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Holds the default namespace through the parse phase.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorOutput">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter ErrorOutput;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyFinal">
      <MemberSignature Language="C#" Value="protected static int yyFinal;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyRule">
      <MemberSignature Language="C#" Value="public static string[] yyRule;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyNames">
      <MemberSignature Language="C#" Value="protected static string[] yyNames;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyMax">
      <MemberSignature Language="C#" Value="protected int yyMax;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyDgoto">
      <MemberSignature Language="C#" Value="protected static short[] yyDgoto;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yySindex">
      <MemberSignature Language="C#" Value="protected static short[] yySindex;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyRindex">
      <MemberSignature Language="C#" Value="protected static short[] yyRindex;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyGindex">
      <MemberSignature Language="C#" Value="protected static short[] yyGindex;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyTable">
      <MemberSignature Language="C#" Value="protected static short[] yyTable;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyCheck">
      <MemberSignature Language="C#" Value="protected static short[] yyCheck;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyerror">
      <MemberSignature Language="C#" Value="public void yyerror (string message);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyerror">
      <MemberSignature Language="C#" Value="public void yyerror (string message, string[] expected);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="expected" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="expected">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyname">
      <MemberSignature Language="C#" Value="public static string yyname (int token);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyExpecting">
      <MemberSignature Language="C#" Value="protected string[] yyExpecting (int state);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="yyDefault">
      <MemberSignature Language="C#" Value="protected object yyDefault (object first);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
