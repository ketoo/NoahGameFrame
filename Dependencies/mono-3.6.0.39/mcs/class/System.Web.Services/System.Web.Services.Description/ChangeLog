2010-03-03  Lluis Sanchez Gual <lluis@novell.com> 

	* ServiceDescriptionCollection.cs: When looking for bindings and other
	items, look in the list instead of the namespace table, since the
	collection may have several description documents with the same
	namespace.
	* ProtocolImporter.cs: Same as above. A schemas collection can have
	more than one schema with the same name, so we can use the namespace
	indexer to find schemas.
	* BasicProfileChecker.cs: Added null check.

2010-02-01  Jb Evain  <jbevain@novell.com>

	* SoapProtocolImporter.cs: properly generate the SoapHeader
	attribute on NET_2_0.

2009-09-30  Miguel de Icaza  <miguel@novell.com>

	* ExtensionManager.cs: Initialize the NET_2_0 pieces with
	MonoTouch, but do not register any of the System.Configuration
	depending extensions.

	BuildExtensionImporters, BuildExtensionReflectors: empty methods
	for MOnoTouch.

	* ServiceDescriptionImporter.cs, WebReference.cs: Remove
	codegeneration features for MonoTouch

2008-12-18  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : /definitions/message/part could omit
	  name attribute and it should not cause null key error.

2008-12-09  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : reimplemented R2305 that turned out to
	  be wrong on fixing bug #443095 (fixed).

2008-10-28  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : use indexer instead of Add() for
	  collected MessagePart table. Fixed bug #434892.

2008-07-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionSerializerBase2.cs,
	  ServiceDescriptionSerializerBase.cs : regenerated with the latest
	  sys.xml(.serialization).

2008-07-02  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolImporter.cs : make event stuff public.

2008-07-01  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : it does not really resolve relative URI in
	  <import> element. It caused error, which should be reported, but
	  .net ignores it. It must be LAMESPEC. Anyways added comments.

2008-07-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescription.cs : fill RetrievalUrl by string.Empty
	  by default.

2008-07-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolImporter.cs, HttpSimpleProtocolImporter.cs,
	  SoapProtocolImporter.cs : make classes partial in 2.0 profile.

2008-06-10  Vladimir Krasnov  <vladimirk@mainsoft.com>

	* ProtocolReflector.cs: fixed ImportBinding method, ports with the same
        name declaration when non-default binding used, #345449

2008-04-01  Lluis Sanchez Gual <lluis@novell.com> 

	* ProtocolImporter.cs: Use the binding name as class name for the
	  proxy.
	* SoapProtocolImporter.cs: Use the element name as field name for soap
	  headers. In 2.0, generate a property for accessing the field.

2008-02-22  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolReflector.cs : reverted previous change, which caused
	  several regressions.

2007-12-11  Vladimir Krasnov <vladimirk@mainsoft.com>

	* ProtocolReflector.cs: fixed ImportBinding method, ports with the same
	name declaration when non-default binding used, #345449 

2007-11-01  Gert Driesen  <drieseng@users.sourceforge.net>

	* SoapProtocolImporter.cs: Only output Required argument for
	SoapHeaderAttribute on .NET 1.0, since it is not used in .NET 1.1 and
	higher. Avoids numerous warnings when compiling generated code.

2007-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionCollection.cs : added missing members.

2007-08-31  Gert Driesen  <drieseng@users.sourceforge.net>

	* ServiceDescription.cs: Do not require write access to file.

2007-05-20  Konstantin Triger <kostat@mainsoft.com>

	* ProtocolReflector.cs: init context with current checker.

2007-05-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolImporter.cs, ServiceDescriptionImporter.cs : when there
	  is no binding item for a supported protocol in a WSDL, skip such
	  protocol and try next protocol, so that it can match HTTPGET-only
	  WSDLs. Part of fix for #81457.

2007-05-08  Atsushi Enomoto  <atsushi@ximian.com>

	* HttpSimpleProtocolReflector.cs : ServerType -> LogicalTypeInfo.

2007-05-07  Adar Wesley <adarw@mainsoft.com>

	* ProtocolReflector.cs: added missing method ReflectDescription.
	implementation throws NotImplementedException.

2007-03-21  Konstantin Triger <kostat@mainsoft.com>

	* ConformanceChecker.cs, BasicProfileChecker.cs: enable looking the
		documents up by namespace.

2007-03-11  Konstantin Triger <kostat@mainsoft.com>

	* ConformanceChecker.cs, WebServicesInteroperability.cs, ProtocolReflector.cs,
		BasicProfileChecker.cs: fix validation of the R2401 rule.

2007-03-11  Konstantin Triger <kostat@mainsoft.com>

	* ServiceDescriptionFormatExtensionCollection.cs: make FindAll(Type)
		consistent with Find(Type).

2007-02-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionSerializeBase2.cs : regenerated with the latest
	  genxs.

2007-02-28  Konstantin Triger <kostat@mainsoft.com>

	* ProtocolReflector.cs: emit conformance claims when required.

2007-02-27  Konstantin Triger <kostat@mainsoft.com>

	* DocumentableItem.cs: consider empty string as nothing for documentation.

2007-02-06  Konstantin Triger <kostat@mainsoft.com>

	* ProtocolReflector.cs: Ensure the schemas are available for validation.

2007-02-01  Konstantin Triger <kostat@mainsoft.com>

	* ProtocolReflector.cs: throw if not conformant, but declared to be.

2007-01-25  Konstantin Triger <kostat@mainsoft.com>

	* ServiceDescriptionReflector.cs: describe only supported bindings and
		never HttpPostLocalhost.

2007-01-19  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionImporter.cs : initialize CodeGenerator with C#.
	* SoapProtocolImporter.cs : use XmlMemberMapping.GenerateTypeName()
	  instead of TypeFullName for 2.0 nullable support. Fixed bug #80551.

2006-12-18  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolReflector.cs, SoapProtocolReflector.cs,
	  ServiceDescriptionReflector.cs :
	  When both SOAP 1.1 and 1.2 bindings are to be imported, it should
	  not emit identical Messages and schema types twice. Hence SOAP
	  reflector now skips duplicates.

2006-12-15  Atsushi Enomoto  <atsushi@ximian.com>

	* SoapExtensionReflector.cs, SoapProtocolReflector.cs :
	  Now SOAP bindings are reflected through extension reflectors.
	  Added implementations for SOAP 1.1 and SOAP 1.2 (2.0 only).
	  The common SoapBindingExtensionReflector implements reflector
	  methods which used to be in SoapProtocolReflector. Also
	  subclassed SoapProtocolReflector to switch SOAP 1.1 and 1.2.
	* ServiceDescriptionReflector.cs : under 2.0, use
	  Soap12ProtocolReflector and export soap12 bindings as well.
	* ProtocolImporter.cs : under 2.0 profile, handle SOAP 1.2 encoding
	  namespace (http://www.w3.org/2003/05/soap-encoding) as well.
	* ProtocolReflector.cs : call ReflectDescription(). Added FIXME.

2006-12-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolReflector.cs, SoapExtensionReflector.cs : added
	  ReflectDescription() and its use.

2006-12-15  Atsushi Enomoto  <atsushi@ximian.com>

	* SoapProtocolImporter.cs : since Soap12Binding is derived from
	  SoapBinding, extra care in IsBindingSupported() is needed.

2006-12-14  Atsushi Enomoto  <atsushi@ximian.com>

	* SoapProtocolImporter.cs : if the importer is SOAP12, initialize
	  SoapVersion in generated code.
	* ServiceDescriptionImporter.cs,
	  ProtocolImporter.cs : reduce extra argument.
	* ServiceDescriptionSerializerBase2.cs : fix warnings.

2006-12-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescription.cs : added soap12 namespace mapping in output.
	* ServiceDescriptionCollection.cs,
	  ServiceDescriptionImporter.cs : fixed an issue that two ImportInfos
	  are processed. Make Importer.AddServiceDescription() independent
	  of ServiceDescriptionCollection.

2006-12-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ExtensionManager.cs : added SOAP 1.2 binding extensions.
	* SoapProtocolImporter.cs,
	  ServiceDescriptionImporter.cs :
	  Added SOAP 1.2 protocol importer.
	  Protocol name comparison is case insensitive.

2006-12-14  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : fixed R2305 check, which did wrong check
	  on Operations.
	* Operation.cs : ParameterOrder should not contain empty strings.
	* WebServicesInteroperability.cs : they are all done. All wrong
	  behaviors should be regarded as bugs.

2006-12-12  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs :
	  Finished all rule review and implementation.

2006-12-12  Atsushi Enomoto  <atsushi@ximian.com>

	* OperationCollection.cs, OperationMessageCollection.cs:
	  added internal Find() to find an item by name.
	* BasicProfileChecker.cs : implemented R2803, R2710, R2711, R2716,
	  R2717, R2726, R2718, R2720, R2721, R2754 and R2723 (in order in
	  the WS-BP1.1 spec).

2006-12-11  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : more rule review, with Basic Profile TAD.
	  Implemented some more rules: R2304-R2306.

2006-12-11  Atsushi Enomoto  <atsushi@ximian.com>

	* WebServicesInteroperability.cs :
	  Format extension could be XmlElement, so don't expect wrong cast.

2006-12-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolImporter.cs : (ImportsEncodedNamespace) XmlSchemaExternal
	  could be of other types than XmlSchemaImport.

2006-12-04  Atsushi Enomoto  <atsushi@ximian.com>

	* SoapProtocolImporter.cs : added trivial IsSoapEncodingPresent().

2006-12-01  Atsushi Enomoto  <atsushi@ximian.com>

	* wsdl-1.1-soap.xsd : new file. WSDL 1.1 SOAP binding schema.
	* SoapBinding.cs: implement Schema property.

2006-12-01  Atsushi Enomoto  <atsushi@ximian.com>

	* ExtensionManager.cs : WebServicesSection.Instance -> .Current.

2006-11-30  Atsushi Enomoto  <atsushi@ximian.com>

	* SoapProtocolReflector.cs : Added alias HeaderInfo to
	  SoapHeaderMapping. Renamed some properties.

2006-11-30  Atsushi Enomoto  <atsushi@ximian.com>

	* HttpSimpleProtocolReflector.cs : LogicalTypeInfo -> ServerType.

2006-11-30  Atsushi Enomoto  <atsushi@ximian.com>

	* SoapHeaderFaultBinding.cs, NamedItem.cs, SoapBinding.cs,
	  MimeXmlBinding.cs, SoapBodyBinding.cs, MimeContentBinding.cs,
	  SoapHeaderBinding.cs, HttpBinding.cs: cosmetic 2.0 API fixes.

2006-11-30  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileViolationEnumerator.cs : new missing 2.0 class.
	* BasicProfileViolationCollection.cs : use it.

2006-11-28  Atsushi Enomoto  <atsushi@ximian.com>

	* BasicProfileChecker.cs : reviewed and updated some of the
	  requirements to Basic Profile 1.1 Final Material.

2006-11-15  Atsushi Enomoto  <atsushi@ximian.com>

	* WebReference.cs : added missing .ctor().

2006-11-15  Atsushi Enomoto  <atsushi@ximian.com>

	* WebReferenceOptionsSerializer.cs :
	  (#if NET_2_0) oops, I did it again :-(

2006-11-15  Atsushi Enomoto  <atsushi@ximian.com>

	* web-reference.genxs : fixed <reader> -> <writer>.
	* WebReferenceOptionsSerializer.cs : regenerated.

2006-11-15  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionImporter.cs : API fix. Now we can use new
	  WebReferenceOptions.

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* WebReferenceOptionsSerializer.cs : oops, surrounding #if NET_2_0
	  is required when it is regenerated.

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* WebReferenceOptions.cs : actually Read() raises invalid operation
	  when it raises an error.

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* web-reference.xsd : fixed namespace URI.
	* web-reference.genxs : genxs file.
	* WebReferenceOptionsSerializer.cs : new file, generated by genxs.
	* WebReferenceOptions.cs : implemented Read().

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionImportStyle.cs : added XmlEnum attributes in
	  2.0 profile.
	* WebReferenceOptions.cs : new 2.0 class.
	* web-reference.xsd : new resource for WebReferenceOptions.Schema.

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescription.cs : add [XmlIgnore] to ValidationWarnings.
	  (yes, it is a collection, thus we need explicit attribute.)

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* ConformanceChecker.cs, WebServicesInteroperability.cs,
	  BasicProfileViolation.cs, BasicProfileChecker.cs:
	  2.0 API fixes (WsiClaims -> WsiProfiles).

2006-11-14  Atsushi Enomoto  <atsushi@ximian.com>

	* wsdl-1.1.xsd : imported from the spec site (schemas.xmlsoap.org)
	  to be used for ServiceDescription.Schema.
	* ServiceDescription.cs : added Schema property and validating Read() 
	  overloads.

2006-11-07  Atsushi Enomoto  <atsushi@ximian.com>

	* ServiceDescriptionSerializerBase2.cs :
	  sync with sys.xml.serialization API updates.

2006-10-25  Ankit Jain  <jankit@novell.com>

	* ServiceDescriptionSerializerBase2.cs: Mark classes as internal.

2006-09-07  Ankit Jain  <jankit@novell.com>

	* ServiceDescription.cs (.ctor): Set targetNamespace = null,
	and initialize 'types'.
	(ServiceDescription.ServiceDescriptions): Don't throw NRE.

2006-09-06  Vladimir Krasnov

	* ServiceDescriptionSerializerBase2.cs: inserted TARGET_JVM for not
	supported class

2006-09-05  Ankit Jain  <jankit@novell.com>

	* wsdl.genxs: Remove readerhooks for "unknownAttribute" and
	"attributes".
	* ServiceDescription.cs (ServiceDescription.AddUnknownAttribute):
	(ServiceDescription.SetExtensibleAttributes): Remove.
	* ServiceDescriptionSerializerBase.cs: Regenerated with genxs (for
	!NET_2_0 profile)
	* ServiceDescriptionSerializerBase2.cs: Generated with genxs2 (for
	NET_2_0 profile)

2006-09-05  Lluis Sanchez Gual <lluis@novell.com>

	* BasicProfileChecker.cs: In FindMessage, get faults messages from the
	  Faults collection. Added null check.

2006-09-05  Ankit Jain  <jankit@novell.com>

	* ServiceDescriptionImportWarnings.cs: Remove [Serializable].

2006-09-05  Ankit Jain  <jankit@novell.com>

	* OperationFlow.cs: Remove [Serializable].

2006-09-05  Ankit Jain  <jankit@novell.com>

	* DocumentableItem.cs (DocumentableItem.Namespaces): Add missing NET_2_0
	property.

2006-08-23  Konstantin Triger <kostat@mainsoft.com>

	* ServiceDescriptionReflector.cs: remove CONFIGURATION_2_0 #if since NET_2_0
		implies it.
	* ServiceDescription.cs: Added TARGET_JVM to workaround lack of TARGET_JVM
		support for 'new T()' in generics.

2006-08-21  Konstantin Triger <kostat@mainsoft.com>

	* ServiceDescriptionCollection.cs: refactoring for Add(), removing using of
		ServiceDescriptionImporter for java profile as there is no support for
		code generation.

2006-07-24  Atsushi Enomoto  <atsushi@ximian.com>

	* ProtocolImporter.cs, ServiceDescriptionImporter.cs :
	  some 2.0 API fixes from betas to RTM.

2006-06-08  Chris Toshok  <toshok@ximian.com>

	* ExtensionManager.cs: remove the CONFIGURATION_2_0 from ifdefs.
	NET_2_0 implies this now.

2006-05-03  Ankit Jain  <jankit@novell.com>

	* wsdl.genxs: Call ReadExtension for all unknown elements.
	* ServiceDescription.cs (ServiceDescription.ReadExtension): Add
	XmlDocument param. For NET_2_0, add any elements with no corresponding
	extensions to the DocumentableItem.Extensions property.
	(ServiceDescriptionSerializer.Serialize): Use
	WriteRoot_ServiceDescription instead of WriteTree.
	(ServiceDescriptionSerializer.Deserialize): Use
	ReadRoot_ServiceDescription instead of ReadTree.
	* ServiceDescriptionSerializerBase.cs: Regenerate.

2006-04-27  Ankit Jain  <jankit@novell.com>

	* OperationMessage.cs (Extensions): Remove, incorrectly added in earlier
	commit.
	* OperationInput.cs (Extensions):
	* OperationOutput.cs (Extensions):
	* OperationFault.cs (Extensions): Override and implement missing property.

2006-04-27  Ankit Jain  <jankit@novell.com>

	* ServiceDescriptionSerializerBase.cs (ServiceDescriptionWriterBase):
	Make it internal.

2006-04-27  Ankit Jain  <jankit@novell.com>

	* DocumentableItem.cs (ExtensibleAttributes):
	(Extensions): Add missing NET_2_0 properties.
	* Port.cs:
	* OperationBinding.cs:
	* MessagePart.cs
	* Binding.cs:
	* Types.cs:
	* Service.cs:
	* OperationMessage.cs:
	* Message.cs: 
	* Import.cs: 
	* Operation.cs:
	* PortType.cs: Override and implement Extensions property. Add
	XmlFormatExtensionPoint attribute.

	* MessageBinding.cs: Abstract Extensions property is not present in
	NET_2_0.

	* wsdl.genxs: Update to process unknown attributes as ExtensibleAttributes in NET_2_0.
	* ServiceDescriptionSerializerBase.cs: Regenerated from wsdl.genxs

	* ServiceDescription.cs (ServiceDescription.AddUnknownAttribute): New. Add attribute to
	attributes collection.
	(ServiceDescription.SetExtensibleAttributes): Set DocumentableItem.ExtensibleAttributes
	property.

	* ServiceDescriptionFormatExtensionCollection.cs
	(ServiceDescriptionFormatExtensionCollection.SetParent): Set only if
	value is a ServiceDescriptionFormatExtension type object.

2006-03-12  VLadimir Krasnov  <vladimirk@mainsoft.com>

	* ServiceDescription.cs: removed TARGET_JVM directives from
	serializer member

2006-01-04  Chris Toshok  <toshok@ximian.com>

	* ExtensionManager.cs: add CONFIGURATION_2_0 stuff.

	* ServiceDescriptionReflector.cs: add CONFIGURATION_2_0 stuff.

2005-12-07  Lluis Sanchez Gual <lluis@novell.com>

	* ProtocolImporter.cs: nullify message fields before processing a
	new method.
	* SoapProtocolImporter.cs: Only use the wrapped format if both the
	input and output messages specify that format. If one of them is not,
	then use bare format. This partially fixes bug #75019.

2005-10-05  Atsushi Enomoto <atsushi@ximian.com>

	* wsdl.genxs, ServiceDescriptionSerializerBase.cs : dependent fix on
	  XmlSchema.Read(). Fixed bug #76311.
	* ServiceDescription.cs : name is null by default otherwise it fails
	  to be written.

2005-09-01  Ilya Kharmatsky <ilyak at mainsoft.com >

    * In WebReference.cs excluded by TARGET_J2EE directives 
      constructors / methods which use CodeDom API (unsupported in
      J2EE configuration.
      
2005-08-15  Gert Driesen <drieseng@users.sourceforge.net>

	* DocumentableItem.cs: DocumentationElement is also available in .NET
	1.1.
	* MimeMultipartRelatedBinding.cs: Changed XmlElement name of Parts
	property to match MS.NET.
	* OperationMessageCollection.cs: Removed GetKey override to match
	MS.NET.
	* ServiceDescriptionImportWarnings.cs: SchemaValidation and 
	WsiConformance should only be exposed in 2.0 profile.
	* ServiceDescriptionFormatExtension.cs: Parent should not be ignored 
	on 2.0 profile.

2005-06-14  Lluis Sanchez Gual <lluis@novell.com>

	* SoapProtocolReflector.cs: Set the part name when using bare encoded format.
	* ServiceDescriptionFormatExtensionCollection.cs: Use IsInstanceOfType instead
	of Type.IsAssignableFrom when possible.

2005-06-06  Kornél Pál <kornelpal@hotmail.com>

	* ServiceDescriptionReflector.cs: Added support for HttpPostLocalhost and HttpSoap12

2005-06-05 Konstantin Triger <kostat@mainsoft.com>

	* ServiceDescriptionSerializerBase.cs: Perform correct name encoding
	* ServiceDescription.cs, SoapTransportImporter.cs: moving static fields to AppDomain in Java builds

2005-04-11  Lluis Sanchez Gual <lluis@novell.com>

	* ServiceDescriptionCollection.cs: Notify the parent importer
	  when a service description is added.
	* ServiceDescriptionImporter.cs: Register wsdl docs added to the
	  collection.

2005-02-07  Lluis Sanchez Gual <lluis@novell.com>

	* HttpSimpleProtocolImporter.cs: Fixed warning.

2004-11-08  Lluis Sanchez Gual  <lluis@novell.com>

	* HttpPostProtocolReflector.cs: Avoid generating an empty part attribute.
	  This was causing problems when importing the wsdl from MS Visual Studio.

2004-10-26  Lluis Sanchez Gual  <lluis@novell.com>

	* ProtocolImporter.cs, HttpSimpleProtocolImporter.cs,
	  SoapProtocolImporter.cs: When appsettingurlkey is provided, generate
	  code that reads the url from the config file, instead of doing it at
	  the moment of generation. This fixes bug #68795.

2004-10-01  Lluis Sanchez Gual  <lluis@novell.com>

	* HttpSimpleProtocolImporter.cs: Fix import of arrays of primitive types.

2004-09-13  Lluis Sanchez Gual  <lluis@novell.com>

	* ServiceDescriptionReflector.cs: Don't generate empty schemas.

2004-09-03  Lluis Sanchez Gual  <lluis@novell.com>

	* ProtocolImporter.cs: Fixing the fix. The generated class must always
	  be added.

2004-09-01  Lluis Sanchez Gual  <lluis@novell.com>

	* BasicProfileChecker.cs: Some small fixes.
	* FaultBinding.cs: Removed useless code.
	* HttpSimpleProtocolImporter.cs, SoapProtocolImporter.cs: Take into account 
	  that now we may be generating code for a binding which is not referenced
	  by any port. In this case Port is null.
	* MessageBinding.cs: Properly set the parent operation binding.
	* OperationBinding.cs: When adding messages, set its parent property.
	* ProtocolImporter.cs: Support generation of proxies for wsdl documents
	  that do not have any Service entry. In this case, it now generates
	  a proxy for every binding.

2004-08-24  Lluis Sanchez Gual  <lluis@ximian.com>

	* BasicProfileChecker.cs: Implemented more rules.
	* ConformanceChecker.cs: Added service list property in 
	  ConformanceCheckContext.
	* MessagePart.cs: Added some convenient internal properties.
	* OperationMessageCollection.cs: Added property for getting the fault
	  message.
	* ServiceDescriptionFormatExtensionCollection.cs: The find method now
	  can return subclasses of the provided class.
	* WebServicesInteroperability.cs: Set the context schema when processing
	  a schema.

2004-07-28  Lluis Sanchez Gual  <lluis@ximian.com>

	* BasicProfileChecker.cs, ConformanceChecker.cs, 
	  WebServicesInteroperability.cs: Fixed build errors. I commited before
	  it was ready :-(.
	
2004-07-28  Lluis Sanchez Gual  <lluis@ximian.com>

	* BasicProfileChecker.cs: Added checks for R2101, R2102, R2105, R2110, R2111
	* ConformanceChecker.cs: Added check methods for schema objects.
	* WebServicesInteroperability.cs: Added checks for schema objects.

2004-07-26  Lluis Sanchez Gual  <lluis@ximian.com>

	* HttpSimpleProtocolImporter.cs: Implemented internal method to support
	  the new asyc model.
	* ProtocolImporter.cs: Generate code for the new async model.
	  Added support for generating server skeletons in addition to client
	  proxies.
	* ServiceDescriptionImporter.cs: Removed unneded check.
	* SoapProtocolImporter.cs: Added support for generating server skeletons in
	  addition to client proxies.

2004-07-23  Lluis Sanchez Gual  <lluis@ximian.com>

	* ServiceDescriptionImporter.cs: Fixed bug when getting documents from a
	  reference.
	* SoapProtocolImporter.cs: Create code exportes using the corrent generation
	  options. Added final attribute to the generated methods (so generated
	  methods are not virtual any more).
	* WebServicesInteroperability.cs: Fixed bug when getting documents from a
	  reference. Added check for Import elements.
	
2004-07-22  Lluis Sanchez Gual  <lluis@ximian.com>

	* ProtocolImporter.cs: Added some internal properties needed for 2.0
	  features.
	* ServiceDescriptionImporter.cs: Implemented some 2.0 methods.
	* SoapProtocolImporter.cs: Create xml importers using the correct
	  ImportContext and generation options.
	* WebReference.cs: It is now internal for 1.1 profile. Implemented some
	  properties.
	* CodeGenerationOptions.cs: Made internal in 1.1 profile.
	* ImportContext.cs: Implemented.
	* XmlSchemaImporter.cs: Implemented some 2.0 constructors.

2004-07-14  Lluis Sanchez Gual  <lluis@ximian.com>

	* ConformanceChecker.cs, BasicProfileChecker.cs: New files that implement
	  the basic infrastructure for basic profile conformance checking.
	* BasicProfileViolation.cs: Take normative information from the rule object.
	* BasicProfileViolationCollection.cs: Added Add method.
	* ServiceDescriptionFormatExtension.cs: Little fix.
	* WebServicesInteroperability.cs: Implemented basic support for conformance
	  checking.

2004-07-13  Lluis Sanchez Gual  <lluis@ximian.com>

	* Binding.cs, Message.cs, MessageBinding.cs, MessagePart.cs, Operation.cs,
	  OperationBinding.cs, OperationMessage.cs, Port.cs, PortType.cs, 
	  Service.cs, ServiceDescription.cs, 
	  Name property moved to NamedItem in 2.0.
	* DocumentableItem.cs, ServiceDescriptionFormatExtension.cs,
	  ServiceDescriptionImportWarnings.cs, ServiceDescriptionImporter.cs,
	  SoapFaultBinding.cs: Added 2.0 api.
	* BasicProfileViolation.cs, BasicProfileViolationCollection.cs,
	  NamedItem.cs, Soap12AddressBinding.cs, Soap12Binding.cs,
	  Soap12BodyBinding.cs, Soap12FaultBinding.cs, Soap12HeaderBinding.cs,
	  Soap12OperationBinding.cs, WebReference.cs, WebReferenceCollection.cs,
	  WebServicesInteroperability.cs: Mostly implemented new 2.0 classes.

2004-07-01  Lluis Sanchez Gual  <lluis@ximian.com>

	* SoapProtocolReflector.cs: Don't generate wsdl for unknown header
	  attributes.

2004-06-25  Lluis Sanchez Gual  <lluis@ximian.com>

	* HttpSimpleProtocolImporter.cs: Added null check. The XmlTypeMapping for
	  the return type will be null if the method returns void.

2004-06-22  Lluis Sanchez Gual  <lluis@ximian.com>

	* HttpSimpleProtocolImporter.cs: Import return types as XmlTypeMapping,
	  not as XmlMemberMapping. This allows the use of the correct AddMetadata
	  method for generating attributes.

2004-06-11  Gert Driesen <drieseng@users.sourceforge.net>

	* SoapProtocolImporter.cs: Added stub for missing IsSoapEncodingPresent
	method
	* MimeContentBinding.cs: removed extra Default attribute from Part

2004-06-10  Lluis Sanchez Gual  <lluis@ximian.com>

	* HttpSimpleProtocolImporter.cs: Add needed XmlInclude attributes to the
	  generated class. Generate the correct data type for input parameters.
	* SoapProtocolImporter.cs: Like in MS.NET, take the first output parameter
	  as the return value of the method. When generating a header variable,
	  use the type name as the base for the variable name, not the part name.

2004-06-02  Lluis Sanchez Gual  <lluis@ximian.com>

	* HttpSimpleProtocolImporter.cs: Fixed case of generated methods to match
	  MS behavior. Always use import input parameters as System.String.
	* ProtocolImporter.cs: Remove _x0020_ from type names.
	* SoapProtocolImporter.cs: Fixed case of generated methods to match
	  MS behavior.
	
2004-06-01  Gert Driesen <drieseng@users.sourceforge.net>

	* Binding.cs: removed extra XmlIgnore attribute on ServiceDescription
	* Import.cs: removed extra XmlIgnore attribute on ServiceDescription
	* Message.cs: removed extra XmlIgnore attribute on ServiceDescription
	* MessageBinding.cs: removed extra DefaultValue attribute from Name,
	removed extra XmlIgnoreAttribute from OperationBinding
	* MessagePart.cs: removed extra XmlIgnore attribute on Message
	* MimeContentBinding.cs: removed extra DefaultValue attribute on Part
	* Operation.cs: removed extra XmlIgnore attribute on PortType
	* OperationBinding.cs: removed extra XmlIgnore attribute on Binding
	* OperationMessage.cs: removed extra XmlIgnore attribute on Operation
	* Port.cs: removed extra XmlIgnore attribute on Service
	* PortType.cs: removed extra XmlIgnore on ServiceDescription
	* Service.cs: removed extra XmlIgnore on ServiceDescription
	* ServiceDescriptionFormatExtension.cs: removed extra XmlIgnore
	  attribute on Parent
	* SoapHeaderBinding.cs: added XmlElement attribute on Fault
	* HttpSimpleProtocolImporter.cs: removed unused variable
	* ServiceDescriptionImporter.cs: removed unused variable
	* SoapProtocolImporter.cs: removed unused variable

2004-05-25  Lluis Sanchez Gual  <lluis@ximian.com>

	* BindingCollection.cs: Fixed this[string] property.

2004-05-24  Lluis Sanchez Gual  <lluis@ximian.com>

	* ProtocolImporter.cs: issue a warning if no services have been found.

2004-03-02  Lluis Sanchez Gual  <lluis@ximian.com>

	* SoapBinding.cs: Added missing attributes. The class is not sealed.
	* SoapBodyBinding.cs: Removed unneeded attributes.

2004-03-02  Lluis Sanchez Gual  <lluis@ximian.com>

	* ProtocolImporter.cs: Little fix in schema classification.
	
2004-02-27  Lluis Sanchez Gual  <lluis@ximian.com>

	* ExtensionManager.cs: Create all serializers for soap extensions at once.
	* HttpSimpleProtocolImporter.cs: Assign the correct set of schemas to the 
	  schema importers (do not mix literal schemas with encoded schemas).
	* ProtocolImporter.cs: Added LiteralSchemas and EncodedSchemas properties.
	  Separation between literal and encoded schemas is needed to avoid importing
	  for example a literal schema as encoded. Also implemented ClasifySchemas,
	  which separates literal from encoded schemas. I really don't like doing it
	  in this way, but I haven't found another way.
	* SoapProtocolImporter.cs: Add type include attributes to the generated
	  proxy classes.
	  
2004-02-11  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapProtocolReflector.cs: Fixed bug #53247. Element name asigned to the 
	  message part (in literal+bare format) was incorrect.

2004-01-27  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapProtocolImporter.cs, SoapProtocolReflector.cs: Support methods with 
	  "any" as return type. In this case, the part of the return message contains
	  a reference to the type that describes the "any" element.

2004-01-24  Lluis Sanchez Gual <lluis@ximian.com>

	* ExtensionManager.cs: Support more than one XmlFormatExtensionPrefixAttribute
	  un one soap extension.
	* HttpSimpleProtocolImporter.cs: Made class internal.
	* HttpSimpleProtocolReflector.cs.cs: ReflectMethodBinding(): GET and POST
	  do not use method bindings. Return null.
	* ProtocolReflector.cs: Several fixes: do not generate binding if it doesn't
	  have any operation, avoid port and binding name colisions, and other minor
	  fixes.
	* ServiceDescription.cs: Collect the namespaces to be added to the root
	  element of a serializaed wsdl document from the soap extensions.
	* ServiceDescriptionSerializerBase.cs: Made classes internal.
	* SoapAddressBinding.cs, SoapFaultBinding.cs, SoapOperationBinding.cs,
	  SoapProtocolImporter.cs: Class should not be sealed.
	* SoapBodyBinding.cs: Set the correct class attributes.
	* SoapHeaderBinding.cs: Class should not be sealed. Added missing method.
	* SoapHeaderFaultBinding.cs: Fixed class attributes.

2004-01-21  Lluis Sanchez Gual <lluis@ximian.com>

	* HttpSimpleProtocolImporter.cs: pass the web service class list to the xml 
	  importers to make sure that no data classes are created with the same
	  name as the web service.
	* ProtocolImporter.cs: Use port name as class name only if there is more
	  than one port using the same protocol. This fixes big #52742.

2004-01-19  Lluis Sanchez Gual <lluis@ximian.com>

	* HttpSimpleProtocolReflector.cs, SoapProtocolReflector.cs: 
	  Use GetWebServiceLiteralNamespace instead of WebServiceLiteralNamespace.
	* ProtocolReflector.cs: Port names must be unique in a service description.
	  This fixes bug #53019.
	* ProtocolImporter.cs: Little fix.

2004-01-14  Lluis Sanchez Gual <lluis@ximian.com>

	* ProtocolImporter.cs, SoapProtocolImporter.cs: Added support for OneWay
	operations (those don't	have output message).
	* SoapProtocolReflector.cs: Set the correct element name and
	namespace for headers (those are not managed like other data classes).

2004-01-13  Lluis Sanchez Gual <lluis@ximian.com>

	* ProtocolReflector.cs: in the case a new ServiceDescription is created, 
	the name of the BindingInfo was not copied into the new ServiceDescriptor.
	Patch by Yaacov Akiba Slama.

2003-12-12  Lluis Sanchez Gual <lluis@ximian.com>
	
	* HttpSimpleProtocolImporter.cs: In ImportOutMembersMapping(), support part
	  without element name (use anyType in this case).
	  In GetOutMimeFormatter(), support MimeContentBinding.
	* ProtocolImporter.cs, SoapProtocolImporter.cs: Improved error and warning
	  handling. Minor fixes.

2003-11-11  Lluis Sanchez Gual <lluis@ximian.com>

	* ServiceDescription.cs, SoapBinding.cs, SoapHeaderBinding.cs,
	  SoapHeaderFaultBinding.cs: Removed some TODOs and FIXMEs.

2003-10-20  Lluis Sanchez Gual <lluis@ximian.com>

	* ServiceDescription.cs: Fixed implementation of CanRead.

2003-10-15  Lluis Sanchez Gual <lluis@ximian.com>

	* MessageBinding.cs: Name property should be null by default.
	* ProtocolImporter.cs: Take into account the previous change.

2003-10-15  Lluis Sanchez Gual <lluis@ximian.com>

	* HttpSimpleProtocolReflector.cs, ProtocolReflector.cs: 
	  Fixed naming of messages.
	* ProtocolImporter.cs: It now iterates through all bindings. It creates
	  a namespace for all bindings.
	* ServiceDescriptionImporter.cs: Some code moved to ProtocolImporter.
	* SoapProtocolImporter.cs: Improved support for RPC format. It now is working.

2003-10-13  Lluis Sanchez Gual <lluis@ximian.com>

	* HttpSimpleProtocolReflector.cs, SoapProtocolReflector.cs: 
	  Get the namespace for literal types from LogicalTypeInfo, since it may not
	  be the same as the service namespace.
	* ProtocolReflector.cs: Access LogicalTypeInfo to get WS info common to
	  all protocols.
	* ServiceDescription.cs: Added soap/encoded namespace.
	* SoapProtocolImporter.cs: Added some bits of RPC format support.
	
2003-10-06  Lluis Sanchez Gual <lluis@ximian.com>

	* ProtocolImporter.cs: Moved some code to ServiceDescriptionImporter.
	  WebServiceBindingAttribute addition moved to SoapProtocolImporter.
	  Moved GetServiceUrl here (from SoapProtocolImporter).
	* ServiceDescriptionImporter.cs: Added support for HttpGet and HttpPost
	  importers.
	* SoapProtocolImporter.cs: Minor fixes.
	* HttpSimpleProtocolImporter.cs, HttpGetProtocolImporter.cs,
	  HttpPostProtocolImporter.cs: new files that implement HttpGet and HttpPost
	  importers.

2003-10-04  Lluis Sanchez Gual <lluis@ximian.com>

	* ProtocolReflector.cs: The ReflectionImporter property now creates a
	  reflector if the TypeStubInfo does not provide one.
	  Do not create XmlSchemaExporter. Take it from the service reflector, sine
	  it must be reused for all protocol reflectors. Moved some code to
	  SoapProtocolReflector, since it cannot be reused for all reflectors.
	* ServiceDescriptionReflector.cs: Reflect the type for all available 
	  protocols.
	* SoapProtocolReflector.cs: Moved here some code from ProtoclReflector.
	* HttpGetProtocolReflector.cs, HttpPostProtocolReflector.cs,
	  HttpSimpleProtocolReflector.cs: new files.
	
2003-10-01  Lluis Sanchez Gual <lluis@ximian.com>

	* ProtocolReflector.cs: Adapted to the changes in TypeStubInfo. Moved some
	  common code to ServiceDescriptionReflector.
	* ServiceDescriptionReflector.cs: Moved some code from ProtocolReflector.cs

2003-09-28  Lluis Sanchez Gual  <lluis@ximian.com>
	
	* ExtensionManager.cs: Read extension types from the configuration file.
	  Added methods for getting extension importers and reflectors.
	* ProtocolImporter.cs: Implemented.
	* ProtocolReflector.cs: Implemented.
	* ServiceDescriptionCollection.cs: Fixed some methods for finding wsdl
	  elements.
	* ServiceDescriptionImporter.cs: moved most of the code to ProtocolImporter.
	* ServiceDescriptionReflector.cs: moved most of the code to 
	  ProtocolReflector and SoapProtocolReflector.
	* SoapProtocolImporter.cs: Implemented.
	* SoapProtocolReflector.cs: Implemented.
	* SoapTransportImporter.cs: Implemented.
	* SoapHttpTransportImporter.cs: Implemented.
	* wsdl.genxs: Added.

2003-09-14  Lluis Sanchez Gual  <lluis@ximian.com>

	* DocumentableItem.cs MimeContentBinding.cs OperationMessage.cs 
	  OperationMessageCollection.cs PortCollection.cs PortType.cs 
	  PortTypeCollection.cs ServiceCollection.cs ServiceDescriptionCollection.cs 
	  SoapBodyBinding.cs SoapOperationBinding.cs: Several fixes by Erik LeBel
	* ServiceDescriptionImporter.cs:
	* ServiceDescriptionSerializerBase.cs: regenerated after the changes in
	  the service description changes.
	* ServiceDescriptionReflector.cs: Fixed generation of message parts in
	  bare format.

2003-09-11  Lluis Sanchez Gual  <lluis@ximian.com>

	* ServiceDescriptionImporter.cs, ServiceDescriptionReflector.cs: Added
	  first bits of encoded format support.

2003-09-04  Lluis Sanchez Gual  <lluis@ximian.com>

	* ServiceDescription.cs: minor fixes.
	* ServiceDescriptionImporter.cs: initial implementation.
	* ServiceDescriptionReflector.cs: Added support for bare parameter style.
	  Added support for encoded format.

2003-09-01  Lluis Sanchez Gual  <lluis@ximian.com>

	* ExtensionManager.cs: Added
	* ServiceDescriptionSerializerBase.cs. Added
	* ServiceDescription.cs: Reenabled suspport for serialization.
	* ServiceDescriptionReflector.cs: Import type and method documentation.

2003-08-29  Lluis Sanchez Gual  <lluis@ximian.com>

	* ServiceDescription.cs: Disabled suspport for serialization, until I found
	  an easy way of generate serialization readers and writers.

2003-08-28  Lluis Sanchez Gual  <lluis@ximian.com>

	* MessageBinding.cs: Added default value attribute for Name property.
	* OperationMessage.cs: Added default value attribute for Name property.
	* ServiceDescription.cs: Changed order of some properties, so they are
	  serialized in the right order.
	  Added GetNamespaceList(), which returns the namespaces to add when serializing
	  the document.
	  Implemented classes ServiceDescriptionSerializer and ServiceDescriptionWriter,
	  that extends the XmlSerializer by adding suport for XmlFormatExtensions.
	* ServiceDescriptionReflector.cs: Basic implementation (no support for 
	  extensions yet).
	* SoapBinding.cs: Fixed namespace name.
	* SoapBodyBinding.cs: Added null check in PartsString property.
	* SoapOperationBinding.cs: Fixed namespace name.
	
2003-07-22  Lluis Sanchez Gual  <lluis@ximian.com>

	* Binding.cs, Import.cs, Message.cs, MessageBinding.cs, MessagePart.cs,
	  Operation.cs, OperationBinding.cs, OperationMessage.cs, Port.cs, 
	  PortType.cs, Service.cs: Added XmlIgnore attributes to properties
	  referencing parent objects.
	* OperationMessageCollection.cs: Fixed wrong OnInsert method
	* ServiceDescription.cs: Removed unneeded methods in 
	  ServiceDescriptionSerializer.

2002-08-20  Tim Coleman <tim@timcoleman.com>
	* ServiceDescription.cs:
		Add ServiceDescription.ServiceDescriptionSerializer
		class.
	* ServiceDescriptionFormatExtensionCollection.cs:
		Remove reference to "parent".

2002-08-19  Tim Coleman <tim@timcoleman.com>
	* BindingCollection.cs:
		Use base constructor, remove SetParent call
	* FaultBindingCollection.cs:
	* ImportCollection.cs:
	* MessageCollection.cs:
	* MessagePartCollection.cs:
	* OperationBindingCollection.cs:
	* OperationCollection.cs:
	* OperationFaultCollection.cs:
	* PortCollection.cs:
	* PortTypeCollection.cs:
	* ServiceCollection.cs:
	* ServiceDescriptionFormatExtensionCollection.cs:
		Use base constructor
	* ServiceDescriptionCollection.cs:
		Use base constructor, Remove SetParent method
	* ServiceDescriptionBaseCollection.cs:
		Make parent object private as according to
		class status page.
	* OperationMessageCollection.cs:
		Use base constructor
		Remove excess break's to avoid compiler warning
		Remove TODO attribute (confirmed default retval)

2002-08-15  Tim Coleman <tim@timcoleman.com>
	* FaultBindingCollection.cs:
	* ImportCollection.cs:
	* MessageCollection.cs:
	* MessagePartCollection.cs:
	* OperationBindingCollection.cs:
	* OperationCollection.cs:
	* OperationFaultCollection.cs:
	* OperationMessageCollection.cs:
	* PortCollection.cs:
	* PortTypeCollection.cs:
	* ServiceCollection.cs:
	* ServiceDescriptionFormatExtensionCollection.cs:
		Use parent from ServiceDescriptionBaseCollection
	* ServiceDescriptionCollection.cs:
		Use parent from ServiceDescriptionBaseCollection
		Implement SetParent () method
	* ServiceDescriptionBaseCollection.cs:
		Add "parent" object.
		Add SetParent call to OnSet() and OnInsert ()

2002-08-12  Tim Coleman <tim@timcoleman.com>
	* Operation.cs:
		Fix ParameterOrderString in case ParameterOrder is
		null.
	* BindingCollection.cs:
		Remove Table handling on insert/delete/indexer
		because it is handled in base class.
	* ServiceDescriptionBaseCollection.cs:
		Only add an element to the hashtable if its GetKey ()
		method does not return null. 

2002-08-09  Tim Coleman <tim@timcoleman.com>
	* BindingCollection.cs: 
	* ServiceDescriptionCollection.cs: 
		Implement Set indexer
	* FaultBindingCollection.cs:
	* MessageCollection.cs:
	* MessagePartCollection.cs:
	* OperationFaultCollection.cs:
	* PortCollection.cs:
	* PortTypeCollection.cs:
	* ServiceCollection.cs:
		Implement Set indexer, code cleanup
	* Message.cs:
		Implement FindPartByName ()
	* OperationMessageCollection.cs:
		Alter OnSet () method
	* ServiceDescriptionBaseCollection.cs:
		Implement some methods.
	* ServiceDescriptionFormatExtensionCollection.cs:
		Implement Find (), FindAll (), OnValidate () methods
		

2002-08-06  Tim Coleman <tim@timcoleman.com>
	* ServiceDescription.cs:
		Add namespace definitions when serializing.
	* HttpBinding.cs:
		Change namespace definition (wsdl was spelt wsld)

2002-08-06  Tim Coleman <tim@timcoleman.com>
	* ServiceDescription.cs:
		Change the XmlElement name from "type" to "types" for
		the Types object

2002-08-06  Tim Coleman <tim@timcoleman.com>
	* ServerProtocol.cs:
		Add new class as implied by class statuc page.
		SoapServerProtocol is derived from this.
	* SoapServerProtocol.cs:
		Change base class to ServerProtocol.
	* SoapClientMethod.cs:
		This class should not be sealed.

2002-08-03  Tim Coleman <tim@timcoleman.com>
	* SoapProtocolReflector.cs:
		Removed SoapBinding property and made the class
		not sealed to agree with class reference page.

2002-08-03  Tim Coleman <tim@timcoleman.com>
	* ServiceDescriptionBaseCollection.cs:
		Removed some NotImplementedException()'s so that
		it runs.

2002-07-26  Tim Coleman <tim@timcoleman.com>
	* ServiceDescription.cs:
		Changed the creation of the XmlSerializer after 
		consulting the System.Xml.Serialization namespace
		and trying to serialize a document.  Now works somewhat!

2002-07-25  Tim Coleman <tim@timcoleman.com>
	* OperationMessageCollection.cs:
		Some implementation of this class after consulting a
		WSDL reference.  Now validates the inputs.

2002-07-24  Tim Coleman <tim@timcoleman.com>	
	* ProtocolImporter.cs:
	* ProtocolReflector.cs:
		Some implementation of these classes.  MonoTODO's begone!
	* SoapProtocolImporter.cs:
		Changed description to literal string "Soap"
	* SoapProtocolReflector.cs:
		Added a new class based on guesswork and conjecture.

2002-07-24  Tim Coleman <tim@timcoleman.com>
	* ServiceDescription.cs:
		Implement Read/Write methods for serialization/
		deserialization.

2002-07-23  Tim Coleman <tim@timcoleman.com>
	* ServiceDescription.cs:
		Add XmlIgnore attribute to ServiceDescriptions property
	* OperationFlow.cs:
	* ServiceDescriptionImportWarnings.cs:
		Explicitly set values in enumeration to match
		.NET.

2002-07-22 Tim Coleman <tim@timcoleman.com>	
	* Binding.cs:
	* BindingCollection.cs:
	* DocumentableItem.cs:
	* FaultBinding.cs:
	* FaultBindingCollection.cs:
	* HttpAddressBinding.cs:
	* HttpBinding.cs:
	* HttpOperationBinding.cs:
	* HttpUrlEncodedBinding.cs:
	* HttpUrlReplacementBinding.cs:
	* Import.cs:
	* ImportCollection.cs:
	* InputBinding.cs:
	* Message.cs:
	* MessageBinding.cs:
	* MessageCollection.cs:
	* MessagePart.cs:
	* MessagePartCollection.cs:
	* MimeContentBinding.cs:
	* MimeMultipartRelatedBinding.cs:
	* MimePart.cs:
	* MimePartCollection.cs:
	* MimeTextBinding.cs:
	* MimeTextMatch.cs:
	* MimeTextMatchCollection.cs:
	* MimeXmlBinding.cs:
	* Operation.cs:
	* OperationBinding.cs:
	* OperationBindingCollection.cs:
	* OperationCollection.cs:
	* OperationFaultCollection.cs:
	* OperationFlow.cs:
	* OperationMessage.cs:
	* OperationMessageCollection.cs:
	* OutputBinding.cs:
	* Port.cs:
	* PortCollection.cs:
	* PortType.cs:
	* PortTypeCollection.cs:
	* ProtocolImporter.cs:
	* Service.cs:
	* ServiceCollection.cs:
	* ServiceDescription.cs:
	* ServiceDescriptionBaseCollection.cs:
	* ServiceDescriptionCollection.cs:
	* ServiceDescriptionFormatExtension.cs:
	* ServiceDescriptionFormatExtensionCollection.cs:
	* ServiceDescriptionImportWarnings.cs:
	* SoapAddressBinding.cs:
	* SoapBinding.cs:
	* SoapBindingStyle.cs:
	* SoapBindingUse.cs:
	* SoapBodyBinding.cs:
	* SoapExtensionImporter.cs:
	* SoapExtensionReflector.cs:
	* SoapFaultBinding.cs:
	* SoapHeaderBinding.cs:
	* SoapHeaderFaultBinding.cs:
	* SoapOperationBinding.cs:
	* SoapTransportImporter.cs:
	* Types.cs:
		1. Add missing attributes as determined by reflection
		2. Fix protection levels where appropriate
		3. Add missing items where appropriate
		Basically, this was a change to remove all the X's from	
		the project status page for this namespace :)

2002-07-19 Tim Coleman  <tim@timcoleman.com>	
	* Binding.cs:
	* BindingCollection.cs:
	* ChangeLog:
	* DocumentableItem.cs:
	* FaultBinding.cs:
	* FaultBindingCollection.cs:
	* HttpAddressBinding.cs:
	* HttpBinding.cs:
	* HttpOperationBinding.cs:
	* HttpUrlEncodedBinding.cs:
	* HttpUrlReplacementBinding.cs:
	* Import.cs:
	* ImportCollection.cs:
	* InputBinding.cs:
	* Message.cs:
	* MessageBinding.cs:
	* MessageCollection.cs:
	* MessagePart.cs:
	* MessagePartCollection.cs:
	* MimeContentBinding.cs:
	* MimeMultipartRelatedBinding.cs:
	* MimePart.cs:
	* MimePartCollection.cs:
	* MimeTextBinding.cs:
	* MimeTextMatch.cs:
	* MimeTextMatchCollection.cs:
	* MimeXmlBinding.cs:
	* Operation.cs:
	* OperationBinding.cs:
	* OperationBindingCollection.cs:
	* OperationCollection.cs:
	* OperationFault.cs:
	* OperationFaultCollection.cs:
	* OperationFlow.cs:
	* OperationInput.cs:
	* OperationMessage.cs:
	* OperationMessageCollection.cs:
	* OperationOutput.cs:
	* OutputBinding.cs:
	* Port.cs:
	* PortCollection.cs:
	* PortType.cs:
	* PortTypeCollection.cs:
	* ProtocolImporter.cs:
	* ProtocolReflector.cs:
	* Service.cs:
	* ServiceCollection.cs:
	* ServiceDescription.cs:
	* ServiceDescriptionBaseCollection.cs:
	* ServiceDescriptionCollection.cs:
	* ServiceDescriptionFormatExtension.cs:
	* ServiceDescriptionFormatExtensionCollection.cs:
	* ServiceDescriptionImportStyle.cs:
	* ServiceDescriptionImportWarnings.cs:
	* ServiceDescriptionImporter.cs:
	* ServiceDescriptionReflector.cs:
	* SoapAddressBinding.cs:
	* SoapBinding.cs:
	* SoapBindingStyle.cs:
	* SoapBindingUse.cs:
	* SoapBodyBinding.cs:
	* SoapExtensionImporter.cs:
	* SoapExtensionReflector.cs:
	* SoapFaultBinding.cs:
	* SoapHeaderBinding.cs:
	* SoapHeaderFaultBinding.cs:
	* SoapOperationBinding.cs:
	* SoapProtocolImporter.cs:
	* SoapTransportImporter.cs:
	* Types.cs:
		Initial implementation
