<Type Name="TypeAffinity" FullName="Mono.Data.Sqlite.TypeAffinity">
  <TypeSignature Language="C#" Value="public enum TypeAffinity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TypeAffinity extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Data.Sqlite</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            SQLite has very limited types, and is inherently text-based.  The first 5 types below represent the sum of all types SQLite
            understands.  The DateTime extension to the spec is for internal use only.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Blob">
      <MemberSignature Language="C#" Value="Blob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity Blob = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Typically blob types are only seen when returned from a function
            </summary>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="DateTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity DateTime = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used internally by this provider
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Double">
      <MemberSignature Language="C#" Value="Double" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity Double = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All floating point numbers in SQLite default to double
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Int64">
      <MemberSignature Language="C#" Value="Int64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity Int64 = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All integers in SQLite default to Int64
            </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity None = int32(11)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used internally
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="Null" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity Null = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Null types can be returned from functions
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="Text" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity Text = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The default data type of SQLite is text
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Uninitialized">
      <MemberSignature Language="C#" Value="Uninitialized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Mono.Data.Sqlite.TypeAffinity Uninitialized = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Data.Sqlite.TypeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Not used
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
