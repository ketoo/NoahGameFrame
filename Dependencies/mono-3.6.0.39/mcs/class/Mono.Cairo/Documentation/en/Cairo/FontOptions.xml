<Type Name="FontOptions" FullName="Cairo.FontOptions">
  <TypeSignature Language="C#" Value="public class FontOptions : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Cairo</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>The FontOptions Class defines how a font should be rendered</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontOptions ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Allocates a new font options object with all options initialized to default values.</summary>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Antialias">
      <MemberSignature Language="C#" Value="public Cairo.Antialias Antialias { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.Antialias</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The antiliasing mode for the font options object.</summary>
        <value>the antialiasing mode</value>
        <remarks>This specifies the type of antialiasing to do when rendering text.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Cairo.FontOptions Copy ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.FontOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allocates a new font options object copying the option values from the current one.</summary>
        <returns>a newly allocated FontOptions</returns>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys a FontOptions object created with <see cref="C:Cairo.FontOptions()" /> or <see cref="M:Cairo.FontOptions.Copy()" /></summary>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dispose resources associated with the FontOptions.</summary>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">The other object</param>
        <summary>Compares this FontOptions object with another one for equality.</summary>
        <returns>True when equal, in all other cases false.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontOptions ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the FontOptions object</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute a hash for the FontOptions object</summary>
        <returns>the hash value for the FontOptions object.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pointer to the native FontOptions object.</summary>
        <value>a IntPtr</value>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HintMetrics">
      <MemberSignature Language="C#" Value="public Cairo.HintMetrics HintMetrics { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.HintMetrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The metrics hinting mode for the font options object.</summary>
        <value>the metrics hinting mode</value>
        <remarks>This controls whether metrics are quantized to integer values in device units. See the documentation for <see cref="T:Cairo.HintMetrics" /> for full details.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HintStyle">
      <MemberSignature Language="C#" Value="public Cairo.HintStyle HintStyle { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.HintStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The hint style for font outlines for the font options object.</summary>
        <value>the hint style</value>
        <remarks>This controls whether to fit font outlines to the pixel grid, and if so, whether to optimize for fidelity or contrast. See the documentation for <see cref="T:Cairo.HintStyle" /> for full details.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (Cairo.FontOptions other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Cairo.FontOptions" />
      </Parameters>
      <Docs>
        <param name="other">another FontOptions</param>
        <summary>Merges non-default options from <paramref name="other" /> into this FontOptions object, replacing existing values.</summary>
        <remarks>This operation can be thought of as somewhat similar to compositing other onto options with the operation of Cairo.Operation.Over.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (Cairo.FontOptions options, Cairo.FontOptions other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Cairo.FontOptions" />
        <Parameter Name="other" Type="Cairo.FontOptions" />
      </Parameters>
      <Docs>
        <param name="options">a FontOptions</param>
        <param name="other">another FontOptions</param>
        <summary>Tests two FontOptions for equality.</summary>
        <returns>Whether they are the same.</returns>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (Cairo.FontOptions options, Cairo.FontOptions other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Cairo.FontOptions" />
        <Parameter Name="other" Type="Cairo.FontOptions" />
      </Parameters>
      <Docs>
        <param name="options">a FontOptions</param>
        <param name="other">another FontOptions</param>
        <summary>Tests two FontOptions for inequality</summary>
        <returns>Whether they are not the same</returns>
        <remarks>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Cairo.Status Status { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.Status</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether an error has previously occurred for this font options object</summary>
        <value>Cairo.Status.Success or Cairo.Status.NoMemory</value>
        <remarks>If Cairo.Status.NoMemory occurs when creating the object, then all operations on the object do nothing.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SubpixelOrder">
      <MemberSignature Language="C#" Value="public Cairo.SubpixelOrder SubpixelOrder { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.SubpixelOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The subpixel order for the font options object.</summary>
        <value>the subpixel order</value>
        <remarks>The subpixel order specifies the order of color elements within each pixel on the display device when rendering with an antialiasing mode of Cairo.Antialias.Subpixel. See the documentation for <see cref="T:Cairo.SubpixelOrder" /> for full details.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>