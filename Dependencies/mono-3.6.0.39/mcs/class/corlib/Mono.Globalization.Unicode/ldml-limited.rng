<!--

The purpose of this "limited" grammar is just to check if there is unexpected
elements and attributes in our tailoring collector executables.

-->
<grammar xmlns='http://relaxng.org/ns/structure/1.0'>
  <start>
    <ref name='ldml' />
  </start>
  <define name='ldml'>
    <element name='ldml'>
      <ref name='anyAttributes' />
      <element name='identity'>
        <ref name='any' />
      </element>
      <ref name='collations' />
    </element>
  </define>
  <define name='anyAttributes'>
    <zeroOrMore>
      <attribute>
        <anyName/>
        <text/>
      </attribute>
    </zeroOrMore>
  </define>
  <define name='any'>
    <ref name='anyAttributes' />
    <zeroOrMore>
      <mixed>
        <element>
          <anyName/>
          <ref name='any' />
        </element>
      </mixed>
    </zeroOrMore>
  </define>
  <define name='collations'>
    <element name='collations'>
      <ref name='anyAttributes' />
      <choice>
        <element name='alias'>
          <attribute name='source'><text/></attribute>
          <attribute name='path'><text/></attribute>
        </element>
        <oneOrMore>
          <ref name='collation' />
        </oneOrMore>
      </choice>
    </element>
  </define>
  <define name='collation'>
    <element name='collation'>
      <attribute name='type'><text/></attribute>
      <optional>
        <element name='settings'>
          <optional>
            <!-- it is not handled in .NET -->
            <attribute name='strength'><text/></attribute>
            <!-- it is not handled in .NET -->
            <attribute name='hiraganaQuarternary'><text/></attribute>
          </optional>
          <optional>
            <attribute name='normalization'>
            <!-- it is however not handled in .NET -->
              <choice>
                <value>on</value>
                <value>off</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name='backwards'>
              <choice>
                <value>on</value>
                <value>off</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name='caseFirst'>
            <!-- it is however not handled in .NET -->
              <choice>
                <value>upper</value>
                <value>lower</value>
              </choice>
            </attribute>
          </optional>
        </element>
      </optional>
      <optional>
        <!-- FIXME: currently we don't handle it ... should we? -->
        <element name='suppress_contractions'><text/></element>
      </optional>
      <optional>
        <!-- we already optimize Hangul Syllables -->
        <element name='optimize'><text/></element>
      </optional>
      <optional>
      <element name='rules'>
        <oneOrMore>
          <element name='reset'>
	    <optional>
	      <attribute name='before'>
	        <choice>
	          <value>primary</value>
	          <value>secondary</value>
		</choice>
	      </attribute>
	    </optional>
	    <choice>
	      <element name='cp'>
	        <attribute name='hex'><text/></attribute>
	        <empty/>
	      </element>
	      <text/>
	      <!-- FIXME: we don't support them for now -->
	      <element name='last_non_ignorable'><empty/></element>
	      <element name='last_secondary_ignorable'><empty/></element>
	    </choice>
	  </element>
          <choice>
            <oneOrMore>
              <ref name='x' />
            </oneOrMore>
            <oneOrMore>
              <ref name='simple-rule-content' />
            </oneOrMore>
          </choice>
        </oneOrMore>
      </element>
      </optional>
    </element>
  </define>
  <define name='simple-rule-content'>
    <choice>
      <element name='p'><text/></element>
      <element name='pc'><text/></element>
      <element name='s'><text/></element>
      <element name='sc'><text/></element>
      <element name='t'><text/></element>
      <element name='tc'><text/></element>
      <element name='q'><text/></element>
      <element name='qc'><text/></element>
      <element name='i'><text/></element>
      <element name='ic'><text/></element>
    </choice>
  </define>
  <define name='x'>
    <element name='x'>
      <ref name='simple-rule-content' />
      <element name='extend'><text/></element>
    </element>
  </define>
</grammar>

