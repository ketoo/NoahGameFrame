2010-07-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNodeReaderImpl.cs : in GetNamespacesInScope(), avoid NREs under
	  "no current node" situation. Also, look for attributes on iterated
	  nodes, not current ones.

2010-07-06  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlInputStream.cs : it had been failing to retrieve correct
	  encoding due to insufficient buffer reading. Fixed bug #615499.

2010-06-30  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDefaultWriter.cs : add state management support. 
	* XmlWriter.cs : use above feature for "null Settings in source
	  writer" case. This brings some minor .NET compatibility and
	  should fix bug #607697.

2010-06-30  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDefaultWriter.cs : new source (which I once wrote for relaxng
	  and corcompare).
	* XmlWriter.cs : in some cases XmlWriter.Create() returns a new
	  wrapping writer instance.
	  If there was no Settings specified, return null.

2010-06-16  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : do not try to parse xml:base="".
	  Fixed bug #608391.

2010-06-14  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs : do not create XmlSchemaInfo instance every time
	  it validates a node.

2010-05-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNode.cs : use as-operator (isinst) to optimize certain use case.
	  Patch by Tom Hindle.

2010-04-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlInputStream.cs : minimize initial buffer size so that it does
	  not mostly block some readers. Fixed bug #591291.

2010-04-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs : it seems .net does allow Load() with such an xml
	  reader positioned in the middle of the document. Fixed bug #598953.

2010-04-21  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs, DTDReader.cs : 0xFFFF was treated as if it were
	  0x10000. (It is invalid and should be rejected by decent
	  XmlReaders usage though.) Fixed bug #594628.

2010-03-29  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlQualifiedName.cs : do not reject names in no namespace.

2010-03-26  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs, XmlQualifiedName.cs : ReadElementContentAs() when
	  used for qname, treats non-prefixed name as in default namespace.

2010-03-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : fix cosmetic 2.0 compatibility issue in 
	  WriteStartAttribute() which allows "" for prefixed xmlns and brings
	  incompatibility with XmlTextWriter class.

2010-03-16  Jb Evain  <jbevain@novell.com>

	* XmlNodeReader2.cs
	* DTDValidatingReader2.cs
	* XmlReader.cs
	* XmlTextReader.cs
	* XmlWriter.cs
	* XmlResolver.cs
	* XmlNodeReaderImpl.cs
	* XmlInputStream.cs
	* XmlReaderSettings.cs
	* XmlWriterSettings.cs:
		Use MOONLIGHT symbol to disambiguate MonoTouch and Moonlight code.

2010-02-20  Geoff Norton  <gnorton@novell.com>

	* XmlInputStream.cs: Disable this codepath on monotouch.  Fixes
	#562155

2010-02-12  Miguel de Icaza  <miguel@novell.com>

	* XmlWriterSettings.cs: Expose NamespaceHandling in NET 4.0 

2010-01-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReaderBinarySupport.cs : eliminate possible extra buffer
	  storing of zeros. Fixed bug #543332.

2010-01-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : convert TimeSpan.MinValue to correct string.
	  Patch by Tiaan Geldenhuys.

2010-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs : fix type check for optimal node creation.
	  Fixed bug #571336, #571226 and #572738.

2010-01-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : Do not ignore ticks which are less than a
	  millisecond. Remove trailing zeros for milliseconds and ticks.

2010-01-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : trim spaces when parsing TimeSpan.

2010-01-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : shorten format string patterns.

2010-01-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : DateTimeOffset parse is sloppy.

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : handle Infinity and -Infinity here due to the
	  commented reason.

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : ToSingle(string) should do the same as ToDouble().

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : ToDouble(string) should handle NaN, INF and -INF
	  with whitespace allowed.

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : ToDouble(string) and ToIntXX(string) allows
	  whitespaces.

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : ToString(DateTimeOffset) does not emit extra
	  fraction numbers.

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : fix some cosmetic compatibility bugs:
	  ArgumentException -> FormatException.

2010-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : handle a corner case for empty string handling 
	  difference between XmlTextWriter and XmlWriter.Create().

2009-11-27  Atsushi Enomoto  <atsushi@ximian.com>

	* NamespaceHandling.cs, XmlWriterSettings.cs, XmlTextWriter2.cs:
	  implement NamespaceHandling support for Moonlight.

2009-11-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : fix DateTimeOffset roundtrip by giving format
	  strings in refined order. Patch by Santa Marta, at:
	  http://irc.gimite.net/channel/mono-jp/archive/20091105
	  ( http://smdn.invisiblefulmoon.net/misc/forum/programming/#n10 )

2009-11-13  Andreia Gaita  <avidigal@novell.com>

	* XmlNamespaceManager.cs: XmlReader.Read calls LookupNamespace via
	the internal sig, which skips any overrides that might exist on
	subclasses, so redirect all calls to the public call to make sure
	all overrides are called as well.
	Make AddNamespace, HasNamespace and RemoveNamespace private.

2009-11-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs, XmlElement.cs, XmlAttribute.cs,
	  XmlAttributeCollection.cs :
	  when CreateElement() and/or CreateAttribute() are overriden,
	  use overriden method. Otherwise, use internal optimal ones.
	  Fixed bug #549839.

2009-11-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNodeReaderImpl.cs : when the reader is at attribute value,
	  MoveToNextAttribute() incorrectly moved to the first attribute.
	  Fixed bug #550379.

2009-10-23  Andreia Gaita  <avidigal@novell.com>

	* XmlConvert.cs: make ToUri static, fixes #548918 (moon)

2009-10-05  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : fix wrong ToDateTimeOffset loop, based on the
	  patch by David Mitchell.

2009-09-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttributeCollection.cs : removed duplicate ID attribute check
	  here as this behavior not specifically defined by W3C DOM Level 2
	  specification. Fixed bug #508296.

2009-08-21  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : there still was use of bogus
	  XmlParserContext.NameTable.

2009-07-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : Adding prefix "xml" seems to be allowed
	  as long as the URI is correct. Fixed bug #514015.

2009-07-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlInputStream.cs : cosmetic exception type change. Patch by
	  Hib Eris. Fixed bug #523971.

2009-05-27  Sebastien Pouliot  <sebastien@ximian.com>

	* XmlReaderSettings.cs: Set prohibitDtd when changing the value 
	of DtdProcessing. Will fix a few Moonlight DRT tests

2009-05-19  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : no reason not to report invalid input string for
	  ToGuid().

2009-04-28  Sebastien Pouliot  <sebastien@ximian.com>  

	* XmlTextReader.cs (InitializeContext): Under NET_2_1 do not give
	a second change	using Path.GetFullPath. (GetStreamFromUrl) Add
	extra validations that would be missed in NET_2_1

2009-04-28  Sebastien Pouliot  <sebastien@ximian.com>

	* XmlReaderSettings.cs: Add MaxCharactersInDocument property for 
	NET_2_1 profile
	* XmlUrlResolver.cs: Cleanup #ifdef NET_2_1 inside this file 
	since this is not used anymore in Moonlight

2009-04-28  Sebastien Pouliot  <sebastien@ximian.com> 

	* XmlXapResolver.cs: Remove dependency on XmlUrlResolver. Small 
	fixes wrt new unit tests (inside moon-unit).

2009-04-28  Sebastien Pouliot  <sebastien@ximian.com>

	* XmlResolver.cs: Small fixes wrt new unit tests. Add SupportsType
	method for NET_2_1 profile.

2009-04-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlQualifiedName.cs : added Parse() overload that is used for
	  xsd validation.

2009-04-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttributeCollection.cs : when the node to be inserted has owner
	  element _but_ is identical to that of this collection, do not
	  reject it to raise an error. Fixed bug #496022.

2009-03-25  Geoff Norton  <gnorton@novell.com>

	* XmlTextReader.cs: Create the uri as relativeorabsolute.

2009-03-18  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : handle DateTimeOffset in typed reader methods.

2009-03-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : some weird TextWriter has null Encoding.
	  Fixed bug #372525.

2009-03-16  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlParserContext.cs : .NET has weird nametable initialization.
	  Fixed bug #484519.

2009-03-16  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : (ReadToFollowing) check LocalName, not Name.
	  Fixed bug #478506.

2009-03-16  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDRreader.cs : read up all DTD stream so that we don't have to
	  see bugs like #469317 many times.

2009-03-16  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReaderBinarySupport.cs : ReadContentsAsBase64() could skip
	  EndElement at the next XmlReader.Read(). Fixed bug #480066.

2009-03-16  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : only bogus v1 XmlTextWriter ignores null
	  namespace for conflict check. Fixed bug #479725.

2009-03-13  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : added ToUri() (extraneous in 2.0; used only from
	  2.1 S.X.Serialization.dll in MS SDK).

2009-03-02  Chris Toshok  <toshok@ximian.com>

	* XmlReader.cs, XmlTextReader.cs, XmlTextReader2.cs,
	EntityResolvingXmlReader.cs: 2.1 has HasValue.


2009-02-27  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : do not try to read at non-readable state in
	  MoveToContent().

2009-02-23  Alan McGovern  <amcgovern@novell.com>

	* XmlTextReader.cs: Under the SL2 profile, the default resolver
	is a XmlXapResolver.

2009-02-23  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : ReadContentAsXxx() should not advance XmlReader
	  when it is on attribute *value* text.

2009-02-10  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : similar fix in WriteStartElement() to
	  previous change. Fixed bug #474091.

2009-02-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlElementTest.cs: SetAttribute(name,value) should identify value
	  change for existing node, from new node insertion.
	  Fixed bug #464394.

2009-02-06  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : in WriteStartAttribute(), fill namespace in
	  case it is null and the prefix has matching ns. Fixed bug #472634.

2009-01-30  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDValidatingReader2.cs, EntityResolvingXmlReader.cs : simplify
	  parsercontext provision.
	* XmlValidatingReader.cs : expand parser context provision to
	  non-dtdvalidating readers.

2009-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlXapResolver.cs : fix assembly qualified names,
	  and give detailed errors.
	* XmlResolver.cs : in 2.1 do not resolve relative Uri
	  to absolute.

2009-01-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlXapResolver.cs : new in 2.1.
	* XmlReaderSettings.cs : use above.

2009-01-20  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : in some corner cases an attribute
	  may have null OwnerElement. Fixed bug #458245.

2009-01-20  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReaderBinarySupport.cs : do not hang in the middle of reading
	  byte chunk at some node types. Fixed bug #464229.

2009-01-14  Sebastien Pouliot  <sebastien@ximian.com>

	* NamespaceHandling.cs: New. Enum for Silverlight 2. Microsoft's 
	System.Xml.Linq.dll (often bundled in XAP files) needs it (or we 
	throw a TypeLoadException).
	* XmlWriterSettings.cs: Add SL2 specific NamespaceHandling property

2009-01-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : ReadContentAsString() does not reject non-elements.
	  ReadElementContentAsString() rejects non-content nodes.

2008-12-19  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : namespace lookup failed for non-atomic
	  string in 1.1 profile. Fixed 1.0 part of #379139.

2008-12-18  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDValidatingReader.cs : remove unused file.

2008-11-04  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : simply call ClearValueBuffer() on each Read().

2008-10-02  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : added some overriden methods (to be
	  implemented).

2008-09-24  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs : it returns non-null Schemas by default (and
	  returns non-empty set after being set null).

2008-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : detailed error location in ReadSubtree().

2008-09-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : ReadSubtree() is valid only on an element.

2008-09-10  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs, XmlDocumentNavigator.cs :
	  reduce navigator fields.

2008-08-21  Stephane Delcroix  <sdelcroix@novell.com>

	* EnityResolvingXmlReader.cs:
	* XmlReader.cs:
	* XmlTextReader.cs:
	* XmlTextReader2.cs: re-enable ResolveEntity for 2.1

2008-08-21  Stephane Delcroix  <sdelcroix@novell.com>

	* XmlReaderSettings.cs: adding DtdProcessing and
	MaxCharactersFromEntities properties for 2.1

2008-08-21  Stephane Delcroix  <sdelcroix@novell.com>

	* DtdProcessing: adding this enum on the 2.1 build

2008-08-05  Jb Evain  <jbevain@novell.com>

	* XmlConvert.cs (ToChar): add a specific SL2 version.

2008-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : check null arg.
	* XmlTextReader.cs : fixed bug #412657; now we populate nametable
	  and namespace manager in case they are null in parser context, and
	  use them instead of the members in the parser context.

2008-06-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : fixed bug #397934. Utc mode accepts more formats.

2008-06-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : no need for TARGET_JVM.

2008-06-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : when Normalized is true, '<' after \r which
	  comes after text node was incorrectly consumed as a text content.
	  Fixed bug #398374.

2008-06-05  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : now we can use roundtrip format for float/double.
	  Fixed bug #320424.

2008-06-04  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader2.cs : added FIXME comment which won't fix, that
	  I have noticed during fixing bug #378239.

2008-05-22  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : some Create() overloads with baseUri argument did
	  not set baseUri correctly. Fixed bug #392385.

2008-05-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : force CloseInput to every XmlReader that is created
	  from url (I mean, every internal XmlReader instance).

2008-04-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttributeCollection.cs : check attribute identity only if the
	  source node is in the document tree. Fixed bug #380720.

2008-02-19  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlParserContext.cs : .net does not populate XmlNamespaceManager
	  automatically.
	* XmlDocument.cs : so, always create one here.

2008-01-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : MoveToNextSibling() should check EOF (as Skip() does
	  not). Fixed bug #347768.

2008-01-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlParserContext.cs : do not pass invalid URI to XmlTextReader#ctor
	  even as a dummy. Fixed bug #353654.

2007-12-17  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : added NET_3_5 members.

2007-12-06  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlUrlResolver.cs : in net_2_0, use Uri.IsAbsoluteUri to filter
	  relative URIs out.

2007-11-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : ToDateTime(XmlDateTimeSerializationMode) should
	  allow more strings than existing one. Fixed bug #339004.

2007-10-30  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : ToDateTime(string,string) should use ParseExact(),
	  not Parse(). Use 'K' for roundtrip format.

2007-10-10  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : making <del>silly</del>funky MS compatibility
	  change in WriteStartAttribute() to call WriteEndAttribute() if an
	  attribute is open.

2007-10-10  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : I could make previous change only in 2.0 mode.

2007-10-10  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : When it is at Error state, do not try to close
	  attributes and elements at Close(). They will result in further
	  error and rather hide the actual issue when disposed.

2007-09-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : it is now documented that WriteNode(XPathNavigator)
	  ignores attributes and namespace decls, so do that.
	* XQueryConvert.cs : removed extra stuff that are not in use.

2007-09-27  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : implemented WriteValue(object) based on
	  MSDN "Writing Typed Data" with some fix.
	  http://msdn2.microsoft.com/en-us/library/bft97s8e(VS.80).aspx
	* XmlTextWriter.cs : state check is extraneous. It caused unexpected
	  rejection of empty namespace URI.

2007-08-13  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs : fix extraneous indentation which is put after
	  omitted xmldecl.

2007-08-09  Jb Evain  <jbevain@novell.com>

	* XmlTextReader.cs: Avoid using 2.0 only feature in 2.1.

2007-08-09  Jb Evain  <jbevain@novell.com>

	* XmlConvert.cs: use 2.1 available overloads of Parse.

2007-08-09  Jb Evain  <jbevain@novell.com>

	* XmlInputStream.cs: there's no ASCII encoding in 2.1.

2007-08-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs XmlNodeReader2.cs XmlTextReader.cs XmlTextReader2.cs
	  XmlNodeReaderImpl.cs EntityResolvingXmlReader.cs :
	  The previous attempt was wrong. Those internal-virtualized ones
	  could be used in System.Xml.Core classes and outside the assembly
	  any derived XmlReaders would have thrown throw Exception.
	  Now I marked them as nonexistent-in-2.1 or privatized.
	* XmlWriter.cs : actually only this class is affected (if there
	  were DOM or XSD they would have been affected as well).

2007-08-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : HasValue, ReadAttributeValue() and ResolveEntity()
	  do not exist in 2.1 profile. Hiding abstract stuff seems to cause
	  some issues at run time, so they are ifdef-ed out from 2.1.
	* XmlNodeReader2.cs DTDValidatingReader2.cs XmlTextReader.cs
	  XmlTextReader2.cs XmlNodeReaderImpl.cs DTDValidatingReader.cs
	  EntityResolvingXmlReader.cs : hence the change above.

2007-08-04  Jb Evain  <jbevain@novell.com>

	* XmlUrlResolver.cs: remove code duplication in 2.1.

2007-08-04  Jb Evain  <jbevain@novell.com>

	* XmlTextReader.cs, XmlConvert.cs, XmlReaderBinarySupport.cs:
	Use the available constructor for the 2.1 profile.

2007-08-03  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDObjectModel.cs : in 2.0 and especially 2.1 profiles, use
	  our own DictionaryBase-like generic type. It is to reduce
	  dependency on DictionaryBase which does not exist in 2.1 mscorlib.
	  (included in 2.0 as well so that we do not skip NUnit tests so far)

2007-08-03  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlResolver.cs, XmlUrlResolver.cs, XmlSecureResolver.cs :
	  remove ICredential in NET_2_1 (they have to be explicitly removed
	  outside tuner work as ICredentials does not exist in 2.1 profile).
	  We cannot use WebRequest in 2.1 as well, so remove dependency on
	  it in GetEntity() (and added MonoTODO for non-file URLs).

2007-07-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : in WriteNode(XPathNavigator,bool), default namespace
	  is broken. Fixed bug #82051.

2007-07-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : looks like I introduced extra Settings check at
	  r69383. Fixed bug #82062.

2007-07-04  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDValidatingReader2.cs :
	  we can remove NET_2_1 from this unused code in SL.

2007-07-04  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDAutomata.cs DTDObjectModel.cs DTDReader.cs
	  DTDValidatingReader2.cs XmlException.cs XmlReader.cs
	  XmlReaderSettings.cs XmlWriter.cs :
	  Make System.Xml.Core.dll build easier, using NET_2_1.

	  DTD support is simply cut at this stage (as it largely depends on
	  sys.xml.schema stuff).

2007-06-30  Gert Driesen  <drieseng@users.sourceforge.net>

	* XmlTextReader.cs: Expose ProhibitDtd on 1.0 profile too.

2007-06-13  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNode.cs : InnerText is settable on XmlDocumentFragment (silly,
	  but since XmlDocumentFragment does not override this property
	  it must be handled here).

2007-06-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : ReadStartElement() has bogus error message.

2007-05-31  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter2.cs :
	  NewLineOnAttributes indentation fix, for bug #81770.

2007-05-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XQueryConvert.cs : removed unused methods. They will prevent
	  System.Xml.Core.dll implementation.

2007-05-15  Konstantin Triger <kostat@mainsoft.com>

	* XmlWriter.cs, XmlTextWriter2.cs: ensure the file
		is closed in XmlWriter.Create(filename).

2007-04-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : MinValue and MaxValue, same for ToDateTime().

2007-04-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : MinValue and MaxValue are unchanged by the
	  serialization mode (unlike DateTime.ToString()).

2007-04-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : in 2.0, use F instead of f in dateTime formatting.

2007-04-25  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : fixed wrong depth comparison in ReadToNextSibling().
	  Fixed bug #81451, by Eric Mercier.

2007-04-03  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : character ']' inside DTD comment caused parser
	  error. Fixed bug #81294.

2007-03-05  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : when Create() returns customized XmlTextReader, set
	  EntityHandling.ExpandEntities. Fixed bug #81000.

2007-02-20  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs, XmlTextReader2.cs : Reset() should work now.
	  Closing bug #80849.

2007-02-20  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDValidatingReader2.cs, XmlTextReader.cs, XmlNodeReaderImpl.cs:
	  Read() silently returns false when it is closed. Fixed bug #80848.

2007-02-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : ReadElementContentAsString() and all relevant methods
	  didn't consume empty element correctly.

2006-12-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : (InsertBefore) when newChild == refChild, do nothing
	  except for node type check. Fixed bug #80331.

2006-12-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Fixed ReadChars() to consume child elements,
	  including such cases that it breaks tags in the middle of multiple
	  ReadChars() calls. Fixed bug #80308.

2006-12-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : ReadChars() does not have to store characters,
	  so avoid extra storing. Patch by Csaba Halasz, fixed bug #80306.

2006-12-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : InnerText was returning comment text when there was
	  only a Comment node. Fixed bug #80233.

2006-12-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : Create() with string url was not returning validating
	  XmlReader.

2006-12-12  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader2.cs : when an attribute declaration is missing
	  in the corresponding attlist declaration, it caused NRE.
	  Fixed bug #80231.

2006-12-11  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : call overriden CreateAttribute() when loading from
	  XmlReader.

2006-12-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : new 2.0 MoveToAttribute(int) failed to move to the
	  final attribute in an element.

2006-12-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : GetPrefixOfNamespace() was not correctly searching
	  ancestors' namespaces.

2006-11-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : fixed some relationship between
	  ConformanceLevel, OmitXmlDeclaration and WriteStartDocument().
	  See new tests more details.
	* XmlWriter.cs : it could reuse XmlTextWriter.ctor(TextWriter,
	  XmlWriterSettings). It also resulted in dropping several internal
	  members in XmlTextWriter.

2006-11-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs : in copy constructor, copy (dispatch)
	  validation event as well. Add OnValidationError() to be invoked
	  by other internal stuff to raise the validation event.

2006-11-13  Michael Meeks  <michael.meeks@novell.com>

	* XmlReader.cs, XmlTextReader.cs, XmlTextReader2.cs:
	pass the XmlResolver through to the GetStream impl.

2006-10-30  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader2.cs : if DTD does not exist, do not try to resolve
	  entity from null DTD (caused NRE). Fixed bug #79620.

2006-10-27  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : some parameter entity expansions were not done.
	  Fixed bug #79683.

2006-09-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : null arg check.

2006-09-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDeclaration.cs :
	  Removed bogus return statement in Value. Fixed bug #79496.

2006-09-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNameEntryCache.cs : It should expand temporary buffer even at
	  initial state. Fixed bug #79468.

2006-09-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs : for non-atomized names, alter null prefix with "".
	  Fixed bug #79420.

2006-09-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadContentAsString() and its family should allow 
	  attribute node. Fixed bug #79268.

2006-09-01  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : expect atomized names only when it is
	  appropriate. Fixed bug #79047.

2006-08-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : use XmlValidatingReader to load TextReader/Stream
	  so that it could fill default and fixed attributes. This ends up
	  to fix bug #79163 (it fills fixed "xmlns" attribute and thus
	  the node's namespace URI becomes that of glade-2.0).

2006-08-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlEntity.cs, XmlEntityReference.cs, XmlNode.cs :
	  create entity content only when its children is being accessed.
	  It results differently when there is no actual reference in the
	  document - an invalid entity value (when it is used to create
	  child nodes) is ignored unless a code tries to access the Value
	  of an XmlEntity. Fixed bug #79091
	* DTDReader.cs : the fix above uncovered another bug (ibm66n03.xml).
	  Check illegal reference name in literal entity value.

2006-08-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs, XmlTextReader2.cs, DTDReader.cs :
	  (ResolveExternalEntityReplacementText) need to skip text
	  declaration in external entities. To make it possible internalize
	  SkipTextDeclaration() in XmlTextReader(2). Fixed bug #79090.

2006-08-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader2.cs : Check recursive entity reference.
	  Fixed bug #79085. It makes W3C standalone tests on NET_2_0 working.

2006-08-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : When a whitespace node comes after a text 
	  declaration in XML external entity (i.e. .ctor() with
	  XmlNodeType.Element), it contained extra value character ('<').

2006-08-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : more indentation fixes. Now I believe it is
	  almost MS compat, but it won't help poor Mike.

2006-08-07  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : WriteBinHex() is allowed at Attribute state.
	  Fixed bug #79019.

2006-07-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : fixed some indentation bugs: comments and PIs
	  should not cause indentation override like text, cdata and
	  whitespaces do.
	  Fixed some error messages on node kind.
	* XmlTextWriter.cs, XmlTextWriterOpenElement.cs : removed old code.
	  (I don't want to remove old great code but it confused mike today.)

2006-07-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs :
	  For DTD validator, call to SetSchemas() makes no sense.
	* XmlValidatingReader.cs : now it internally holds old
	  XmlSchemaCollection instead of new XmlSchemaSet, to make
	  XmlSchemaSet.SchemaCollection unneccessary.
	  Removed SetSchemas() since it is now extraneous because of the
	  XmlReaderChange above.

2006-07-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : TimeSpan conversion for TimeSpan.MinValue was
	  failing.

2006-07-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : In Create(), support validation flags for DTD.
	* DTDValidatingReader2.cs : when NET_2_0 and ProcessIdentityConstraints
	  is false, skip ID validation.

2006-06-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : when Create() received string url, it should set 
	  XmlTextReader2.CloseInput always true. Fixed bug #78706.

2006-06-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : if an attribute being written has the same
	  non-empty namespace URI as current default namespace, its prefix
	  should be written. Fixed bug #78598.

2006-05-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : (WriteTo) when the namespace URI is empty,
	  always use empty string for prefix.

2006-04-27  Geoff Norton  <gnorton@customerdna.com>

	* XmlDocument.cs: Move back to the element after
	reading an attribute.  This mimics Microsofts behaviour.

2006-04-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : fix for bug #78148. set_Formatting() is not
	  rejected after writing some content. I totally disagree on that
	  it should be allowed, but here is the fix.

2006-04-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadElementContentAsObject() incorrectly rejected
	  the argument type System.Object.

2006-04-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : WriteNode(XPathNavigator) : directly write element
	  and root nodes instead of dispatching to ReadSubtree().

2006-04-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadElementContentAsXXX() did not consume empty
	  element correctly.

2006-04-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : Create(StringBuilder,XmlWriterSettings) was missing
	  settings argument to pass another .ctor().
	* XmlWriterSettings.cs : set_NewLineChars() should reject null.

2006-04-03	Boris Kirzner <borisk@mainsoft.com>
	* XmlException.cs: fix .net soap serialization compatibility.

2006-03-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNameEntry.cs XmlNameEntryCache.cs :
	  Added atomization support for prefixed names.
	  Inspired by Joshua Tauberer's patch.
	* XmlElement.cs XmlAttribute.cs : use above.

2006-03-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : in XmlReader.Create() ValidationType Auto and XDR
	  are simply ignored (it was found on running NvdlValidatingReader
	  under MS.NET 2.0).

2006-03-23  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : avoid NullReferenceException. Input
	  XmlReader might not be IHasXmlParserContext.

2006-03-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs: ReadContentAsXXX() just stops at start element,
	  without rejecting it as an error.
	  ReadElementContentAsXXX() rejects child element nodes.

2006-02-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs : (WriteTo) use IsEmpty to determine which to use:
	  WriteEndElement() and WriteFullEndElement(). Fixed sys.security
	  regression.

2006-02-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs :
	  WriteRaw() has stupid second arg. Fixed bug #77623.
	  WriteString() should raise an error when it is called immediately
	  after WriteStartDocument().

2006-02-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : WriteChars() should allow Attribute state.

2006-02-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlChar.cs : (IndexOfInvalidChar) fixed surrogate pairs handling.
	  They were always regarded as invalid.
	* XmlTextWriter2.cs : seems like MS XmlTextWriter outputs invalid
	  characters as character references. It totally does not make sense
	  but corcompare depended on that behavior.

	  This "compatibility" fix causes 10% or more performance loss!!!

2006-02-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : (WriteStartAtribute) more == removal.
	* XmlNode.cs : (get_InnerText) reduce extra StringBuilder creation.

2006-02-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : (WriteStartAttribute) reduced string == string.

2006-02-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : (ReadNodeCore) not public.

2006-02-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter2.cs : (CloseStartElement)
	  Avoid ArrayList.Clear() and culture-sensitive Contains().

2006-02-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamespaceManager.cs : added internal LookupPrefixExclusive()
	  which discards "overriden" namespaces.
	* XmlTextWriter2.cs : fresh implementation.
	  - The source structure is simplified and cleaner.
	  - When outputting escaped string, output directly to TextWriter.
	  - roughly 20% performance improvement.

	  (Also fixed previous perf. evaluation excess in ChangeLog.)

2006-02-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs : (WriteTo) make use of HasAttributes. Remove extra
	  check. 5% speed improvement.

2006-02-20  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader2.cs : added Source XmlReader property for
	  XsdValidatingReader use (see XsdValidatingReader change as well).

2006-02-20  Atsushi Enomoto <atsushi@ximian.com>

	* EntityResolvingXmlReader.cs, XmlNodeReader2.cs, XmlTextReader2.cs :
	  in get_NodeType() entity reader existence check is faster.
	* DTDValidatingReader2.cs : IsDefault could be avoided.

2006-02-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReaderImpl.cs : optimized Depth.

2006-02-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : reducing layered ReadState invocation
	  results in 10% speed up.

2006-02-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReaderImpl.cs : Reimplemented Read(). Points are:
	  - reduced call to NextSibling which is very unlikely to be inlined
	  - reorganized conditioning to avoid extra check
	  - added description on each returning branch.
	  - And then, removed unused code.
	  It is 1.5x faster than before.

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs : NextSibling could be effectively computed using
	  LastLinkedChild, beyond previous XmlLinkedNode optimization.

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlLinkedNode.cs : In NextSibling, use LastChild directly.
	  It improves NextSibling performance in bulky document.

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReaderImpl.cs : do not compute ownerLinkedNode, just store
	  it in Read(). Simply use state field in EOF. They result in 20%
	  perf. boost. Expanding EOF also improved performance by 2-3%
	  (mono --optimize=inline might work in the later stage).

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader2.cs : more refactoring. Split ReadContent()
	  into some methods. Reduced some extra MoveToElement().

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader2.cs : more refactoring. Removed and simplified
	  some error check. String += would be enough for entity-reference-
	  mixed attributes which rarely happen, so simplify the code.
	  Added comments on how the fields are used.

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader2.cs : attribute node simplification. It now
	  stores attribute node slots, including default attributes for
	  further refactoring.

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader2.cs, EntityResolvingXmlReader.cs :
	  new files for refactoring DTD validating reader. As the first stage,
	  it splits entity handling process from DTD validation step.

	  (DTDValidatingReader.cs will be removed at some stage).

2006-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : entity resolution method will be used in
	  the next DTD validating reader in 1.x.

2006-02-16  Atsushi Enomoto <atsushi@ximian.com>

	* IHasXmlChildNode.cs :
	  New internal interface to hold LastLinkedChild.
	* XmlNodeListChildren.cs XmlEntity.cs XmlElement.cs XmlAttribute.cs
	  XmlLinkedNode.cs XmlEntityReference.cs XmlNode.cs
	  XmlDocumentFragment.cs XmlDocument.cs : use it. It minimizes memory
	  consumption in XmlText, XmlWhitespace, XmlComment etc.

2006-02-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlChar.cs : added IndexOfNonWhitespace() and IndexOfInvalid() (not
	  in use yet).
	* NewLineHandling.cs : prepared to be used internally in 1.x.

2006-02-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs XmlTextReader.cs : in ReadNode(), we can avoid
	  extraneous whitespace node creation for XmlTextReader by setting
	  WhitespaceHandling.Significant when PreserveWhitespace is false.

2006-02-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : atomize whitespace values. It effectively saves
	  memory consumption when an input XML is indented.

2006-02-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : When "Significant" is assigned to
	  WhitespaceHandling, it should ignore non-significant whitespaces.

2006-02-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : (WriteElementString and WriteAttributeString)
	  Skip empty string output.

2006-02-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : WriteRaw("") is not simply ignored but process
	  state check and closes open tag.

2006-02-11  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs :
	  Avoid extra AppendValueChar() in ReadWhitespace().

2006-02-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : ReadTextReader() is now assured to have current
	  node content, except for Text, CDATA and Comment. ReadName() does
	  not use nameBuffer and reuse peekChars.

2006-02-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : eliminated currentTagBuffer. XmlDeclaration is
	  now once read as PI and then re-parsed from Value. DTD internal
	  subset is now parsed as usual "value".

2006-02-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Expect() could be written inline and it could
	  provide better information. ReadEndTag() could use Expect() instead
	  of costy ReadName().

2006-02-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : on ReadEndTag() we can avoid NameTable.Add().
	  Store name, local name and prefix in the stack instead of just name
	  and reuse them for EndElement.

2006-02-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : make use of HasAttributes (avoid possible
	  XmlAttributeCollection creation).

2006-02-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : no need to call Clear() for each attribute value.

2006-02-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : reverted most of the previous changes. It somehow
	  broke System.Data tests.

2006-01-30  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs, XmlAttribute.cs, XmlElement.cs : Avoid unnecessary
	  name checks in CreateElement() and CreateAttribute().
	  get_DocumentType() could be stopped when the iterated child node
	  is the document element.
	* XmlNode.cs : removed commented lines.
	* XmlNameEntry.cs : hash code for a name entry is mostly identical by
	  its local name, so avoid extraneous GetHashCode() especially on
	  namespaces.

2006-01-30  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadOuterXml() returns meaingful value only for
	  element and attribute. ReadInnerXml() does not have to create
	  XmlTextWriter for empty elements.

2006-01-30  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader2.cs XmlException.cs XmlReader.cs XmlTextReader.cs
	  XmlWriter.cs XmlTextWriter.cs XmlValidatingReader.cs
	  XmlNodeReaderImpl.cs DTDValidatingReader.cs XmlSecureResolver.cs:
	  cleaning up obsolete NET_1_0 code.

2006-01-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : avoid case-insensitive String.Compare().
	  Use array for openElements rather than ArrayList.

2006-01-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs, XmlAttribute.cs :
	  Avoid ChildNodes.Count and use FirstChild/NextSibling.

2006-01-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs, XmlIteratorNodeList.cs :
	  Now we can enable XmlIteratorNodeList again (mcs, incorrectly
	  removing nodes in the node list, was fixed).

2006-01-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : in ReadNode() to consume element node, switched
	  to MoveToAttribute(int) since MoveToNextAttribute() was somehow
	  not working fine. It is needed to avoid Sys.Data test breakage
	  and anything else should be fixed indeed.

Fri Jan 27 20:39:48 CET 2006 Paolo Molaro <lupus@ximian.com>

	* XmlTextReader.cs, XmlChar.cs: more tweaks and speedups.

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : optimization patch by Paolo.
	  Fast path optimization in PeekChar().
	  Avoid double-evaluation of PeekChar() and ReadChar() by new
	  Advance() method.

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : disabled XmlIteratorNodeList optimization. It caused
	  some kind of regression under mcs/tests/xml-025.cs.

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttributeCollection.cs :
	  Replaced all Nodes.Count with Count (it could avoid extraneous
	  ArrayList creation in XmlNamedNodeMap). ID attribute adjustment
	  was extraneously done against all attribute nodes and thus there
	  was a plenty of call to Value.
	* XmlNamedNodeMap.cs : added comment on SetNamedItem() W3C spec
	  violation.

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs,
	  XmlDocument.cs,
	  XmlAttribute.cs,
	  XmlElement.cs :
	  Added internal AppendChild() override that omites node type
	  checking, and used it in many places.

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : optimized ReadAttributeNode() to not call
	  MoveToAttribute() unneccesarily (call it only when ReadNode() is
	  called on an attribute node).

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs :
	  in get_InnerText(), avoid extraneous StringBuilder creation.

2006-01-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlIteratorNodeList.cs : new file for XmlNodeList implementation.
	  It does not iterate all nodes in advance.
	* XmlNode.cs : use XmlIteratorNodeList in SelectNodes().

2006-01-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : Dispose() is protected.

2006-01-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamedNodeMap.cs : lazily create internal ArrayList. Thanks to
	  Joshua Tauberer for the hint.

2006-01-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : ToString(TimeSpan) should return valid duration
	  for TimeSpan.Zero, rather than "P". Fixed bug #77350

2006-01-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNameEntryCache.cs XmlNameEntry.cs :
	  Made name entry fields as not read-only. Added Update() to reset
	  members. Its semantics of Equals() is changed.
	  Now entry cache is based on Hashtable rather than ArrayList.
	  It saves heavy iteration in ArrayList.

2006-01-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNameEntryCache.cs XmlNameEntry.cs XmlDocument.cs :
	  Add Hash field to find name entry quickly.
	  In XmlNameEntryCache make use of name table (it is totally
	  unused there though).

2006-01-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : handle Ticks. Fixed bug #77252.

2006-01-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : Fixed bug #77082.
	  When the state was Start, after WriteProcessingInstruction() and
	  WriteWhitespace() change it to Prolog.
	  After WriteDocType() set state to WriteState.Element.

2006-01-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : Do not local duplicate of automatically-created
	  prefixes (i.e. check local autocreated prefixes other than
	  namespaces from ancestors). Fixed bug #77086 and #77087.

2006-01-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : use XmlChar.IsNmToken() to check argument and throw
	  ArgumentException in WriteNmTokenInternal().

2006-01-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : Fixed bug #77094. Only XmlTextWriter checks
	  such invalid "xml" prefix which is being mapped to different
	  namespace URI than the predefined one.
	  Removed comment that does not make sense.
	* XmlNamespaceManager.cs : IsValidDeclaration() could be private.
	  Added some comments.

2006-01-11  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : dtd2xsd fix; set use="optional" when an
	  attribute is #IMPLIED.

2006-01-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : In WriteNode(XPathNavigator, bool), Avoid
	  ReadSubtree() for non-element content since they are not allowed
	  in ReadSubtree() (but allowed here).

2006-01-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : In ReadTypedValue(), treat Whitespace
	  nodes as target string nodes as well as other text nodes.

2006-01-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : ReadTypedValue() was not working with
	  non-XmlSchemaDatatype types.

2006-01-05  Gert Driesen <drieseng@users.sourceforge.net>

	* XmlTextWriter.cs: Modified WriteWhitespace to throw ArgumentException
	if value is null or zero-length string. Modified WriteNmToken to throw
	ArgumentException if name is null or zero-length string. Cosmetic
	change to WriteStringInternal.
	* XmlElement.cs: In 2.0 profile, do not throw ArgumentNullException
	if new value for Prefix is null.

2005-12-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : when namespaceURI is String.Empty, Prefix
	  should be just ignored (it is likely to happen that DOM nodes
	  with empty namespace URI are specified non-empty prefix by
	  users, which had better be just ignored). Fixed bug #77095.

2005-12-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs : patch for Prefix property by Vorobiev Maksim.
	  - null should cause ArgumentNullException.
	  - "" should not raise an error.
	  - throws ArgumentException when it is readonly.

2005-12-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : When xml:space or xml:lang attribute was
	  directly written without an element, it caused ArgumentOutOfRange.
	  Fixed bug #77084.

2005-12-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : (WriteStartAttribute) set prefix as "xmlns" when
	  namespaceURI is that of xmlns attributes. Fixed bug #77083.

2005-12-15  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : (CreateXsdParticle) element particle was
	  missing occurence indicators.

2005-12-15  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : some fixes on GetXmlSchema()
	  - make generated schema cleaner.
	  - enumeration was missing for attribute type.
	* XmlTextReader.cs, XmlTextReader2.cs : added tiny notes for dtd2xsd.

2005-12-15  Konstantin Triger <kostat@mainsoft.com>

        * XmlTextWriter.cs: allow null string in WriteCData.

2005-12-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : (GetNamespaceOfPrefix) return const xml/xmlns URIs
	  only under 2.0.

2005-12-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : added UnderlyingObject as to behave as
	  documented in MSDN.

2005-12-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : under 2.0 xml/xmlns are treated as special cases in
	  GetNamespaceOfPrefix()/GetPrefixOfNamespace() (but it still does not
	  implement IXmlNamespaceResolver, bummer).

2005-12-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : changed some exception types.
	* XmlDocumentNavigator.cs : added 2.0 SchemaInfo.

2005-12-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : 1.x build fix.

2005-12-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : when XmlReader.Create() creates this instance,
	  don't expect strict text declaration. Check SkipTextDeclaration()
	  on Read().

2005-12-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : fixed several misconception in MoveToNextSibling().
	  It should check its ReadState to avoid infinite loop.

2005-12-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlException.cs : added another .ctor() overload that takes both
	  IXmlLineInfo and innerException.
	* XmlQualifiedName.cs : added Parse() overload that takes XmlReader
	  (since XmlReader is not IXmlNamespaceResolver anymore).
	* XmlReader.cs : made several fixes on 2.0 ReadContentAs(),
	  ReadElementContentAs() and all of its variants.

2005-12-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlInputStream.cs :
	  Added Encoding property on NonBlockingStreamReader
	* XmlTextReader.cs :
	  set Encoding property when it proceeds to xml declaration.

2005-12-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadToDescendant() should work when its ReadState is
	  Initial.

2005-12-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlChar.cs : removed incorrect comment.
	* XmlReader.cs : Create() clones XmlReaderSettings (if supplied).
	  For wrapped XmlReader, check ConformanceLevel to be consistent.
	* XmlTextReader.cs, XmlTextReader2.cs : added get_Conformance for
	  internal use. Removed unused fields.
	* XmlInputStream.cs : updated NonBlockingStreamReader to the latest
	  StreamReader (it is almost a copy).

2005-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : avoid Char.IsSurrogate() and do it inside
	  PeekChar(), which improves notable performance.

2005-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs : Schemas will be created only when it is
	  required.

2005-12-08  Andrew Skiba  <andrews@mainsoft.com>

	* IXmlNamespaceResolver.cs: delete TARGET_JVM,
	no need to mangle the name

2005-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* Driver.cs, Profiler.cs, XmlQualifiedNameTable.cs :
	  removed old code.

2005-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs : thanks to idiotic MS design,
	  AllowXmlAttributes is turned on by default.

2005-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs :
	  set_Schemas() is fixed in 2.0 RTM (it just works).
	* XmlResolver.cs : throw ArgumentNullException instead of
	  ArgumentException when both base and relative urls are null.

2005-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs : ProhibitDtd is set as default.
	* XmlWriterSettings.cs : no set_OutputMethod.

2005-11-30  Konstantin Triger  <kostat@mainsoft.com>

	* IXmlNamespaceResolver.cs: TARGET_JVM namespace change.

2005-11-17  Vladimir Krasnov <vladimirk@mainsoft.com>

	* XmlInputStream.cs: fixed Initialize method to be able 
	to read unicode file without BOM. TARGET_JVM only.

2005-11-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader.cs : removed historical one.

2005-11-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs, XmlNode.cs :
	  [DebuggerDisplay] are not worthy of existing.

2005-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTokenizedType.cs, XmlNodeOrder.cs : so those enums happen to
	  have [Serializable] in .NET 1.x, and removed in 2.0 (enums are
	  anyways serializable, so those attributes do not make sense).

2005-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : added CanReadBinaryContent.
	* XmlTextReader.cs, XmlTextReader2.cs : GetNamespacesInScope() are
	  now both public and private (i.e. hush IsVirtual).
	* XmlWriterSettings.cs, XmlWriter.cs, XmlTextWriter.cs :
	  NormalizeNewLines vanished.

2005-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : MoveToAttribute(int) is virtual in NET_2_0.

2005-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : implemented VerifyTOKEN().

2005-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : VerifyNCName() and VerifyName() throws
	  ArgumentNullException for "".

2005-11-07  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : dependent XmlSchemaValidationFlags fix.
	  Added ReadElementContentAsObject() and ReadContentAsObject().
	* XmlReader.cs, XmlTextReader.cs :
	  LookupNamespace(string,bool) is now private.
	* XmlReader.cs, XmlNode,cs :
	  [DebuggerDisplay].

2005-11-07  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs, XmlCDataSection.cs, XmlText.cs, XmlWhitespace.cs,
	  XmlSignificantWhitespace.cs : added ParentNode overrides (actually
	  they don't make sense since it just calls base.)
	* XmlNode.cs, XmlDocument.cs : changed .NET 2.0 CreateNavigator() impl
	  to match signature and skip OwnerDocument check in XmlNode (since
	  it is overriden). Maybe MS does not have ownerDocument as a field and
	  costs too much on OwnerDocument property.
	  Added missing bits in XmlDocument.

2005-11-07  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : added new overrides in 2.0 RTM (this scarcely
	  makes sense without real optimization though).
	* XmlDocument.cs, XmlElement.cs, XmlNode.cs : avoid ChildNodes and
	  save extra XmlNodeList creation cost.

2005-11-07  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamespaceManager.cs : NameTable is virtual in 2.0 RTM.
	* XmlReader.cs : IsEmptyElement is reverted to be abstract in 2.0 RTM.
	  ReadTypedValue() is removed.
	* XmlValidatingReader.cs : ReadTypedValue() is not virtual now.
	* XmlWriter.cs : Settings is virtual.

2005-10-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : now MoveToFirst() invokes internal
	  MoveToFirstImpl().

2005-10-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : oops, so WriteState.Error is NET_2_0 only.

2005-10-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : (Error state check) actually I need to set Error.

2005-10-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : throw InvalidOperationException if any of
	  WriteBlah() methods were invoked at error state.

2005-10-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs, DTDValidatingReader.cs : LookupNamespace("") for
	  default namespace was returning "" instead of null. It didn't check
	  empty namespace URI for non-empty prefixes.

2005-10-07  Joshua Tauberer <tauberer@for.net>

	* XmlTextReader.cs: SkipTextDeclaration would not accept processing
	instructions that began with the string 'xml', e.g. rejecting
	'xml-stylesheet'.

2005-10-08  Gert Driesen <drieseng@users.sourceforge.net>

	* XmlAttribute.cs: InnerText and InnerXml do not override getters in
	NET_2_0. Removed extra CLSCompliant attribute on SchemaInfo.
	* XmlReaderSettings.cs: Marked sealed.

2005-10-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : ToTimeSpan() resulted in an infinite loop when the
	  digits for "second" were not exactly 3. Fixed bug #76328.

2005-10-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : Name is virtual in NET_2_0.

2005-10-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs, XmlWriterSettings.cs, XmlTextWriter.cs :
	  added supprot for NormalizeNewLines.
	  NewLineOnAttributes is considered only when Indent is true.

2005-10-01  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs, XmlDocument.cs : check id table updates when
	  XmlAttribute.set_Value() was invoked. Fixed bug #76311.

2005-10-01  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs, XmlTextReader.cs, XmlTextReader2.cs :
	 XmlReader.Create() with string url argument are not working because
	 of incorrect choice of the .ctor().

2005-09-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReaderImpl.cs : when the source node was not a document and
	  it is an empty element, Read() was incorrectly moving to the parent
	  of the source node. Patch by Csaba Halasz. Fixed bug #76260.

2005-09-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : surrogate computation is incorrect. Fixed bug
	  #76247. Patch by Brion Vibber.

2005-09-26  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : Namespace manager was not handled correctly.
	  Now it does the same as XmlTextReader does. Fixed bug #76234.

2005-09-26  Gert Driesen <drieseng@users.sourceforge.net>

	* XmlNodeChangedEventArgs.cs: Only make ctor publicly available
	in NET_2_0. Fixed API compatiblity with .NET 1.1.
	* XmlOutputMethod.cs: Fixed values of enum fields to match MS.NET.
	Only available in .NET 2.0.

2005-09-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs, XmlReaderSettings.cs, XmlDocument.cs:
	  XmlSchemaValidationFlags updates.

2005-09-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriterSettings.cs : true NET_2_0 updates.

2005-09-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlOutputMethod.cs : new file.
	* XmlWriter.cs, XmlValidatingReader.cs, XmlReaderSettings.cs,
	  XmlUrlResolver.cs, XmlWriterSettings.cs :
	  more NET_2_0 updates.

2005-09-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader2.cs, XmlReader.cs,
	  XmlTextReader.cs, XmlTextReader2.cs,
	  XmlNodeChangedEventArgs.cs, XmlElement.cs,
	  XmlNode.cs, XmlDocument.cs :
	  updated NET_2_0 API.

2005-09-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : when there is a heading half of surrogate at the
	  end of read buffer, it didn't treat it as a surrogate.
	  Fixed bug #76102.

2005-09-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : for surrogate pair, output character reference
	  as a single character instead of two reference pairs. Fixed bug #76095.
	  Patch by Brion Vibber.

2005-08-31  Sebastien Pouliot  <sebastien@ximian.com>

	* XmlDocument.cs: Added an InheritanceDemand for Unrestricted on 
	CreateDocumentType and ReadNode methods.
	* XmlException.cs: Added a Demand for SerializationFormatter on 
	GetObjectData method.
	* XmlResolver.cs: Added an InheritanceDemand for Unrestricted on 
	ResolveUri method.
	* XmlSecureResolver.cs: Fixed exception when creating evidences with 
	an empty URL in CreateEvidenceForUrl method. Only call ResolvePolicy 
	and PermitOnly if the security manager is enabled.
	* XmlTextReader.cs: Added an InheritanceDemand for Unrestricted on the
	class.
	* XmlTextReader2.cs: Added an InheritanceDemand for Unrestricted on 
	the class.
	* XmlValidatingReader.cs: Added an InheritanceDemand for Unrestricted 
	on the class.

2005-08-16  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : no need to skip text declaration for such entity
	  declaration that has literal entity. It should not expand entities
	  inside ResolveExternalEntityReplacementText().
	  Finally fixed bug #51495.

2005-08-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs, XmlTextReader2.cs : added internal .ctor() to
	  receive both TextReader, XmlNodeType and BaseURI for entity
	  resolution (though it would be removed later).
	* XmlParserInput.cs : Now to handle nested PE insertion and correct
	  BaseURI, it internally holds a stack of "input source".
	* DTDObjectModel.cs,
	  DTDReader.cs :
	  Required fixes for XmlParserInput.
	  Handle BaseURI as expected. Added ActualUri for resolved actual
	  source URI (to resolve nested entities). Pass ActualUri to internal
	  XmlTextReader.ctor() in ResolveExternalEntityReplacementText()
	  (well, yes I remember, it is problematic.)

	  Incorrect Base URI handling bug (part of #51495) is fixed.

2005-08-16  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs, XmlParserInput.cs :
	  let's fix #51495. First of all, refactoring.

2005-08-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : When there was only one child in attribute
	  and it was an entity reference, set_Value() tried to set text value
	  and thus failed.

2005-08-03  Gert Driesen  <drieseng@users.sourceforge.net>

	* XmlConvert.cs: Renamed RoundTripKind to RoundtripKind.
	* XmlDateTimeSerializationMode.cs: Renamed RoundTripKind to
	RoundtripKind to match .NET 2.0 Beta 2.
	* XmlNodeReader2.cs: GetNamespacesInScope returns generic IDictionary
	in .NET 2.0 Beta 2, and is explicit interface implementation.
	* XmlTextReader.cs: GetNamespacesInScope returns generic IDictionary
	in .NET 2.0 Beta 2.
	* XmlTextReader2.cs: GetNamespacesInScope returns generic IDictionary
	in .NET 2.0 Beta 2.
	* XmlValidatingReader.cs: GetNamespacesInScope returns generic 
	IDictionary in .NET 2.0 Beta 2.
	* IXmlNamespaceResolver.cs: GetNamespacesInScope returns generic
	IDictionary in .NET 2.0 Beta 2.
	* XmlNamespaceManager.cs: GetNamespacesInScope returns generic 
	IDictionary in .NET 2.0 Beta 2.
	* XmlNodeReaderImpl.cs: GetNamespacesInScope returns generic 
	IDictionary in .NET 2.0 Beta 2.
	* DTDValidatingReader.cs: GetNamespacesInScope returns generic
	IDictionary in .NET 2.0 Beta 2.

2005-07-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : In WriteQualifiedName(), when there is open
	  attribute, it calls LookupPrefix() and then if namespace was empty,
	  it resulted in an exception. Fixed bug #75546.

2005-06-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : ToTimeSpan() should accept milliseconds (according
	  to ISO 8601 and XSD datatypes 3.2.6.1).

2005-06-27  Andrew Skiba  <andrews@mainsoft.com>

	* DTDReader.cs : don't validate entity values, when the entry is
	redefined so it will be never used. Fixes valid-sa-086 test from W3C
	xmlconf suite.

2005-06-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlQueryDialect.cs : removed.

2005-06-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : added Create(XmlWriter).
	* XmlValidatingReader.cs : added Read*AsBase64/BinHex().
	* XmlReaderSettings.cs : added obsolete annoyances to hush corcompare.

2005-06-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : use StringBuilder.ToString(int,int) when it does
	  not have a large chunk of data, following Ben's idea.

2005-06-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : use StringBuilder to store character values; that
	  saves 40% memory for large chunk of xml. Patch by Gonzalo.

2005-06-22  Andrew Skiba  <andrews@mainsoft.com>

	* XmlNode.cs : cosmetic fix - remove unnecessary argument from
	  AppendChildValues function.
	  
2005-06-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : normalization is not required to check character
	  validity everywhere except for character reference.

2005-06-17  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : removed some extra IsDefault check (with
	  the latse code default attributes are stored in hashtables anyways.)
	  Fixup attribute namespaces _after_ xmlns attributse are filled.
	  The latest change is not good that namespaceURI of a local attribute
	  was incorrectly globally looked up (it should be always "").

2005-06-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : LookupNamespace() was trying to access to 
	  null reference to validatingReader.
	* DTDValidatingReader.cs : Fixed default xmlns* attribute handling.
	  It used to be valid only at the declaring element.

2005-06-14  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : further text node fixes.
	  - Cut out validation code from Text node case.
	  - Now it does not use error-prone case transition but uses 
	    DocumentFragment 'vacant room' and fixed incorrect transition from
	    whitespace to text.
	  - CDATA should be validated the same as Text is.

2005-06-14  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : whitespace nodes were incorrectly rejected
	  inside non-mixed content model.

2005-06-09  Andrew Skiba  <andrews@mainsoft.com>

	* XmlConvert.cs : add TARGET_JVM for roundtrip bug

2005-06-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlEntityReference.cs, XmlNode.cs : protected api fix.

2005-06-02  Atsushi Enomoto <atsushi@ximian.com>

	* XmlEntityReference.cs, XmlNode.cs : For entity references, BaseURI 
	  resolution should be different from that of parent since they might
	  differ. Patch by Andrew Skiba.

2005-05-31  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs :
	  make sure to close parser input before parser stack pop.
	* DTDValidatingReader.cs : ditto.
	* DTDObjectModel.cs : Fixed another incorrect null BaseURI check.

2005-05-31  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : Last BaseURI exposed this hidden bug via
	  sys.security tests.

2005-05-30  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : in DTDEntityBase.Resolve() don't overwrite
	  BaseURI which results in incorrect URI resolution.

2005-05-21  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : For simple type restriction creation it failed
	  when there is no enumerations (largely failed).

2005-05-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlImplementation.cs : added new NET_2_0 ctor.
	  Let's check corcompare:-/

2005-05-11  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : namespace storing was stupid.

2005-05-10  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : since namespace declarations might be
	  resolved differently due to entity handling, it holds its own set
	  of declared namespaces. NamespaceURI and LookupNamespace() use it.

2005-05-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : added ReadElementContentAsLong().
	* XmlWriter.cs : removed some obsolete WriteValue() overloads.
	* XmlResolver.cs,
	  IXmlNamespaceResolver.cs : removed deprecated 2.0 bits.
	* XQueryConvert.cs : obsolete (yeah, now XQuery should be hidden).

2005-05-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlInputStream.cs : Now XmlStreamReader uses non-blocking TextReader
	  that is mostly copied from StreamReader. It should fix bug #74161.

2005-05-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader2.cs, XmlTextReader2.cs, XmlValidatingReader.cs,
	  XmlNamespaceManager.cs, IXmlNamespaceResolver.cs,
	  DTDValidatingReader.cs : Removed most of "atomizedName" related
	  stuff that are obsoleted in 2.0 beta2.
	* XQueryConvert.cs : XPathAtomicValue -> XmlAtomicValue.

2005-05-04  Andrew Skiba <andrews@mainsoft.com>

	* IXmlNamespaceResolver.cs : mangle the interface method names when
	compiling for TARGET_JVM
	
2005-03-30  Atsushi Enomoto <atsushi@ximian.com>

	* XmlUrlResolver.cs : just return connected Stream instead of fully
	  downloaded memory cache. Fix by Konstantin Triger.

2005-03-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : WriteQualifiedName() should check namespace validity
	  (whether it is in scope or not).
	* XmlTextWriter.cs : When WriteQualifiedName() is invoked inside
	  attribute and no matching namespace declaration, create prefix
	  on demand. Code reused from WriteStartAttribute().

2005-03-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : create schema set on demand.

2005-03-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserInput.cs,
	  XmlNode.cs,
	  XmlUrlResolver.cs,
	  DTDValidatingReader.cs : removed/commented out those warned code.

2005-03-15  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : overriden IsDescendant (default 
	  implementation extraneously clones).

2005-03-15  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : When expanding entities and there is a
	  sequence of text nodes, its value was not returned.
	* XmlTextReader.cs : better invalid char error report for EOF.

2005-03-09  Andrew Skiba <andrews@mainsoft.com>

	* XmlTextReader.cs, XmlParserInput.cs, DTDReader.cs: fix UCM-4
	  surrogate calculations. This fixes bug 73513.

2005-03-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserInput.cs : silly mixed line endings :(

2005-03-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : namespace declaration check for those which starts
	  with 'x' 'm' 'l' should not be done here (it might be 'declared'
	  though reserved).
	* XmlNamespaceManager.cs : error message for "'xml' prefix for
	  different namespace" is incorrect.

2005-03-07  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : ugh, so I introduced extraneous reader.Read() in
	  ReadNode() for EntityReference and it resulted in unexpected skip.
	* DTDValidatingReader.cs : On EndEntity, LocalName and Name should
	  return the name of entity. Removed unused entityReaderNameStack.

2005-03-07  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : reverted one change in r40985. Entity stack
	  is nothing to do with ReadAttributeValue().

2005-03-07  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : When there was actual attribute in source 
	  XmlReader, MoveToAttribute(i) did not move source reader as expected.

2005-03-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : In ReadNode(), on EntityReference node, when 
	  XmlReader can resolve entity, it expands entity and apppend 
	  children into the entity reference. Patch by Konstantin Triger.

2005-03-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : For duplicating namespace mapping, it should
	  create another prefix without throwing an exception.

2005-03-02  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : LookupPrefix() should not return those prefix
	  that is overriden by another xmlns declaration.

2005-02-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlEntity.cs : it was not returning SYSTEM ID when there is no
	  PUBLIC ID.
	* XmlDocumentNavigator.cs : On Whitespace followed by DocumentType,
	  get_NodeType() resulted in loop.

2005-02-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlComment.cs, XmlNode.cs, XmlText.cs, XmlProcessingInstruction.cs,
	  XmlEntityReference.cs, XmlSignificantWhitespace.cs, XmlAttribute.cs,
	  XmlElement.cs, XmlEntity.cs, XmlCDataSection.cs :
	  For those nodes that are created by Clone(), IsReadOnly is false.
	  Patch by Konstantin Triger.

2005-02-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : iteratedNames array could be fixed and
	  performance got improved. Patch by Konstantin Triger.

2005-02-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : MS does not reject non-NCName prefix. Patch by
	  Konstantin Triger.

2005-02-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : WriteString() should be valid when 
	  WriteStartDocument() was not called.

2005-02-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamespaceManager.cs : IsValidDeclaration was giving useless error
	  information.

2005-02-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : it should virtually expand EntityReference,
	  so refactored to handle both entity references and top level children.

2005-02-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : XmlParserContext was not properly popped on
	  the expected timing and thus had lost BaseURI, XmlSpace and XmlLang.
	* XmlInputStream.cs : XmlTextReader does not allow invalid utf-8 
	  characters.

2005-02-21  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : It should not skip whitespace and
	  significant whitespace nodes unless it is expanding entities.
	* XmlDocumentNavigator.cs : Fixed NodeType that was returning
	  incorrect type when there is a sequence of text/cdata/space nodes.

2005-02-18  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamespaceManager.cs : Prefix "xml" is bound to the fixed
	  namespace "http://www.w3.org/XML/1998/namespace", but it is not
	  vice versa (i.e. we can use other prefixes for this namespace URI).

2005-02-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : It does not have to iterate children to find argument
	  node. Fixed exception type to ArgumentException. Patch by Andrew
	  Skiba.

2005-02-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : just use InnerText for Value. Patch by Andrew
	  Skiba.
	* XmlConvert.cs : Handle null and empty strings for EncodeName(),
	  EncodeLocalName() and EncodeNmToken(). Patch by Andrew Skiba.
	* NameTable.cs : usually tail of namespaces are rather different than
	  head of them. Patch by Andrew Skiba.
	* XmlUrlResolver.cs : missing %20 handling. Patch by Andrew Skiba.

2005-02-15  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : For default attributes, WriteTo() writes nothing
	  under MS.NET.
	* DTDValidatingReader.cs : reduced indentation using Linus trick
	  (it was too deep in nest).

2005-02-14  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : Namespaces and prefixes are not properly
	  handled (it incorrectly assumed DTD definitions and thus always 
	  assumed empty namespace/prefixes).

2005-02-14  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : element name stack might be empty when the
	  input XmlReader contains fragments. Patch by Andrew Skiba.

2005-01-25  Martin Baulig  <martin@ximian.com>

	* XmlNode.cs (XmlNode.SchemaInfo): Mark this as not CLS-compliant
	to avoid a CS3025.

	* XmlReaderSettings.cs (XmlReaderSettings.XmlResolver): Mark this
	as not CLS-compliant to avoid a CS3025.

2005-01-18  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs,
	  XmlAttribute.cs,
	  XmlAttributeCollection.cs :
	  Now reuse parentNode field for XmlAttribute.OwnerElement and
	  reduce class allocation size.
	* XmlNameEntry.cs :
	  New class that represents a name triplet.
	  XmlNameEntryCache.cs :
	  New type to cache name entries.
	* XmlAttribute.cs,
	  XmlElement.cs :
	  Replace name strings with name entry and save class allocation size.
	  XmlDocument.cs :
	  Add name entry cache field to document and reuse name entries that 
	  are already allocated.

2005-01-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs, XmlAttribute.cs : reverted the previous patch. It broke
	  several nunit tests.

2005-01-15  Ben Maurer  <bmaurer@ximian.com>

	* XmlNode.cs (InnerText, AppendChildValues): Don't allocate a
	string in the case where nothing needs to be appended.

	* XmlAttribute.cs (BuildChildValue): Start out the string with
	`null' not `String.Empty'. String.Concat (null, blah) == blah,
	pointerwise. ie, there is no allocation. This makes it so that
	getting the value of an attribute is faster for the fast case.

2005-01-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlResolver.cs : throw ArgumentException in ResolveUri().

2005-01-11  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : WriteComment() was outputting extraneous EOL.

2004-12-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadElementContentAsBinHex() was calling ..AsBase64().
	* XmlValidatingReader.cs : In set_EntityHandling(), set that property
	  of DTDValidatingReader.
	* XmlNodeReader2.cs,
	  XmlNodeReaderImpl.cs : added simplified implementation that splits
	  entity handling and anything else.
	* XQueryConvert.cs : implemented ShouldCheckValueFacets().
	  Use Convert class instead of simple casts (check range).
	* XmlReaderSettings.cs : added SetSchemas() for XPathNavigator.

2004-12-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserContext.cs : all the string properties must not be set as
	  null. Thanks to Joshua.
	* XmlTextReader.cs,
	  DTDObjectModel.cs,
	  DTDReader.cs : XmlResolver.ResolveUri() may return null.

2004-12-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderBinarySupport.cs : added support class for base64/binhex
	  reading that mostly automates those reader support.
	* XmlReader.cs : added CanReadBinaryContent, CanReadValueChunk,
	  ReadContentAsBase64(), ReadElementContentAsBase64(),
	  ReadContentAsBinHex(), ReadElementContentAsBinHex() and
	  ReadValueChunk().
	* XmlTextReader.cs : Now ReadBase64() and ReadBinHex() implementations
	  are moved to XmlReaderBinarySupport. Added CanReadBinaryContent and
	  CanReadValueChunk overrides. Call Binary.Reset() to enable them.
	* XmlTextReader2.cs : added CanReadBinaryContent, CanReadValueChunk.
	  Added ReadContentAsBase64(), ReadElementContentAsBase64(),
	  ReadContentAsBinHex(), ReadElementContentAsBinHex() (just because
	  they are overriden in MS.NET).
	* XmlNodeReader.cs : added CanReadBinaryContent and CanReadValueChunk.
	  Call Binary.Reset() to enable them.

2004-12-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs :
	  Added DateTime related methods with serialization mode.

2004-12-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : added MoveToFollowing().
	* XmlNode.cs,
	  XmlElement.cs,
	  XmlAttribute.cs : added SchemaInfo support.
	* XmlDocument.cs : added Schemas and Validate().
	  ReadNode() now copies xmlReader's SchemaInfo.
	* XmlNodeReader.cs : ditto (just reflects node's SchemaInfo).

2004-12-15  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs :
	  Create() should assure NameTable!=null on creating XmlTextReader.
	  Now use XmlSchemaValidatingReader for all xsd validation.
	* XmlTextReader2.cs :
	  Don't use input reader's Settings. It is null.
	* XmlReaderSettings.cs : added XmlResolver.

2004-12-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs : XsdValidate and DtdValidate are now
	  ValidationType.
	* XmlReader.cs : In Create(), use XmlSchemaValidatingReader for xsd
	  validation.

2004-12-12  Zoltan Varga  <vargaz@freemail.hu>

	* XmlTextReader.cs: Work around a compiler bug in csc 2.0 beta 1.

2004-12-09  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : implemented lightweight XmlSchema generator.

2004-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : making smarter relationship between
	  XsdValidatingReader.

2004-12-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlException.cs : added SecurityPermissionAttributes.
	* XmlReaderSettings.cs,
	  XmlReader.cs : added ValidationFlags and removed obsolete ones.

2004-12-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : WriteQualifiedNameInternal() should consider the case
	  ns is null, and don't lookup prefix for empty namespace.

2004-12-03 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: don't use \0 as buffer terminator.
	* XmlInputStream.cs: s/Array.Copy/Buffer.BlockCopy/.

2004-11-30  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : Consideration on parameter entity was missing for 
	  attribute default value. Fixed bug #70008.

2004-11-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : not fixage, just explicitly formatted code a bit.
	* XmlTextReader.cs,
	  XmlEntity.cs,
	  XmlAttributeCollection.cs,
	  XmlTextWriter.cs,
	  XmlElement.cs,
	  XmlNode.cs,
	  DTDObjectModel.cs,
	  XmlParserInput.cs,
	  DTDReader.cs,
	  XmlDocument.cs : warning removal.

2004-11-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlQualifiedNameTable.cs : oops, it was not implemented.

2004-11-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlQualifiedName.cs : in 2.0 it is [Serializable].
	* XmlTextReader.cs : removed unused local variable.
	* XmlTextWriter.cs : Improved some exception messages.
	  moved some private fields into #if NET_2_0.
	* XmlValidatingReader.cs : rename specifiedResolver to
	  resolverSpecified and use it in internal get_Resolver().
	  Added [Obsolete] for ReadTypedValue() whose base is obsoleted.

2004-11-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Now attribute normalization is handled on Read(),
	  not on get_Value. This caused a problem when we use
	  XmlValidatingReader that value is not always normalized expectedly.

2004-11-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : removed old ReadValueAsXXX() and added new
	  ReadContentAsXXX() and ReadElementContentAsXXX().
	* XmlTextReader.cs : removed old ReadValueAsXXX() (no overrides now).
	* XmlTextWriter.cs : added indentation on Comment nodes.
	* XmlDateTimeSerializationMode.cs : updated.
	* XmlResolver.cs : added 2.0 NameTable field.
	* ValidationType.cs : added ObsoleteAttributes on some members.

2004-11-18  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserContext.cs : the fix was not checked in :(

2004-11-17  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryConvert.cs : moved from System.Xml.Query.

2004-11-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs : after WriteAttributes(), argument XmlReader must
	  move to element. This fixes bug #69350.

2004-11-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserContext.cs : PushScope() was accessing list out of range.

2004-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs, XmlTextReader.cs :
	  needed more changes wrt XmlException.

2004-11-08  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs,
	  DTDReader.cs,
	  XmlReader.cs,
	  XmlTextReader.cs,
	  XmlException.cs :

	  Added support for 2.0 XmlException.SourceUri property. Improved
	  exception handling to contain BaseURI everywhere in the parser.

2004-11-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader2.cs : added. It is used to serve public API, plus
	  entity handling support.

	* DTDObjectModel.cs,
	  DTDValidatingReader.cs,
	  XmlDocumentType.cs,
	  XmlParserContext.cs,
	  XmlTextReader.cs :
	  Implemented XmlTextReader.EntityHandling and ResolveEntity(). To
	  implement them, XmlTextReader in 2.0 itself is in XmlTextReader2.cs
	  and XmlTextReader.cs contains Mono.Xml2.XmlTextReader which is the
	  same as 1.x XmlTextReader. XmlTextReader2 switches entity reader and
	  source reader, and never handles tokenization. 
	  The reason for "Mono.Xml2" is to avoid large changes in constructor.f

2004-11-08  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs, XmlElement.cs : get_Name should consider name table.
	* XmlDocument.cs : use NameTable in Load() and LoadXml().
	* XmlReader.cs : In Create(), use NameTable in XmlReaderSettings.

2004-11-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : create rarely-used ArrayList later. This
	  significantly improves XmlDocument-based XPath performance.

2004-11-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Manually expanded some of AppendValueChar() and
	  XmlChar.IsWhitespace() which are on critical points on performance
	  (marked as FIXME, but it depends on JIT).

2004-11-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Search xml:* attributes more efficiently.

2004-11-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Reduced NameTable.Add() for prefixed names. First,
	  ReadName() now returns atomized LocalName and Prefix. Second, to
	  avoid extraneous split, SetProperties() now takes prefix and
	  localName that might be given from ReadName(). Third, removed 
	  FillNames(). This optimizes "namespace-aware and prefixed document"
	  parsing 10-20% faster.

2004-11-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs :
	  With related to AddNamespace(), there was extra string.StartsWith()
	  calls. Now AttributeTokenInfo.FillNames() is splitted into
	  FillPrefixAndXmlns() and FillNamespace(), and AddNamespace() is done
	  at FillPrefixAndXmlns().

2004-11-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs :
	  Reduces LookupNamespace() call in FillNames(). This improves 6-7%
	  speedup in some scenario.
	  Code refactory; Removed unused code. AddAttribute() is used only for
	  DTD, so renamed to AddDtdAttribute(). For PUBLIC and SYSTEM ids,
	  FillNames() is not required. Two SetProperties() are ambiguous, so
	  renamed one (that takes TokenInfo) as SetTokenProperties().

2004-11-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserContext.cs : rewrote; especially to avoid XmlSpace boxing.

2004-11-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : LookupNamespace() don't have to be called in
	  ReadStartTag() to check prefix, since NamespaceURI is filled in
	  FillNames(). 10% performance up by avoiding this extra check.

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : fixed incorrect recursion between
	  indexer and GetAttribute().

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs, DTDValidatingReader.cs, XmlTextReader.cs :
	  When XmlTextReader is created with NodeType Element or Attribute,
	  skip possible text declaration (that might be used for resolving
	  entities) that specifies text encoding. With this fix, bug #61274
	  must be regarded as fixed.

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader.cs : Reimplemented ResolveEntity(). It does not use
	  XmlTextReader trick anymore. XmlNodeReader itself is used instead.

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader.cs : for NET_1_0 ReadInnerXml(), just use
	  XmlReader.ReadInnerXmlInternal(). It should work fine.
	  Ditto for ReadOuterXml().

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader.cs : removed unused/unreachable code. Simplify
	  namespace lookup.

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs, XmlNodeReader.cs, XmlTextReader.cs,
	  XmlValidatingReader.cs : Those readers could just implement internal
	  interface IHasXmlParserContext.
	* XmlTextReader.cs, XmlValidatingReader.cs : this[] disappeared in 2.0.
	  (XmlReader has them as virtual.)
	* XmlReader.cs : ReadAsObject() disappeared.
	* XmlWriter.cs : WriteFromObject() disappeared.

2004-10-29  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : GetNode() should consider namespace nodes.
	* XmlNode.cs : dustclean.

2004-10-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : use XPathEditableDocument again.
	* XmlNode.cs : To be compatible with XPathEditableDocument, it should
	  not cast XPathNavigator to XmlDocumentNavigator but to IHasXmlNode.

2004-10-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlChar.cs, XmlConstructs.cs :
	  Switched again, for reducing per-process memory consumption.
	* XmlInputStream.cs :
	  Just 64 bytes of buffer would be enough, for example like
	  <?xml version="1.0" encoding="iso-8859-15" standalone="yes" ?>

2004-10-28  Atsushi Enomoto <atsushi@ximian.com>

	* IXmlDataEvidence.cs : disappeared.
	* XmlConvertDateTimeSerializationMode.cs : incorrect filename. removed.
	* XmlDateTimeSerializationMode.cs : added
	* NewLineHandling.cs : added
	* IXmlNamespaceResolver.cs, XmlNamespaceManager.cs :
	  now 'atomizedNames' is obsolete.
	* XmlReaderSettings.cs, XmlWriterSettings.cs :
	  Should not be sealed. Should not be ICloneable.

2004-10-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : XPathEditableDocument looks broken. Just reverted
	  to fix 2.0 corcompare.

2004-10-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Don't create attribute Value string on Read()
	  (i.e. create string when get_Value() is invoked.) This optimizes
	  some kind of XmlTextReader usage significantly such as Skip().

2004-10-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvertDateTimeSerializationMode.cs : added.
	* XmlConvertDateTimeOption.cs : removed.

2004-10-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs :
	  For net_2_0, CreateNavigator() returns editable XPathNavigator.
	* XmlReader.cs, XmlTextReader.cs, XmlValidatingReader.cs :
	  They do not implement IXmlDataEvidence anymore.

2004-10-18  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs :
	  Fixed CheckCharacters setter that always set false.
	  CheckCharacters check is also required for ReadText(). This fixes
	  bug #68449.

2004-10-15  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : Inside DTD, '<' character inside XML comment 
	  is regatded as invalid. This fixes bug #68410. (Error message was
	  also not correct.)

2004-10-14  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : CreateTextWriter() is private.

2004-10-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNodeReader.cs : LookupPrefix() was only after 2.0.

2004-10-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : GetNamespacesInScope() caused
	  IndexOutOfRangeException (miscounted indexes).

2004-10-04  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : WriteNode(XPathNavigator,bool) should check null arg.
	  For attribute nodes, it should not use WriteSubtree() which does not
	  support attribute nodes.

2004-09-20  Gert Driesen <drieseng@users.sourceforge.net>
	
	* XmlValidatingReader.cs: Added deprecation message.

2004-09-14  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter.cs : Close() should not Flush() when the output is
	  already closed. bug #65918 is fixed.

2004-09-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter.cs : CloseOutput must be true by default.

2004-09-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs, XmlTextWriter.cs, XmlWriterSettings.cs :
	  Implemented CheckCharacters and CloseOutput support.

2004-09-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : evidence is always provided.
	* XmlWriter.cs, XmlTextWriter.cs :
	  added support for ConformanceLevel and OmitXmlDeclaration.

2004-09-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : Console.WriteLine() injected :(
	* XmlTextWriter.cs : It it partly supports XmlWriterSettings.
	* XmlWriter.cs : implemented Create().
	* XmlWriterSettings.cs : removed EncodeXmlBinary (deprecated).

2004-09-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlFactory.cs : removed (obsolete).

2004-09-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : GetNamespacesInScope() ignored default
	  namespace when scope is .ExcludeXml or .All.
	* XmlReader.cs : Implemented ValueType, SchemaInfo, ReadAsObject().
	  Fixed ReadTypedValue() to call ReadValueAs().

2004-09-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : Fixed GetNamespacesInScope() that returned
	  inconsistent namespace pairs.

2004-09-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs, XmlTextReader.cs :
	  Added NET_2_0 CheckCharacters support.

2004-09-06  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNode.cs : GetEnumerator() does not have to create ChildNodes
	  every time. Removed unused StringBuilder field.

2004-09-06  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : on reader.NodeType is None, WriteNode() still tries
	  to read more (and might result in an error).

2004-09-03  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : When Normalization is true, CRLF and CR should
	  be converted to single LF. This should fix part of bug #62076.

2004-08-30  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : implemented WriteValue(object) for known types.

2004-08-30  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlElement.cs : XmlAttributeCollection doesn't have to be created
	  every time until the actual use. This sometimes optimizes
	  attribute-less XML performance siginificantly.

2004-08-27  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttribute.cs : some property getters threw NullReferenceException
	  when the attribute is not added to an element.
	* XmlNode.cs : When a node is not appended to another node, BaseURI
	  is empty. Bug #64120 is fixed.

2004-08-26  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter.cs : In CheckState(), don't create indentation string
	  at every time. WriteIndent() now handles the indentation without
	  recomputation.

2004-08-23  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs, XmlTextReader.cs, XmlWriter.cs :
	  eliminate MS.Internal.Xml.* classes.

2004-08-21  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlElement.cs : set_InnerText was removing children incompletely.
	  This fixes bug #63574.

2004-08-20  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : Fixed EOF not to return true when it is just
	  closed. Element and EndElement location is now adjusted to be the
	  same as MS.NET does. This fixes bug #63505 and #63507.
	  ResetState() now throws InvalidOperationException() as MS.NET does.

	* WriteState.cs : added missing 2_0 enumeration.
	* XmlReader.cs : ReadTypedValue() is virtual.
	* XmlValidatingReader.cs : ReadTypedValue() is override under 2_0.

2004-08-10  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlValidatingReader.cs : Replaced XmlSchemaCollection with
	  XmlSchemaSet. Added Settings property override

2004-08-10  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDReader.cs : Replacing XmlSchemaDatatype .FromName(string) with
	  .FromName(string, string) [going to remove former one; it is not
	  good to support xdt:blah datatypes].

2004-08-03  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDValidatingReader.cs,
	  XmlValidatingReader.cs : implemented IXmlNamespaceResolver.
	* XmlNamespaceManager.cs,
	  XmlNodeReader.cs : implemented GetNamespacesInScope().

2004-08-03  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlCharacterData.cs,
	  XmlDocument.cs,
	  XmlNodeChangedEventArgs.cs : 
	  Implemented XmlNodeChangedEventArgs.OldValue and .NewValue.

2004-08-03  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : implemented settings-less Create().
	* XmlWriterSettings.cs : added some comments.

2004-07-29  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : implemented WriteNode(XPathNavigator, bool) 
	  incompletely, using XPathNavigator.ReadSubtree().

2004-07-29  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : Implemented new 2.0 virtual members that used to be
	  abstract in 1.x. Implemented ReadSubtree().

2004-07-28  Lluis Sanchez Gual  <lluis@novell.com>

	* XmlTextReader.cs: Stop parsing when a null character is found.

2004-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : Implemented missing MoveToNextSibling() and
	  MoveToDescendant().
	* XmlTextReader.cs : Added missing ReadValueAs() override (hmm...
	  are they really worth overriding?)

2004-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : Added new WriteStartAttribute(string).

2004-07-28  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : Added 2.0 VerifyNMTOKEN() and internal WriteBinHex().
	* XmlQualifiedName.cs : Added internal static Parse().
	* XmlReader.cs : use XmlQualifiedName.Parse().
	* XmlTextWriter.cs : use new XmlWriter.WriteNameInternal() etc.
	* XmlWriter.cs : Added 2.0 Settings and WriteFromObject().
	  Implemented 2.0 virtual methods that used to be abstract in 1.x.

2004-07-26  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlReader.cs : Implemented ReadValueAsXxx() except for
	  ReadValueAsList().
	* XmlTextReader.cs : implemented them as well, just invoking 
	  base.ReadValueAsXxx ().
	* XmlWriter.cs : implemented some WriteValue() methods.

2004-07-21  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvert.cs : added internal ToBinHexString() (BTW according to
	  MSDN documentation it should be public).
	* XmlReader.cs : fixed one incorrect Create() overload. Added
	  LookupNamespace (string, bool) (public for 2.0, internal for 1.x).
	* XmlTextReader.cs : Mostly implemented IXmlNamespaceResolver
	  interface. Fixed HasLineInfo() access modifier on 2.0.
	* XmlNodeReader.cs : Mostly implemented IXmlNamespaceResolver
	  interface. Wrote common namespace node lookup method and rewrote
	  existing LookupNamespace().
	* XmlValidatingReader.cs : Fixed 2.0 IXmlLineInfo members' signatures.

2004-07-20  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNode.cs : When the argument node being inserted is the existing
	  document element, it should not result in an error (since it should
	  be first removed from document, thus no error should happen).

2004-07-16  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextReader.cs : Fixed several problems on ReadBase64();
	  Whitespaces should be ignored, and '=' was not skipped correctly.
	  It caused "unexpected end of document" error at immediate close tag.

2004-07-13  Atsushi Enomoto  <atsushi@ximian.com>

	* Added MonoFIXAttribute.cs

2004-07-13  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlWriter.cs : Added Create() stubs.
	* XmlWriterSettings.cs : Added missing property setters.
	* XmlValidatingReader.cs : added internal schemas setter.
	* XmlTextReader.cs : added internal XmlReaderSettings property setter.
	* XmlReader.cs :  Halfly implemented Create().
	* DTDValidatingReader.cs : author information was missing.

2004-07-11  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvertDateTimeOption.cs : it is NET_2_0.
	* IXmlNamespaceResolver.cs,
	  XmlNamespaceScope.cs : Compile it in .net 1.1 (as internal).
	* XmlNamespaceManager.cs : Implement IXmlNamespaceResolver.

2004-07-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlConvertDateTimeOption.cs : Forgot to change the content...

2004-07-09  Atsushi Enomoto  <atsushi@ximian.com>

	* ConformanceLevel.cs : Fixed integer value.
	* Added XmlConvertDateTimeOption.cs.
	* Removed XmlItemView.cs and XmlItemViewCollection.cs.

2004-07-09  Atsushi Enomoto  <atsushi@ximian.com>

	* IXmlNamespaceResolver.cs :
	  Fixed return value of GetNamespacesInScope().
	* IXmlDataEvidence.cs,
	  XmlReader.cs,
	  XmlTextReader.cs,
	  XmlValidatingReader.cs : fixed Evidence (it is not array anymore).
	* XmlReader.cs :
	  Implemented virtual indexers, QuoteChar, and Dispose() (2.0 stuff).
	* XmlNodeReader.cs,
	  In net_2_0, indexers vanished from XmlNodeReader.
	  In net_2_0, overriden QuoteChar vanished.
	* XmlReaderSettings.cs : set_NameTable is missing.
	* XmlTextReader.cs : Implemented ProhibitDtd.

2004-07-09  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttributeCollection.cs : In .net 2.0, it became sealed class.
	* IXmlDataEvidence.cs : not "Evidences" but "Evidence".
	* XmlInputStream.cs : new csc rejected implicit int->char cast.
	* XmlNamespaceManager.cs : In net_2_0, LookupNamespace(string) and
	  LookupPrefix(string) does not require argument string as atomized.
	  Added HasNamespace (string, bool).
	* XmlReader.cs : Added Settings and SchemaInfo properties.
	* XmlReaderSettings.cs : Added NameTable. Throw XmlException when
	  attempt to set Schemas.
	* XmlTextReader.cs : Fixed "Evidences" to "Evidence". new csc rejected
	  implicit int->char cast.
	* XmlValidatingReader.cs : Fixed "Evidences" to "Evidence".

2004-06-27  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs:
	  Close XmlReader only when it is created. This fixes bug #60809.

2004-06-18  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs, DTDReader.cs, XmlConvert.cs, XmlDocument.cs,
	  XmlException.cs, XmlParserInput.cs, XmlTextReader.cs,
	  XmlTextWriter.cs : Globalization.
	* XmlNode.cs : Fixed error message that confused node type.

2004-06-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : MoveToNext() should skip concatenating
	  text/cdata/whitespace nodes.

2004-06-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlInputStream.cs : Fixed encoding detection detected in xslt
	  standalone tests. Removed extraneous code.

2004-06-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Character range check is always done. It is only
	  character references for which check is not done when Normalization
	  is false.
	  A bit more kind error message for multiple document element error.
	* XmlTextWriter.cs : Check if character is valid and entitize when
	  it was invalid.

2004-06-09  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamespaceManager.cs : The error message was improper.
	  Fix for bug #59880.

2004-06-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlInputStream.cs: Initialize reads a larger buffer now when trying
	to guess the encoding.

2004-06-06  Atsushi Enomoto <atsushi@ximian.com>

	* NameTable.cs : Fixed incorrect hash computation. Thanks to Ben.
	* XmlTextWriter.cs : Fixed remaining LookupNamespace() atom problem
	  shown in xslt standalone tests.

2004-06-06  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : Improved indenting. For children of a mixed 
	  content element, it won't be indented.

2004-06-06  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs,
	  XmlDocument.cs : Close stream always.
	* XmlNodeReader.cs : don't expect atomized name in LookupNamespace().
	* XmlTextReader.cs : Namespace check was not done. Some tests depends
	  on this failure and to be fixed.

2004-06-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNamespaceManagre.cs : Fixed LookupNamespace() and LookupPrefix().
	  They require that names are *already* atomized.
	* XmlNodeReader.cs,
	  XmlTextWriter.cs : use safe overload of LookupXXX().

2004-05-30  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : Fixed version mismatch; ProhibitDtd should be
	  NET_2_0.

2004-05-29  Gert Driesen (drieseng@users.sourceforge.net)
	
	* XmlTextReader.cs: Added ProhibitDtd property for NET 1.1 to match
	public API in MS.NET 1.1

2004-05-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : Save() should indent only when PreserveWhitespace
	  is false. Fixed bug #59155.
	  Modified comment lines a bit.

2004-05-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : WriteRaw() looks to proceed WriteState to Prolog
	  (if it is Start). Fixed bug #59154.

2004-05-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : simplified ReadCharsInternal(); use ReadEndTag()
	  and don't bork against <foo></foo>. Also mofidied this method to skip
	  <foo/>. Fixed bug #59142.
	  Modified some comments on the code (FIXME->LAMESPEC et al).

2004-05-24  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : When sequential PE references exist, the reader only
	  expands the first one and in some cases the parser complaints the
	  content (such like expecting name character but found '%').
	  This fixes bug #58818.

2004-05-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : RemoveChild() should check null argument.
	  Normalize() was broken in some cases.

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* ConformanceLevel.cs : added.

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeChangedEventArgs.cs : the last patch looks true 
	  ONLY AFTER .NET 2.0.

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReaderSettings.cs, XmlWriterSettings.cs : NET_2_0 were missed.

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlFactory.cs,
	  XmlItemView.cs,
	  XmlItemViewCollection.cs,
	  XmlReaderSettings.cs,
	  XmlWriterSettings.cs : added new .NET 2.0 classes.

	* AsyncXmlTextWriter.cs,
	  IXPathChangeNavigator.cs,
	  IXPathEditor.cs,
	  IXPathNavigator.cs,
	  XmlChangeFilters.cs,
	  XmlInfoItemType.cs,
	  XmlNodeChangeType.cs,
	  XPathChangeNavigator.cs,
	  XPathDocument2.cs,
	  XPathDocument2ChangedEventAction.cs,
	  XPathDocument2ChangedEventHandler.cs,
	  XPathEditor.cs,
	  XPathNavigator2.cs : removed. (They are only in .NET 1.2)

	* XmlWriter.cs : added new NET_2_0 WriteElementString().

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeChangedEventArgs.cs : not properly inherited from EventArgs.

2004-05-17  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : Fixed ToString(TimeSpan) that didn't handle Hour 
	  correctly. This fixes bug #57786.

2004-05-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : explicitly mark as MonoTODO for XDR (not
	  supported).

2004-05-12  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs,
	  DTDReader.cs,
	  XmlDocument.cs,
	  XmlInputStream.cs,
	  XmlParserInput.cs,
	  XmlTextReader.cs,
	  XmlUrlResolver.cs : removed reference to Mono.Xml.
	  Made Mono.Xml.* classes internal.
	* XmlDocument.cs : output xml declaration for TextWriter output in Save()
	* XmlElement.cs : Name character check should be done in .ctor().
	* XmlNamespaceManager.cs : Removed dangerous internal .ctor()

2004-05-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNodeReader.cs : renamed ownerElement to ownerLinkedNode (text
	  node can be it as well) and added check for Attributes existence
	  in GetAttribute() and MoveTo*Attribute().

2004-05-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : comment not in the content state is indented.
	  This fixes bug #58247.

2004-05-07  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlTextWriter.cs: In WriteStartAttribute, when the prefix is xmlns and
	  the name is empty, convert it to a xmlns attribute.

2004-04-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs : don't use NET_1_0.

2004-04-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlComment.cs. XmlProcessingInstruction.cs : missing commits.

2004-04-24  Atsushi Enomoto <atsushi@ximian.com>

	W3C DOM compliant read-only check support (buggy part in MS.NET).
	* XmlAttribute.cs,
	  XmlCDataSection.cs,
	  XmlCharacterData.cs,
	  XmlDocument.cs,
	  XmlElement.cs,
	  XmlNode.cs,
	  XmlSignificantWhitespace.cs,
	  XmlText.cs
	  : CloneNode() - set read-only when copied node is read-only.
	    Check IsReadOnly on attempt to modify value.
	* XmlEntity.cs,
	  XmlEntityReference.cs : Set descendant nodes read-only.
	* XmlAttributeCollection.cs,
	  XmlNode.cs
	  : Fixed incompatible exception type.
	* XmlEntityReference.cs : CloneNode() should not pass an empty string
	  as its name.
	* XmlEntityReference.cs,
	  XmlProcessingInstruction.cs : Check XML name validity.
	* XmlText.cs : CloneNode() does not have to check children.

2004-04-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDeclaration.cs : More strict check on InnerText and Value.

2004-04-24  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs, XmlConvert.cs, XmlDeclaration.cs, XmlImplementation.cs,
	  XmlNode.cs : Culture independency fix.

2004-04-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlEntityReference.cs : Added XPathNodeType (just for workaround).
	  This should really fix bug #57248.

2004-04-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : MoveToFirstChild() failed when there is
	  only an EntityReference (not navigatable) child. Bug #57248 fixed.
	* XmlWriter.cs : Modified WriteNode() to use MoveToAttribute(int)
	  instead of WriteAttributes() only for MS.NET behavior compatibility.
	  This change makes SgmlReader usable (due to SgmlReader bug).

2004-04-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlParserContext.cs : Fixed .ctor() not to reference null namespace
	  manager. This fixes bug #56770.

2004-04-06  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : In ProcessDTDSubset(), 1)error message was 
	  generated with incorrect stream character, 2)entity nest check 
	  should not depend on line info which might not be supplied, 3)
	  empty PE should be skipped.
	* XmlParserInput.cs : use index for StringBuilder instead of calling
	  Remove() many times. This highly optimizes DTD parser.

	* XmlAttribute.cs : removed commented code.
	* XmlEntity.cs : removed unused field.

2004-04-05  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : (DTDAttributeDefinition) create ArrayList 
	  only when they are required.
	* DTDReader.cs,
	  XmlParserInput.cs : raw tag string now don't have to be kept, while
	  it cost so much. Removed unused code. 20% to 30% memory got saved.
	* XmlNotation.cs : removed unused code.
	* XmlTextReader.cs : Removed unused code. ReadString() now uses 
	  XmlReader's internal method. Fixed BaseURI to be conformant with
	  W3C XML InfoSet and (subsequently) xml:base specification (i.e. 
	  reflect xml:base attribute correctly).

2004-04-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : get_Value should return all children's value.
	* XmlCharacterData.cs : DOM's substring does not raise an error when
	  startIndex + count exceeds the length of Data.
	* XmlNamedNodeMap.cs : SetNamedItem() returns the new child when it
	  does not replace another named item.
	* XmlElement.cs : with related to the XmlNamedNodeMap change, 
	  SetAttributeNode() is required to fix as to return null when it does
	  not replace existing attribute.

2004-03-31  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : When this instance is created from xmlns 
	  attributes, it should be Namespace node.

2004-03-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadInnerXml() should progress reader when it is on
	  an empty element. This fixes bug #56064.

2004-03-27  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : In some places sequential parameter entity was
	  incorrectly skipped (and caused invalid result).

2004-03-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : MoveTo*Namespace() should not iterate
	  namespace nodes which has the same name as already-iterated nodes.
	  Also xmlns='' should not be selected, and once it appeared, default 
	  namespace should not be selected anymore.

2004-03-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlCharacterData.cs : ReplaceData() should reject negative integer
	  value for count argument.
	* XmlAttribute.cs, XmlAttributeCollection.cs, XmlNamedNodeMap.cs :
	  On RemoveNamedItem(), default attribute value should be restored.

2004-03-24  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttributeCollection.cs : Remove() should throw an exception when
	  target attribute is not included in the collection.
	* XmlDocument.cs : ImportNode() should reject null node.
	* XmlNode.cs : Fixed type of exception for invalid insertion.
	  It should throw an exception not only when the owner document of the
	  reference element is different but its parent element is different.
	  Some error message improvement.

2004-03-21  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadInnerXml() incorrectly tried to get output xml.
	  This fixes bug #55856.

2004-03-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : Fixed indentation on CDATA. This fixes bug #55828.

2004-03-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlImplementation.cs : HasFeature() returns true when strVersion
	  is null.

2004-03-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWhitespace.cs : Fixed WriteTo(). Whitespace nodes should be 
	  written regardless of document's PreserveWhitespace.

2004-03-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : Value should return concatenated string for 
	  sequential text nodes. Considered detached nodes, the result of 
	  MoveToParent() should be checked.

2004-03-15  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : ReadInnerXml()/ReadOuterXml() should not bork when
	  the reader is on EndElement. Patch by Jean-Marc Andre.

2004-03-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocumentNavigator.cs : as for namespace node "xml", MS.NET seems
	  to return attribute node. It affects on IHasXmlNode.GetNode() and
	  SelectNodes()/SelectSingleNode().

2004-03-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlImplementation.cs : fixity fix (I need NUnit runnable ;)

2004-03-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlImplementation.cs : forgot to commit (renaming internal case)

2004-03-04  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDocument.cs : Implementation should not return null.

2004-02-25  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriterOpenElement.cs : Reset() should reset _all_ fields.
	  This fixes indentation bug.

2004-02-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : Fixed bugzilla #54554 (incorrent end tag output).

2004-02-16  Atsushi Enomoto <atsushi@ximian.com>

	* DTDAutomata.cs,
	  DTDObjectModel.cs,
	  DTDReader.cs,
	  DTDValidatingReader.cs : made classes internal.
	* XmlDocument.cs : removed extra FIXMEs.
	* XmlNamedNodeMap.cs,
	  XmlResolver.cs,
	  XmlUrlResolver.cs : 
	  Fixed incorrect method signature.

2004-02-13  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs, DTDReader.cs, DTDValidatingReader.cs : 
	  say goodbye to sys.collections.specialized.
	  (replaced the classes in that namespace with ArrayList or Hashtable)

2004-02-12  Atsushi Enomoto <atsushi@ximian.com>

	* XmlReader.cs : For performance reason, XmlTextReader now uses
	  base ReadInnerXml() and don't store currentTag array unnecessarily.
	* XmlTextReader.cs :
	  - Fixed GetAttribute(int) that might cause index out of range.
	  - Now it consumes the text reader by reading blocks, as MS.NET does.
	    Modified GetRemainder(), PeekChar(), ReadChar() and so on.
	  - Now it doesn't create Value string for linked nodes, unless it 
	    is actually required.
	  - some code refactory.

2004-02-11  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs, XmlTextWriterOpenElement.cs :
	  Reduced creation of openlElement. It also saves much memory.

2004-02-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : ChildNodes should not create XmlNodeListChildren
	  every time. This fix heavily improved performance.

2004-02-10  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttributeCollection.cs : set owner element as parent on removal
	  events (though they are not "parent" in infoset or dom context)
	* XmlElement.cs : Don't remove attributes twice (raises extraneous
	  removal events).
	* XmlNamespaceManager.cs, XmlNodeChangedEventArgs :
	  Added NET_2_0 members.

2004-02-08  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : Limit external entity reference from DTD by 256.
	  foreach elimination.  DTDParameterEntityDeclaration should set Root.
	  Compute attribute default value without raising an error.
	  (for non-error reporting reader)
	* DTDReader.cs : Fixes for the above fixes. foreach elimination.
	* DTDValidatingReader.cs, NameTable.cs, XmlAttribute.cs,
	  XmlAttributeCollection.cs, XmlChar.cs, XmlConstruct.cs,
	  XmlDocumentFragment.cs, XmlDocumentNavigator.cs, XmlElement.cs,
	  XmlEntityReference.cs, XmlNamedNodeMap.cs, XmlNode.cs,
	  XmlText.cs : foreach elimination.
	* XmlDocument.cs, XmlSignificantWhitespace.cs, XmlWhitespace.cs :
	  foreach elimination. Removed unnecesary methods.
	* XmlTextReader.cs : code format refactory. Optimized some methods.
	  foreach elimination. Replaced Stack with string array.
	  Replaced StringBuilder with char array. Removed unnecessary methods.

2004-02-06  Atsushi Enomoto <atsushi@ximian.com>

	* DTDValidatingReader.cs : Fixed MoveToElement() that causes incorrect
	  IsDefault and Depth.
	* XmlAttribute.cs : Fixed .ctor(). Omit more namespace check when 
	  checkNamespace = false.
	* XmlNamedNodeMap.cs : Fixed SetNamedItem() to raise events.
	* XmlAttributeCollection.cs : Reimplemented InsertAfter to use
	  InsertBefore() (similar to XmlNode).
	* XmlDocument.cs : Added internal .ctor().  Reimplemented ReadNode()
	  as recursive, to make event order compatible.
	* XmlDocumentType.cs : Use SetNamedItem() (to raise events).
	* XmlElement.cs : Some refactory.  Fixed SetAttributeNode() with 
	  string name to block prefixed name.
	* XmlEntity.cs : Don't raise events on setting contents.
	* XmlNode.cs : Some refactory. Added raiseEvent argument to internal
	  InsertBefore().
	* XmlEntityReference.cs : related fix for XmlNode change.
	* XmlTextReader.cs : When the reader is on "attributes" of xmldecl or
	  doctype, Depth 1 lower than usual attribute. Split large function.

2004-02-05  Atsushi Enomoto <atsushi@ximian.com>

	* XmlConvert.cs : ToSingle() and ToDouble() should be culture 
	  independent. Patch by Rodolfo Campero.

2004-02-04  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs : Never expand entity on ScanEntityValue().
	* DTDValidatingReader.cs : XmlDeclaration node requires attributes
	  to be movable.
	* XmlAttribute.cs,
	  XmlDocument.cs,
	  XmlDocumentFragment.cs,
	  XmlElement.cs,
	  XmlEntity.cs,
	  XmlLinkedNode.cs,
	  XmlNode.cs,
	  XmlNotation.cs : 
	  Added namespace checking flag (required for such xml readers
	  that holds Namespaces=false). Now only XmlNode holds LastLinkedNode.
	* XmlDocumentType.cs,
	  XmlEntity.cs,
	  XmlEntityReference.cs : The children of Entity and EntityReference
	  became correct. They now holds parsed nodes, but it is only when
	  they are appended to the document.
	* XmlNode.cs : Modified insertBeforeIntern() to InsertBefore() with
	  boolean checkNodeType argument.  This method also tries to create
	  Entity's and EntityReference's child nodes.  Also added internal
	  RemoveChild() with boolean checkNodeType argument.
	* XmlNodeReader.cs : Quick hack for ResolveEntity() that became 
	  broken with these changes. use InnerXml as input to entityReader.
	* XmlTextReader.cs : XmlDeclaration's value LocalName should be the
	  same as Name.  The names of DTD's pseudo attributes should be empty.
	  Fixed DTD node's Depth (was regarded as attribute value's depth).

2004-02-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextReader.cs, DTDReader.cs : fixity fix ;)

2004-02-03  Atsushi Enomoto <atsushi@ximian.com>

	* ChangeLog : Fixed incorrect description that should be written for
	  DTDValidatingReader.cs but written for DTDReader.cs.
	* DTDValidatingReader.cs : Fixes described in the last DTDReader fix.

	* XmlChar.cs,
	  XmlConstructs.cs : Made XmlChar and XmlConstructs equivalent and
	  replaced XmlChar with XmlConstruts, renaming "XmlChar" to 
	  "XmlCharCompact" and "XmlConstructs" to "XmlChar". 
	  (XmlChar will be used for compact framework.)
	* DTDReader.cs, XmlParserInput.cs, XmlTextReader.cs : 
	  XmlChar related changes.  Support for surrogate pair.
	  It cannot use TextReader's peek anymore (for surrogate pair).
	  Character range check for PI value, attribute value, text
	* XmlTextWriter.cs : Change openElements from Stack to ArrayList.
	  (It calls ToArray() every time.)

2004-02-03  Alon Gazit <along@mainsoft.com>
	* XmlNamedNodeMap - now Item(int index) returns null for nodeList.Count
	  instead of throwing ArgumentOutOfRangeException.

2004-02-03  Atsushi Enomoto <atsushi@ximian.com>

	* XmlChar.cs : now GetPredefinedEntity() returns int and -1 for not
	  predefined entity names.
	* DTDObjectModel.cs : DTDxxxCollection now derives from 
	  - DTDCollectionBase that derives from DictionaryBase.
	  - "Literal value" and "replacement text" are handled differently.
	  - Throw XmlException when external entity could not be resolved. 
	  - Return ReplacementText for EntityValue.
	* DTDReader.cs :
	  - Support IXmlLineInfo.
	  - Fixed IGNORE section handling to be more strict.
	  - Compute replacement text on reading entity declarations.
	  - Don't expand char references before getting literal entity value.
	  - Check not allowed parameter entity inside internal subset.
	* DTDValidatingReader.cs :
	  - Added ValidateWhitespaceNode() to check whitespace's Validity
	    Constraints on external elementdecl and standalone document.
	  - When invalid data against its datatype was found, don't throw
	    parse error.
	  - Other code refactory.
	* XmlTextReader.cs : 
	  - Check for invalid Text pattern "]]>" should not depend on line 
	    info since it might not be supported.
	  - Check referenced character's validity (WFC).

2004-01-28  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : Added Normalization.  Parameter Entity declaration
	  should block invalid characters. (GEDecl should be fixed as well.)
	* XmlConstruct.cs : Should allow surrogate chars.
	* XmlNotation.cs : When prefix is empty (i.e. almost all cases) 
	  Name should not add ':'. Patch by Boris Kirzner.
	* XmlTextReader.cs : Modified private ReadCharacterReference() to
	  return the character (or -1 when should not return anything).
	  Now Text character reference are checked their character range.
	  Set DTDReader.Normalization as well as the reader itself.

2004-01-28  Atsushi Enomoto <atsushi@ximian.com>

	* DTDReader.cs : Make sure that parameter entities are not allowed
	  inside internal subset unless it appears as a markupdecl.
	* DTDValidatingReader.cs : ENTITY or ENTITIES type attributes must have
	  a value that indicates *unparsed* entity (i.e. NDATA required).

2004-01-26  Atsushi Enomoto <atsushi@ximian.com>

	* XmlTextWriter.cs : quick performance fix.
	  Reduced memoty allocation (e.g. 12% when writing XMLSchema.xsd.)

2004-01-26  Atsushi Enomoto <atsushi@ximian.com>

	* DTDObjectModel.cs :
	  - DTDNode's BaseURI should not always refer to that of DTD's.
	  - Use absolute URI's .ToString() instead of AbsolutePath.
	* DTDReader.cs : Throw XmlException for illegal character references.
	* DTDValidatingReader.cs :
	  - Share XmlResolver when the actual reader is XmlTextReader.
	    (MS's XmlValidatingReader and XmlTextReader do this.)
	  - Added its own EntityHandling property.
	* XmlValidatingReader.cs : Share XmlResolver with XmlTextReader.
	* XmlReader.cs,
	  XmlTextReader.cs : Added new NET_2_0 members.
	* XmlElement.cs : Removed extra lines (caused by XmlTextWriter bugs).
	* XmlEntityReference.cs : Forgot to add, the real fix by Boris.

2004-01-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlWriter.cs, XmlTextWriter.cs :
	  Several namespace related fixes.
	  - Current element's NamespaceURI should be immediately available
	    after the call of WriteStartElement() for LookupPrefix(), so 
	    AddMissingElementXmlns() only affects on output. This is 
	    now identified by shouldCheckElementXmlns field.
	  - Attribute's overraped xmlns should be ignored for LookupPrefix(),
	    Especially, when the owner element is written with the default
	    namespace. HOWEVER, the attribute should be *written*. This is
	    identified by shouldAddSavedNsToManager field.
	  - In AddMissingElementXmlns(), non-empty prefix namespace was not
	    checked user-written attributes.
	  - XmlWriter.WriteAttributeString() never supplies namespace URI for
	    xmlns attributes for other versions than NET_1_0. Instead, added
	    ns check logic in WriteStartAttribute() only with NET_1_0.
	  - WriteEndAttribute() should reject zero-length namespace for 
	    non-default xmlns declarations.
	  - LookupPrefix() should reject argument null and empty.

	(added 2004-01-24 : forgot to mention more)
	  - WriteAttributeString() w/o namespace should supply null, not ""
	  - Added .NET 1.2 members.
	  - Regard any name with "xml" prefix as in "namespace for XML".

2004-01-22  Atsushi Enomoto <atsushi@ximian.com>

	* XmlElement.cs : Reverted previous fix since it broke monodoc web 
	  service.

2004-01-20  Atsushi Enomoto <atsushi@ximian.com>

	* XmlNode.cs : When adding a node to child list, it should reject its
	  ancestors. Patch by Boris Kirzner.
	* XmlNodeReader.cs : Related fix to the fix above. It should not move
	  to children of XmlEntityReference nodes.
	* XmlTextWriter.cs : FixedWriteStartElement() not to write default
	  namespace when ns is null (while ns is "", it writes default ns).
	* XmlElement.cs : Fixed WriteTo() to call WriteStartElement(localName)
	  when NamespaceURI is an empty string.

2004-01-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlAttribute.cs : when set a value, it is no longer default 
	  (even if the value is the same as default value).
	* XmlAttributeCollection.cs : Remove() should recover default attribute
	  value to default, not specified value.
	  Patch by Boris Kirzner (modified a bit)
	* XmlDocument.cs : Reference to undeclared entity is not allowed in
	  Load(), while allowed in ReadNode(). Added such distinguishing logic.

2004-01-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlValidatingReader.cs : Throw exception only in case of errors.
	  Added NET_2_0 Evidences property.

2004-01-12  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlElement.cs : Fixed .ctor(). Default attribute was not treated as
	  Specified = false. Patch by Boris Kirzner.

2004-01-11  Atsushi Enomoto <atsushi@ximian.com>

	* XmlException.cs : Fixed incorrect .ctor signature.
	* XmlParserInput.cs : Fixed in sync with the above fix.

2004-01-08  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttribute.cs, XmlElement.cs : 
	  Fixed incorrect protected .ctor modification.

2004-01-08  Nick Drochak <ndrochak@ieee.org>

	* DTDValidatingReader.cs: Removed unused variable
	
2004-01-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamespaceManager.cs : Implemented .NET 1.2 methods that take
	  atomizedNames argument.
	* XmlTextReader.cs : Use new namespace manager methods.
	  Reduced NameTable.Add().
	* DTDObjectModel.cs : fixed incorrectly commented-out line.

2004-01-07  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlAttribute.cs, XmlDocument.cs, XmlElement.cs :
	  set_Prefix should atomize to name table.
	  Avoided extraneous atomization attempt a bit.

2004-01-07  Atsushi Enomoto  <atsushi@ximian.com>

	* DTDObjectModel.cs, DTDReader.cs, XmlSecureResolver.cs :
	  avoiding obvious exception.
	* DTDReader.cs, XmlTextReader.cs : Some optimization. 
	  Avoided extraneous PeekChar() and reduced name string creation.

2004-01-05  David Sheldon <dave-mono@earth.li>
  
  * XmlTextReader.cs: Fixed constructors taking string url to not
    loose the absolute part of the path.

2004-01-04  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlDocument.cs : Fixed Load() to set XmlResolver correctly. Patch
	  by Benjamin Jemlich.
	  Assure closing XmlTextReader which are internally used.

2004-01-03  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlTextWriter.cs : trivial character-case fix
	* XmlUrlResolver.cs : It downloads network stream content at 
	  GetEntity() call. You can try like below:
	    for (int i=0;i<100;i++) u.GetEntity(url, null, typeof(Stream));

2003-12-23  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlNamedNodeMap.cs : Fixed internal SetNamedItem(node, pos) to set
	  replacing node correctly. This fixes bug #52453.

2003-12-21  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs, XmlElement.cs, XmlNode.cs :
	  GetElementsByTagName() - Fixed bugzilla #52419, refactored, 
	  and moved private implementation methods to XmlNode class.

2003-12-20  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs :
	  Element's namespace should be escaped as usual attribute.

2003-12-18  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : Indentation between xmldecl and doctype.
	* DTDValidatingReader.cs : AttList null reference fix.

2003-12-16  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : Validity check and entity expansion were
	  incorrectly mixed.
	* DTDObjectModel.cs, DTDReader.cs, XmlInputStream.cs :
	  Going to remove XmlInputStream. XmlStreamReader might be replacable.

2003-12-15  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XPathDocument2ChangedEventHandler.cs : fixed incorrect argument.
	* Moved UpdateEventHandler.cs and XmlUpdateEventArgs.cs to sqlxml.

2003-12-15  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : BaseURI was broken. This fixes bug #52098.

2003-12-15  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlUrlResolver.cs : GetEntity() does not return direct network stream
	  that may hold up connection. Now it reads up all the content stream.

2003-12-12  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlAttributeCollection.cs,
	  XmlElement.cs : Fixed bug #51415.
	  When adding attribute to an element using Attributes, it failed.

2003-12-11  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : Fixed ReadNode() to call AppendChild() to document
	  after setting all attribute nodes. Modified ReadNode() to handle
	  Depth comparison and error handling (!= to <). It allows MS's
	  SgmlReader bug that returns incorrect Depth.

2003-12-11  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Fixed MoveToNextAttribute (and 
	  MoveToNextNamespace) that might result in NullReferenceException.
	  patch by Sanjay Gupta. This fixed bug #51941 (and possibly #51415)

2003-12-07  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlUrlResolver.cs : Update with recent System.Uri change. This fixes
	  bugzilla #51808 (patch by Jeroen Zwartepoorte, a bit modified).

2003-12-04  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : WriteComment() should block "--", not full "-->".
	* XmlDocumentNavigator.cs : Added null check in MoveToNextAttribute().
	  This may fix bug #51415.

2003-11-28  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs : set_Prefix checks value when existing is "xmlns".

2003-11-28  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlWriter.cs : patch by Gonzalo (I modified a bit). WriteNode()
	  shouldn't expect non-empty element content. This will fix bug #48287.

2003-11-28  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : When element's namespace should be overwritten by
	  one of its attribute, if exist as such. This fixes bug #51305.

2003-11-24  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : Fixed ReadContent() which may result in 
	  invalid additional Text node.

2003-11-24  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : 
	  On WriteProcessingInstruction(), ArgumentException() is expected ;-)

2003-11-24  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs :
	  WriteProcessingInstruction() should check name validity.
	  AddMissingElementXmlns() should allow namespace emission even if it
	  is identical to existing one.

2003-11-22  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : Fixed ReadInnerXml(). This fixes bug #51267.

2003-11-20 Eran Domb <erand@mainsoft.com>

	* XmlTextWriter.cs (WriteStartAttribute) : Check if the ket already exists in the newAttributeNamespaces table 
	  before trying to add it to the table.

2003-11-19  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : Replaced entity should not treat whitespaces
	  as significant.
	* XmlNode.cs : Removed extraneous MonoTODOs.

2003-11-17  Jackson Harper  <jackson@ximian.com>

	* XPathEditor.cs: .net 1.2 only
	
2003-11-17  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* AsyncXmlTextWriter.cs, IXPathChangeNavigator.cs, IXPathEditor.cs,
	  IXPathNavigator.cs, IXmlDataEvidence.cs, IXmlNamespaceResolver.cs,
	  UpdateEventHandler.cs, XPathChangeNavigator.cs, XPathDocument2.cs,
	  XPathDocument2ChangedEventAction.cs, 
	  XPathDocument2ChangedEventHandler.cs, XPathEditor.cs,
	  XPathNavigator2.cs, XmlChangeFilters.cs, XmlInfoItemType.cs,
	  XmlNamespaceScope.cs, XmlNodeChangeType.cs, XmlQualifiedNameTable,cs,
	  XmlQueryDialect.cs, XmlUpdateEventArgs.cs
	  : Added .NET 1.2 classes (for convenience of ObjectSpaces stubbing).

2003-11-02  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Fixed MoveToFirstChild() and MoveToNext()
	  to skip XmlEntityReference.
	* XmlTextWriter.cs : Fixed AddMissingElements() and 
	  WriteStartAttribute() not to emit extraneous xmlns.

2003-11-02  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : Skip multiple xmlns when element and any of 
	  attributes have the same xmlns values.
	  WriteEndElement() allows open attribute (calles WriteEndAttribute()).
	  Indentation should be inserted between ">" and "</xxx>" .

2003-11-02  Pedro Martínez Juliá  <yoros@wanadoo.es>

	* XmlConvert.cs: Only parse INF/-INF/NaN. Other Infinty or NAN
	numbers are parsed with the respective ::Parse method.

2003-11-01  Pedro Martínez Juliá  <yoros@wanadoo.es>

	* XmlConvert.cs: Revert my last change. INF and -INF must be
	processed here because Double::Parse and Single::Parse doesn't
	understand anything of parsing [-]INF.

2003-11-01  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : Save(Stream) should not close the stream.

2003-10-25  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDReader.cs, DTDValidatingReader.cs, XmlInputStream.cs,
	  XmlTextReader.cs : More cleanup.
	* XmlDocument.cs : Removed CheckName(). Code cleanup.
	* XmlElement.cs : .ctor() now adds default attributes (if required).
	* XmlAttribute.cs, XmlElement.cs, XmlEntity.cs, XmlEntityReference.cs,
	  XmlNotation.cs : Now uses OwnerDocument's NameTable.

2003-10-25  Pedro Martínez Juliá  <yoros@wanadoo.es>

	* XmlConvert.cs: Support for the sign in double and single. The
	processing of the infinites and nan numbers are more complex than
	comparing to "INF" so we must let Double::Parse and Single::Parse
	doing their job.

2003-10-25  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : Now it handles whitespace entity as
	  significant.
	* XmlConvert.cs : As to NIST testcases, exponential support on single
	  and double floating point numbers.
	* XmlValidatingReader.cs : If it IsDefault, then line number and line
	  position returns 0.

2003-10-25  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDReader.cs,
	  XmlConstructs.cs,
	  XmlTextReader.cs,
	  XmlWriter.cs : Fixed incorrect access modifier.
	* XmlTextWriter.cs : Imported state variable from XmlWriter.
	* DTDValidatingReader.cs : Removed extraneous MonoTODO.
	* XmlConvert.cs : Implemented ToTimeSpan().
	  Modified ToDateTime() to reuse the same array.

2003-10-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttributeCollection.cs : Fixed synchronization stuff.
	* XmlConvert.cs : Added two FromBinHexString() methods.
	* XmlTextReader.cs : Modified to use one of the above method.
	* XmlValidatingReader.cs : XsdValidatingReader.XmlResolver will be 
	  disabled (in the next commit), so resolver won' be set to it.
	  Attempt to validate against XDR now throws NotSupportedException.

2003-10-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlChar.cs : added WhitespaceChars, used in common.
	* XmlConvert.cs,
	  XmlDeclaration.cs,
	  XmlParserInput.cs,
	  XmlTextReader.cs,
	  XmlTextWriter.cs : String.Trim()
	* XmlConvert.cs : shifted XmlConstructs to XmlChar.
	* XmlTextReader.cs : Implemented Normalization.

2003-10-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNode.cs : GetPrefixOfNamespace() also contained a bug similar to
	  GetNamespaceOfPrefix() fixed at 2003-10-13.
	* XmlTextReader.cs : ReadBase64() should keep incomplete base64 block
	  which remained by previous call of this method.
	* XmlUrlResolver.cs : Added assertion for file Uri path's absoluteness.
	* XmlValidatingReader.cs : Notice about intention of XDR won't be
	  supported (at least in Mono 1.0).

2003-10-18  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : CloneNode() does not copy PreserveWhitespace.
	* XmlWriter.cs : Calling WriteNode() with XmlReader whose state is
	  XmlDeclaration now calls WriteProcessingInstruction(). This fixes
	  testcase XmlWriterTests.WriteNodeFullDocument().
	* XmlTextWriter.cs : Added LAMESPEC comments related to above.

2003-10-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : Fixed bugzilla #49607. Save() outputs XML 
	  declaration even though there is no XmlDeclaration child.
	* XmlTextReader.cs : Fixed Init() so that ResetState() should work.

2003-10-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : Implemented WriteSurrogateCharEntity().
	  Reverted my recent extraneous check in WriteStartAttribute().

2003-10-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNode.cs : GetNamespaceOfPrefix() should check Attributes existence.
	  And it should throw ArgumentNullException.

2003-10-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs : Fixed InnerText that did not removed its content
	  if there is two or more children.
	* XmlNode.cs : XmlNode.cs : Fixed bugzilla #49580 (1)to return "",
	  (2)not to compare NodeType for detached nodes, (3)optimization to
	  compare element's prefix.
	* XmlSecureResolver.cs : Removed extraneous members.

2003-10-09  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* Added DTDReader.cs. It is almost importation of XmlTextReader.
	* DTDObjectModel.cs :
	  - More .NET-ism. Properties took place of fields.
	  - Imported PE set from XmlTextReader. Added location info.
	  - Added DTDEntityBase common to PE and GE.
	  - More correct text declaration handling with new XmlTextReader.
	* DTDValidatingReader.cs :
	  - Now uses entity resolving XmlTextReader to validate attributes
	    correctly. Implemented standalone
	  - Standalone and default related validity constraints check.
	* XmlImplementation.cs: Implemented HasFeature().
	* XmlNode.cs : Implemented Supports().
	* XmlNodeReader.cs : Modified to use XmlTextReader.SkipTextDeclaration()
	* XmlParserInput.cs : Removed extraneous members.
	* XmlTextReader.cs :
	  - All DTD related functionality now goes to DTDReader.cs
	  - It became old simple TextReader input style.
	  - Implemented GetRemainder().
	  - Implemented ReadBase64(), ReadBinHex() and ReadChars(), using 
	    additional new private method ReadUntilEndTag().
	  - Removed incomplete MaybeTextDecl and added SkipTextDeclaration().
	    ReadXmlDeclaration() now became simple.
	  - More strict entity reference check at SetEntityReferenceProperty()
	  - Removed extraneous members.
	* XmlWriter.cs : WriteNode(XmlNodeType.None) does not raise error.

2003-10-09  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: when we get an unexpected EOF in ReadContent, set
	the state before throwing the exception if depth > 0.

2003-10-04  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs : Removed extraneous MonoTODO.
	* XmlTextWriter.cs : Implemented WriteBinHex() and WriteChars().
	  WriteStartElement() and WriteStartAttribute() should ignore Prefix
	  if namespace uri is not specified.

2003-10-04  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentFragment.cs,
	  XmlElement.cs,
	  XmlEntityReference.cs : Removed extraneous MonoTODO.
	* XmlNode.cs : Implemented Normalize().
	* XmlNodeReader.cs :
	  - AttributeCount and HasAttributes should return its owner element's
	    value, to be consistent with XmlTextReader.
	  - Fixed Depth to reflect correct attribute/attribute-value iteration.
	  - simplified ownerElement and HasValue.
	  - Prefix won't return null.
	  - MoveToElement() should also work against attribute value nodes.
	* XmlTextReader.cs : MoveToElement() should return false if it is
	  positioned at element itself.

2003-10-04  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : Improved SignificantWhitespace handling.

2003-10-01  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSecureResolver.cs : Implemented basic feature.

2003-10-01  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlUrlResolver.cs : Should work with null type argument.

2003-10-01  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlTextWriter.cs : An attribute can require a prefix for the default
	  namespace, so we need to store the prefix as well as the namespace.

2003-09-30  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : Simplified to use 
	  XmlSchemaUtil.GetParserContext().
	* XmlValidatingReader.cs : ValidationType.Auto should always use
	  XsdValidatingReader because xsi:schemaLocation might be used.

2003-09-30  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : Attribute value token properties were incorrectly
	  set by the linked node.

2003-09-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Fix for bugzilla #48931. MoveToRoot() now
	  considers such case that target node was not adapted to the document.
	* XmlNamespaceManager.cs : GetEnumerator() missed the last pair.
	* XmlTextWriter.cs : use 'as'  instead of 'try..catch'.

2003-09-25 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlNode.cs (XPathNodeType): Give more useful debugging message.
	* XmlDocumentNavigator.cs (MoveToPrevious): Needs same checks as
	in MoveToNext.

2003-09-23  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNamespaceManager.cs: Rewrote PopScope() because its namespace
	  recovery was still not enough. Fixed GrowScopes() (incorrect index).

2003-09-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : 
	  - Fix for bugzilla #48337 (containing Ben's advice on that).
	  - Added internal XmlTokenInfo classes. Nodes are now handled as token 
	    objects (linked node, attributes and attribute values). Most of the
	    node state properties and iterating methods are changed to refer to
	    the token classes (except for value builder availability). Removed
	    fields which are never used. CompileDTDSubset() is changed in
	    reflection to nodeType field removal.
	  - Fixed Depth that should vary in moving between attributes and/or
	    reading attribute values.
	  - LineNumber and LinePosition now returns more correct location.
	  - Fixed Value that should still return true if its value is an empty
	    attribute value string.
	  - EntityValue is checked WFC constraints even thoug it is not used.
	  - All .ctor() now initializes ReadState as Initial.
	  - Read() should be available for attribute value constructor.
	* XmlAttribute.cs : set_InnerXml() now calls reader's Read().

2003-09-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNamespaceManager.cs: PopScope() must retain those namespaces which
	  are added in the scope before PushScope() was called.

2003-09-20 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlNamespaceManager.cs: Rewrote. Uses arrays, rather than linked
	lists and removes uses of Hashtable. Results in huge speed gains.

2003-09-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlConvert.cs: NaN.ToString () != INF.

2003-09-14  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlTextWriter.cs: Attributes that have a namespace must be always
	  prefixed.

2003-09-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriterOpenElement.cs : Changed to receive prefix and localName
	  in .ctor().
	* XmlTextWriter.cs : Changed to use above XmlTextWriterOpenElement.
	  Changed xmlns adding scheme. In detail, 1) WriteStartElement does not
	  add Namespaces immediately, but adds at AddMissingElementXmlns so 
	  that we don't have to have extra check than namespaceManager's
	  LookupPrefix(). 2) Removed writtenAttributes for performance reason
	  since it is no more required.

2003-09-10  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : patch by Jonathan Hogg. Fixed CreateAttribute()
	  that handled xmlns attributes inproperly.

2003-09-08  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNamespaceManager.cs : GetEnumerator() should return all of the
	  available pairs (of prefix and namespace).
	* XmlQualifiedName.cs : Quick fix for NullReferenceException in case
	  of name (or ns) is null. (The description of the immediate previous 
	  changes will be inserted below.)
	* XmlTextWriter.cs : Fixed WriteDocType(). Removed CheckValidName().
	* XmlUrlResolver.cs : Changed not to call WebClient.Dispose() which
	  will release resources it had allocated.

2003-09-01 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlDocument.cs (Save): use the encoding of the document, if
	available.

2003-08-24  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlValidatingReader.cs : Implemented SchemaType. Added support for
	  ValidationType.Schema. Added support for XmlResolver. Fixed 
	  ReadTypedValue() not to consume EndElement.

2003-08-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Fixed MoveToFirstNamespace() that arose
	  infinite loop.
	* XmlNamespaceManager.cs : Renamed AtomStrEq to AtomicStringEquals.
	  Commented out Console.Error.WriteLine().
	* XmlUrlResolver.cs : Fixed ResolveUri() and GetEntity() to support
	  escape and unescape for relative URI string.

2003-08-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlParserContext.cs: Make each context inherit next.

2003-08-18 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlChar.cs (IsWhitespace): Spare enumerator allocation.
	* XmlTextWriter.cs (WriteWhitespace): Enumerators are very high in
	fat, use low-fat loops instead. Even better, call the function
	inside XmlChar for code reuse.
	* HighWaterStack.cs (added): New class that acts like a Stack, but
	helps with memory allocation.
	* XmlNamespaceManager.cs, XmlParserContext.cs: Rewrote to use
	HighWaterStack.
	* XmlTextReader.cs: Remove orderedAttributesEnumerator variable,
	use a variable that stores the position in the ArrayList.
	
2003-08-18 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XmlTextWriter.cs: Begin diet. String.Format has too much
	saturated fat, lets replace with the fat-free .Write ()
	calls. Effects best seen when Paolo's StreamWriter patch is
	applied.

2003-08-14  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeReader.cs : Fixed ReadAttributeValue() that might result in
	  vanishing current node.

2003-08-14  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : Added SchemaType.
	  Read() Assures to return to element.
	* DTDObjectModel.cs : Removed DTDEntityDeclaration.BaseURI.
	* XmlReader.cs : ReadString() should be virtual in NET_1_1.
	* XmlTextReader.cs : 1) Depth should consider Attribute and its values.
	  Introduced insideAttribute field to support them.
	  2) ReadAttributeValue() should consider empty string.
	* XmlValidatingReader.cs :
	  Fixed several properties which premised as if it was already read.
	  Encoding and Namespaces now throws NotSupportedException for other
	  than XmlTextReader.
	  Implemented ReadTypedValue() based on IHasXmlSchemaInfo.SchemaType.

2003-08-10  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlInputStream.cs : Reverted CanSeek as to return false anyway.

2003-08-10  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDObjectModel.cs : added XmlResolver related members. Added
	  invalid entity recursion logic. Added encodingdecl check on textdecl.
	* DTDValidatingReader.cs : It now implements IHasXmlParserContext.
	* XmlChar.cs : IsPubidChar() should not allow TAB(&#9;).
	* XmlDocumentType.cs : 1) internal CreateDocumentType() was now changed
	  to receive DTDObjectModel to support other than XmlTextReader. 
	  2) Most of its public member is now based on DTDObjectModel.
	* XmlDocument.cs : 1) Synchronous change with XmlDocumentType.
	  2) ReadNode() now considers XmlParserContext's DTDObjectModel for
	  other than XmlTextReader (such as XmlValidatingReader).
	* XmlNode.cs : code cleanup only.
	* XmlParserInput.cs : added HasPEBuffer, used to check illegal nesting.
	* XmlTextReader.cs : 1) Illegal entity reference check logic was moved 
	  from ReadContent() to SetEntityReferenceProperties(). 2) Indentation
	  change on ReadEntityReference(). 3) ReadAttribute() now checks
	  reference to external entity reference. 4) Added textdecl encoding
	  check. 5) DTDObjectModel fields are now set correctly. 6) added
	  PERef markup nest check. 7) If PEDecl was not found, it might be WFC
	  violation, not only be VC violation. 8) ReadEntityDecl() now receives
	  its declared entity itself, and this method checks IsInternalSubset.
	* XmlValidatingReader.cs : 1) Added GetInternalPerserContext().
	  2) ValidationType.None should be the same as Auto, not DTD (in the
	  future it should keep xml schema's default values).

	Pending Stuff in XmlTextReader which breaks some NUnit tests;
	  1) SetEntityReferenceProperies() has check for illegal references.
	  2) ReadAttribute(bool) has similar check for illegal references.

2003-08-09  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDAutomata.cs : Fixed (modified or added) TryEndElement() of choice,
	  sequence and oneOrMore. Fixed DTDChoiceAutomata.TryStartElement().

2003-08-09  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : Checked and fixed all TryExpandPERef() invokation 
	  and supplied SkipWhitespace() as they needed. It broke monodoc.
	  Fixed ReadEntityValueDecl() to get correct value.

2003-08-08  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlInputStream.cs :
	  Fixed Initialize() that might result in incorrect buffer.
	  CanRead and Position should consider buffer (especially when the
	  stream was EOF).
	  CanSeek should use stream's CanSeek.

	* XmlChar.cs : added GetPredefinedEntity().
	* DTDObjectModel.cs :
	  - Modified ComputeDefaultValue() to use it.
	  - Fixed NormalizedDefaultValue not to expect parsed value as string.
	  - ResolveExternalEntity now detects invalid standalone specification.
	  - DTDParameterEntityDeclaration.Value is now changed to property and
	    keep its resolved value of literal value of external value using
	    new Resolve (XmlResolver) method (called only by XmlTextReader).
	* DTDValidatingReader.cs :
	  - It now handles entity-expanded Whitespace and SignificantWhitespace
	    correctly. Does not raise unexpected text not allowed error.
	  - Fixed MoveToAttribute()s to move internal reader correctly, and
	    should be able to move in other cases than on element node.
	  - On Read()ing document type and ResolveEntity(), it now sets
	    XmlResolver on text reader.
	  - On ID constraints check and type verification, it now uses
	    normalized attribute or its tokenized value(s).
	  - Fixed ValidateAttributes() to add default values when 
	    ValidationType is Auto.
	* XmlParserContext.cs : added internal Dtd setter.
	* XmlParserInput.cs :
	  InsertParameterEntityBuffer() should add surrounding whitespaces.
	  Removed unused code block.
	* XmlTextReader.cs :
	  - Modified ReadReference(), ReadAttribute() and Dereference() to use
	    XmlChar.GetPredefinedEntity().
	  - When returning entity reference, it checks extity declaration
	    existence in certain conditions.
	  - ReadAttribute() now skips general entity replacement on reading
	    entity value.
	  - ReadText() now handles whitespace texts as XmlNodeType.Whitespace.
	  - ReadXmlDeclaration() holds isStandalone, which might be used in
	    entity reference's well-formedness check.
	  - internal 'DTD' now uses XmlParserContext.Dtd.
	  - isInternalSubset was meaningless. Now uses input stack's Count.
	  - Added some required SkipWhitespace().
	  - Several parameter entity handling changes.  Added GetPEValue(name).
	    TryExpandPERef() now uses ImportAsPERef(). ReadParameterEntityDecl()
	    now uses its Resolve() when it was external PE.  Now it uses value
	    buffer instead of currentTag, to efficiently read (included) PE.
	    CompileDeclaration() now uses ImportAsPERef instead of ExpandPERef().
	    ImportAsPERef() simply inserts the value to currentInput.
	    ReadEntityDecl() also uses value buffer.   Removed non-used methods.
	  - Default attributes are now stored in normalized form.
	  - Dereference() now considers non-expanding predefined entities.
	* XmlValidatingReader.cs : now holds Schemas, and ValidationType.Auto
	  is more correctly supported.

	* XmlAttributeCollection.cs :
	  When removing default attribute, it immediately inserts the attribute.
	  RemoveAll() should consider default (not-removable) attributes.
	* XmlDocument.cs :
	  Should have its default XmlResolver. Added Internal Resolver.
	  Some Load() should use its XmlResolver.
	  ImportNode() should copy its children in node level, not value level.
	  It also have to consider not to copy default attribute on importing
	  XmlElement.
	* XmlDocumentType.cs : Now uses document's XmlResolver to read DTD.
	* XmlAttribute.cs,
	  XmlDocumentFragment.cs.
	  XmlElement.cs : use XmlResolver on InnerXml. Removed some MonoTODO.
	* XmlNodeReader.cs : GetInternalParserConext() should provide its DTD.
	  ResolveEntity() uses XmlResolver on entityReader.

2003-08-07  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDObjectModel.cs :
	  - Added validation error check (and AddError(), Errors).
	  - Fixed ComputeDefaultValue() to handle various references correctly.
	  - DTDEntityDeclaration.EntityValue became property, and added
	    LiteralEntityValue. The new one holds resolved value.
	    Added ResolveExternalEntity(). It now required root in .ctor().
	* DTDValidatingReader.cs :
	  - Now it handles namespaced attributes (as input to xsd validator).
	  - Added XmlResolver property as usual XmlReader.
	  - Added currentEntityHandling field so that it can stand changing
	    XmlValidatingReader's EntityHandling dynamically.
	  - FilterNormalization() now requires name for getting datatypes and
	    can stand for non-current attribute normalization.
	  - Splitted ReadContent() from Read() that can be called recursively
	    when expanding entities.
	  - Now handles Entity not found error *after* resolution of entities,
	    as MS.NET does.
	  - Read()ing DTD checks its Errors and raises validation error events.
	    In some situations, DTD parsing may detect VC error, not WFC error.
	    It also strictly checks NData existence.
	  - Handling of entity-resolved text is a bit changed and Read()ing
	    element, endElement, cdata now changed to switch collecting text
	    and collected text.
	  - content type ANY should allow texts.
	  - Added enumerated attribute validity check.
	  - Added Name/Names creation rule check for ID/IDREF/IDREFS.
	  - Added entity existence check for ENTITY/ENTITIES attributes.
	  - Added NMTOKEN creation rule check for NMTOKEN/NMTOKENS.
	  - Fixed to remove extraneous #REQUIRED check.
	  - Contributing default attribute is now only applied to the case
	    ValidationType is DTD or None.
	  - ResolveEntity() now handles external entities.
	    Added Mono.Xml.IXmlParserContext interface support.
	* XmlDocumentType.cs : Fixed to use BaseURI to build DTD model.
	* XmlTextReader.cs :
	  - Fixed ReadAttributeValue() to reset returnEntityReference.
	  - Added bool MaybeTextDecl only for ResolveEntity().
	  - Fixed ReadWhitespace(). In fact its value is considered even if it
	    is in the end of the XML.
	  - Fixed ReadXmlDeclaration(). Now skips text declaration.
	  - CompileDTDSubset() now checks IGNORE/INCLUDE section end balances.
	  - ReadContentSpec() should set OrderType = OR for mixed model.
	    Fixed to set content element name correctly.
	  - ImportAsPERef() now skips Text declaration.
	  - Type of enumerated default attributes shold be string.
	  - Undeclared PE error is now handled as DTD's VC error, not
	    XmlTextReader's WFC error.
	* XmlValidatingReader.cs : BaseURI should provide that of 
	  original XmlReader's when read was not started yet.
	  Fixed XmlResolver to delegate to DTDValidatingReader.

	* XmlAttributeCollection.cs : Acquiring attList declaration is
	  insufficient especially in case of lack of elementdecl.
	* XmlChar.cs : (Maybe this is compact than XmlConstructs.)
	  added IsWhitespace(),IsNCNameChar(),IsName(),IsNCName(),IsNmToken(),
	  IsPubid(). Copies IsValidIANAEncoding() from XmlConstructs.

	* XmlInputStream.cs : Removed "version" declaration check. It should
	  be done by XmlTextReader.

	* XmlNodeReader.cs : added internal GetInternalParserContext() and now
	  it can be used in XmlValidatingReader.ResolveEntity().
	  ResolveEntity() sets XmlTextReader.MaybeTextDecl.

2003-08-05  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs :
	  Added full ExpandEntities support for text node and entity reference
	  node (although require many usage tests). Almost all methods and
	  properties now have currentTextValue != null check, that field means
	  that there are cached (entity-resolved) text.
	  Implemented default attribute aware XmlLang and XmlSpace.
	* XmlNodeReader.cs : ResolveEntity() should not require DTD.

2003-08-03  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs,
	  XmlNodeReader.cs,
	  XmlReader.cs,
	  XmlTextReader.cs,
	  XmlValidatingReader.cs : fixed pragma USE_VERSION_1_0 to NET_1_0.

2003-08-03  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDObjectModel.cs : Added BaseURI (but not used yet).
	  DTDAttListDeclaration.ctro() now requires root dtd object model.
	* DTDValidatingReader.cs : Read() now expands EntityReference if
	  entity handling of validating reader is ExpandEntities.
	* XmlReader.cs,
	  XmlTextReader.cs,
	  XmlNodeReader.cs,
	  XmlValidatingReader.cs : Implemented "virtual" ReadInnerXml and
	    ReadOuterXml which are modified in MS.NET 1.1.
	* XmlConstructs.cs : added int version of IsValid, IsInvalid,
	  IsContent, IsMarkup and IsNCNameStart.
	  Fixed int version of IsXXX() to check array index range. 
	  Added IsValidName (string).
	* XmlTextReader.cs :
	  - Read() handles document with non document element as an error.
	  - ReadText() and ReadCharacterReference() checkes illegal characters.
	  - ReadEntityReference() checks name validity.
	  - ReadProcessingInstruction() rejects such name that starts with
	    "xml" ignoring case, and checks attributes more strictly.
	  - ReadDeclaration() rejects unrecognized kind of declaration.
	  - In many places, added "required whitespace" check in DTD markup.
	  - DTD content model now disallows mixing use of '|' and ','.

2003-08-02  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentFragment.cs : I missed to add it in relation to the
	  previous XmlParserContext patch. Similar to XmlAttribute/XmlElement.
	* XmlNodeReader.cs : removed some TODO attributes.
	* DTDValidatingReader.cs,
	  XmlValidatingReader.cs : Implemented ResolveEntity().

2003-07-31  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlParserContext.cs,
	  XmlAttribute.cs,
	  XmlElement.cs : Added internal Dtd and new internal XmlParserContext
	  .ctor() that takes DTDObjectModel. And then rewrote classes which 
	  uses DTD information. Changed DocTypeName, InternalSubset, PublicId
	  and SystemId to use DTDObjectModel.
	* DTDObjectModel.cs :
	  Added DTDObjectModel.InternalSubsetHasPEReference.
	  Added DTDEntityDeclaration.IsInternalSubset.
	* XmlTextReader.cs :
	  Added internal GetInternalParserContext (to build entity reader).
	  Added private isIntSubset to check if the DTD subset is internal or
	  external, which might affect well-formedness constraints.
	  Changed GenerateDTDObjectModel to return the resulting DTD model.

	* XmlEntityReference.cs : implemented BaseURI.
	* XmlNodeReader.cs :
	  - Implemented ResolveEntity() and CanResolveEntity(). In fact
	    it leads too many changes on almost all methods and properties,
	    since they now must be aware of entityReader.
	  - fixed ownerElement that might be used to return from attribute 
	    value to the element through parent attribtues.
	  - Now changed indexer to call GetAttribute() and moved actual logic
	    to the matching GetAttribute() methods.

2003-07-29  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNode.cs : fixed internal ConstructNamespaceManager() for InnerXml
	  not to create extraneous xmlns="".

2003-07-28  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs : (Read,ValidateAttributes,ReadAttributeValue)
	  attribute declaration should be got independently of elementdecl.
	* XmlAttribute.cs :
	  Added internal SetDefault() to mark as default.
	  Removed InnerText implementation that is just the same as XmlNode.
	* XmlDocument.cs : id shouldn't be removed from table at 'trying' to
	  get matching elements.  ReadAttributeNode() now sets default mark.
	* XmlElement.cs : WriteTo() should ignore default attributes.
	* XmlTextWriter.cs : shuold allow valid name char such as digits.

2003-07-27  Piers Haken	<piersh@friskit.com>

	* XmlQualifiedName.cs : fields should never be null

2003-07-27  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentFragment.cs : added XPathNodeType indicating Root.

2003-07-27  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs (GetIdenticalAttribute): restored OwnerElement.IsRooted

2003-07-27  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlLinkedNode.cs : added internal IsRooted.

2003-07-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs :
	  - Added ID support in ValidateAttributes().
	  - More refined ReadAttributeValue() support for non-expanding entity
	    situation
	  - It should handle LocalName, Name, Prefix, NamespaceURI and Value
	    correctly when the reader is on each of the value nodes of an
	    attribute. Now XmlDocument.ReadNode() should work well.
	* XmlDocument.cs :
	  - added idTable, AddIdenticalAttribute(), GetIdenticalAttribute() and
	    RemoveIdenticalAttribute()
	  - Implemented GetElementById().
	* XmlAttributeCollection.cs :
	  - added private ownerDocument property and replaced
	    ownerElement.OwnerDocument with it.
	  - Added AdjustIdenticalAttribute() and it is used in SetNamedItem().
	    It calls XmlDocument.{Add|Remove}IdenticalAttribute().
	  - Added RemoveIdenticalAttribute() and it is used in Remove().
	    (I also added AddIdenticalAttribute() but is not used.)

2003-07-26  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs (GetIdenticalAttribute): Temporarily remove test
	for OwnerElement.IsRooted to fix the build..

2003-07-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentType.cs :
	  modified private DTD to dtd and added internal DTD (the same thing).
	* XmlElement.cs :
	  Fixed SetAttributeNode() to check if specified attribute is already
	  set to the other element. In fact it is W3C DOM's specification but
	  MS.NET 1.0 failed to catch it.
	* XmlTextReader.cs :
	  ReadAttributeValue() should check if the value of the attribute is
	  already read when the whole value is entity reference.
	  Also, Name of text nodes should be "", not "#text"

2003-07-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs : .ctor() shouldallow localName "xml" (not prefix)
	  with http://www.w3.org/XML/1998/namespace.
	* XmlEntity.cs : patch by Aleksey Sanin. InnerText is now supported.
	* XmlNode.cs : InnerText should handle CDATA and whitespaces.
	* XmlTextReader.cs : Should allow " (#PCDATA)* " in ReadContentSpec().
	* XmlTextWriter.cs : Quick fix for accepting (and writing) same-named
	  attributes (as MS.NET does). It isn't good way and I may change it.

2003-07-24  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDObjectModel.cs : Added DTDEntityDeclarationCollection and
	  DTDNotationDeclarationCollection and replaced Hashtables with them.
	  Added NormalizedDefaultValue property for DTDAttributeDefinition.
	* DTDValidatingReader.cs :
	  - It now reads attribute values into value collection. 
	  - Renamed consumedDefaultAttribute to consumedAttribute, and
	    inContent to insideContent.
	  - GetAttribute() should allow reader's other node state than element.
	  - MoveToNextAttribute() should move when reader is placed other than
	    the first attribute.
	  - HandleError() now supports ValidationType.None (i.e. does nothing).
	  - ValidateAttribute() now collects and resolves attribute value 
	    entity references. (On the other hand, it doesn't support
	    EntityHandling.ExpandCharEntity.)
	  - NodeType shouldn't return Attribute after ReadAttributeValue().
	    Now only Text is supported, but must also support EntityReference.
	  - Add FilterNormalization() and partially support Normalization.

2003-07-24  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs :
	  Read() now handles parser context stuff (BaseURI, XmlLang and 
	  XmlSpace) correctly for an empty element.
	  Normalization property now doesn't throw an error. Will be used soon.
	* XmlValidatingReader.cs : added ValidationType.None support (wait for
	  the next DTDValidatingReader update for "not firing event handler).
	* XmlNodeReader.cs : jun. 30th commit seems wrong. It keeps its state.

2003-07-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs :
	  changed base class to XmlReader and implemented IXmlLineInfo members.
	  changed .ctor() argument from event handler to validating reader.
	  Removed some #if ... #else ... #endif blocks.
	  Added validation event support for Read() using HandleError().
	* XmlValidatingReader.cs : added internal OnValidationEvent().
	* XmlDocument.cs : ReadNode() now checks reader's state more strictly.

2003-07-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlUrlResolver.cs : applied BenM's patch for file uri problem
	  (bug #46610).

2003-07-15  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDValidatingReader.cs :
	  added DTDObjectModel support for non-XmlTextReader XmlReader 
	  e.g. XmlNodeReader (Read() method).
	* XmlDocument.cs :
	  added internal CreateDocumentType(XmlTextReader) and moved
	  ReadDoctypeNode() to XmlDocumentType.ImportFromDTD().
	* XmlDocumentType.cs :
	  added internal .ctor(XmlTextReader, document) and ImportFromDTD().
	* XmlTextReader.cs :
	  Renamed useSbForVal (valueBuilderAvailable), valSb (valueBuilder)
	  and currentSubset (DTD).
	  Added GenerateDTDObjectModel() (for independent doctype parsing).

2003-07-15  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs :
	  .ctor() should reject xml- or xmlns-prefixed node.
	* XmlNamespaceManager.cs :
	  added some xmlns validity check.
	* XmlNode.cs :
	  optimized GetNamespaceOfPrefix() and GetPrefixOfNamespace() by
	  avoiding XmlNamespaceManager creation.
	* XmlNodeReader.cs :
	  doctype node should return PUBLIC and SYSTEM for its indexer, 
	  and Value should be internal subset,

2003-07-12  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* DTDObjectModel.cs,
	  DTDValidatingReader.cs : Completely rewrote attribute handling.

2003-07-12  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs,
	  XmlElement.cs : Fixed CloneNode() for bug #46129.
	* XmlDocument.cs : Fixed MakeReaderErrorMessage that specified invalid
	  String.Format arguments, and basically XmlException.ctor(
	  IXmlLineInfo, message) seems good idea to use.
	* XmlTextReader.cs :
	  - Fixed .ctor(Stream, XmlNodeType, XmlParserContext) which had
	    required non-null context which don't have to exist.
	  - Added state check. Introduced 'currentState' and 'maybeTextDecl' 
	    (for external entity) and removed hasEnteredDocument. Added 
	    state-check logic to ReadStartTag(), ReadEndTag(), ReadText(),
	    ReadCData(), ReadDoctypeDecl() and ReadWhitespace().
	  - Replaced throw ReaderError() with throw new XmlException() and
	    fixed that some error hadn't thrown, only created.
	  - ResetState() should re-initialize existing private members other 
	    than some specified fields.
	  - Private AddAttribute() should check if the same-named attribute 
	    already exists.
	* DTDObjectModel.cs : Additive declaration for ATTLIST is availabe now.

2003-07-09  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlTextReader.cs : Implemented ResetState() method.

2003-07-06  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs : IsEmpty has removed attributes since it incorrectly
	  used RemoveAll().

2003-07-06  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : Load(string filename) should close its stream.
	  Small change for the latest DTDObjectModel change.
	* XmlTextReader.cs : Changed for the latest DTDObjectModel change (all
	  changed methods are only related to DTD stuff).
	  Now uses XmlSchemaDatatype for attribute type definition.
	* XmlValidatingReader : initial (limited) support for DTD validation.
	  It can handle only XmlTextReader.
	* DTDObjectModel.cs : changed radically for initial validation support.
	* added DTDAutomata.cs and DTDValidatingReader.cs.

2003-07-06  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs : Removed extraneous xmlns output support (it should
	  be done by XmlTextWriter).
	* XmlNode.cs : InsertBefore() now checks validity of the newChild (and
	  most of the changes are in fact indentation changes).
	* XmlWriter.cs : WriteAttributes() now can write entity references.
	  WriteNode() now writes xmldecl attributes correctly.
	  Removed namespaceManager and xmlns check logic, since it should be 
	  done by individual XmlTextWriter.
	* XmlTextWriter.cs : Patch by Jerome. AddMissingElementXmlns () has
	  written multiple xmlns declarations.
	  Moved namespaceManager from abstract XmlWriter.
	  Write{Start|End}Attribute() and WriteString() now checks xmlns 
	  attribute value. (MS.NET holds value only with this write method).

2003-07-04  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : removed xmlReader.Close() from Load(XmlReader).

2003-06-30  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Implemented MoveTo*Namespace() and 
	  essentially changed most of the property handling (e.g. removed attribute 
	  enumerator and it now became really cloneable).
	* XmlNodeReader.cs : ReadInnerXml() changes its state as error
	  when the method is called at Initial state.

2003-06-25  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Fixed IsEmptyElement. It treats <foo></foo>
	  as non-empty, and XmlElement's IsEmpty is designed as such.
	  Fixed MoveToFirst() and MoveToNext() not to move to xmldecl nor 
	  doctype node. 
	* XmlNode.cs : Fixed XPathNodeType. It should throw an exception
	  instead of returning undefined enum value.
	  Modified some code comments.
	* XmlWriter.cs : Fixed WriteNode () to use WriteFullEndElement() 
	  when XmlReader's node is not at empty element or at EndElement. 
	  Fixed XmlDeclaration's standalone check.

2003-06-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : removed CRLFs. Fixed private InitializeContext()
	  to use known Uri way (used in XmlUrlResolver) instead of UriBuilder.

2003-06-20  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlInputStream.cs : quick fix for public ctor() BaseURI bug.

2003-06-20  Ben Maurer <bmaurer@users.sourceforge.net>
	
	* XmlTextReader.cs: Reduces memory allocation when the reader is
	not queried for some values.
	* NameTable.cs: Now uses a custom hashtable to implement. As a
	result, when Get (char[], int, int) is called, a string is only
	allocated if it is actually a new entry.
	(StrEqArray) Compares a string and a char[]
	(AddEntry) Adds a new entry to the hashtable
	(Entry) Represents a hashtable entry.

2003-06-20  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlUrlResolver.cs : several ResolveUri() fix. e.g. for external URIs.

2003-06-16  Ben Maurer <bmaurer@users.sourceforge.net>
	* XmlUrlResolver.cs: really fixed #44231

2003-06-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeReader.cs : fixed MoveToNextAttribute(). In some cases 
	  this method set current node null.
	* XmlTextReader.cs : fixed GetAttribute (name, ns), which returned
	  String.Empty instead of null (expected value).
	* XmlTextReader.cs,
	  XmlUrlResolver.cs,
	  XmlInputStream.cs : fixed BaseURI problem (bug #44231).

2003-06-15  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeReader.cs : this [name] and this [name, ns] (and
	  GetAttribute() methods in turn) returns null instead of String.Empty.
	* XmlTextWriter.cs : WriteStartAttribute() should try to use specified
	  prefix before auto-generating prefixes.
	  Implemented WriteBase64().

2003-06-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeReader.cs : LookupNamespace () has refered invalid current
	  node for attributes. Modified to use private "document" property.

2003-06-10  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlTextWriter.cs: when adding an attribute with a namespace, a prefix must be automaticaly
	  generated, and a namespace declaration must be added. 
	* XmlWriter.cs: the namespace for the prefix xmlns must be http://www.w3.org/2000/xmlns/

2003-06-10  Zoltan Varga  <vargaz@freemail.hu>

	* XmlAttribute.cs: Accept a null prefix or namespaceURI.

2003-06-10  Duncan Mak  <duncan@ximian.com>

	* XmlDocumentNavigator.cs (GetNode): Make it implement
	IHasXmlNode.

2003-06-05  Lluis Sanchez Gual <lluis@ideary.com>

	* XmlTextWriter.cs : Fixed bug. After calling for example WriteStartElement ("pref","ln","ns");
	  a call to LookupPrefix ("pref") when still writting attributes should 
	  return "ns", and it didn't.

2003-06-02  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : quick fix for MoveToFirstChild().
	* XmlConvert.cs : fixed VerifyNCName() to check correctly.

2003-06-01  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentNavigator.cs : Compute document node one time.
	  MoveToFirstChild() should move to PIs and comments.

2003-05-30  Miguel de Icaza  <miguel@ximian.com>

	* XmlReader.cs (ReadStartElement): Improve error message.  

2003-05-28  Lluis Sanchez Gual <lluis@ideary.com>

	* XmlTextReader.cs : MoveToAttribute methods must set the enumerator to the right
	  position, since MoveToNextAttribute may be called after it. 
	  SetProperties(): attributes do not "inherit" the namespace.
	* XmlDocument.cs: ReadNode(), ReadAttributeNode(): must keep the current reader position.

2003-05-27  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* NameTable.cs : Add() sets the given name string interned.
	* XmlParserContext.cs : added internal PushScope() and PopScope() to
	  hold stacks of xml:base, xml:lang and xml:space.
	* XmlTextReader.cs : implemented XmlLang and XmlSpace (only as a
	  property for stacked attributes). Renamed Initialize() to Initialize-
	  Context(). Modified to use XmlParserContext.PushScope()/PopScope().

2003-05-26  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReader.cs: Little fix to WriteAttributeString()

2003-05-24  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs, XmlCharacterData.cs, XmlComment.cs, XmlDocument.cs,
	  XmlDocumentFragment.cs, XmlElement.cs, XmlEntity.cs, XmlLinkedNode.cs,
	  XmlNode.cs, XmlNotation.cs, XmlProcessingInstruction.cs, XmlReader.cs,
	  XmlSignificantWhitespace.cs, XmlText.cs, XmlWhitespace.cs:
	  Reverted the recent accessibility mistake (5/16).
	* XmlDocument.cs, XmlNode.cs : moved actual CreateNavigator() logic 
	  from XmlNode to XmlDocument.

2003-05-18  Lluis Sanchez Gual <lluis@ideary.com>

	* XmlQualifiedName.cs : Fixed bug in equality operator.

2003-05-18  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : patch by Jonathan Hogg. Flush() does not close
	  any open attributes or elements. WriteWhitespace() checks state and
	  closes start tag.  Fixed WriteStringInternal() to replace CR/LF chars
	  when it is called inside attribute value.
	* XmlException.cs : added .NET 1.1 .ctor.
	* added XmlSecureResolver.cs (only stubbing).
	* XmlAttribute.cs : set_InnerXml() should remove children.
	* XmlAttribute.cs,
	  XmlElement.cs,
	  XmlDocumentFragment.cs,
	  XmlDocument.cs : removed XmlTextReader reuse (It was buggy stuff).
	* XmlNode.cs : RemoveAll() should also remove all attributes.
	* XmlTextRader.cs : .ctor() for attribute value reader should add
	  quotations at initialization, since it requires quote chars.
	* XmlWriter.cs : WriteAttributeString() more correct xmlns check.

2003-05-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* changed XPathNodeType modifier to internal *protected* override.
	* XmlAttribute.cs : .ctor() now checks name validity e.g. xmlns.
	* XmlAttribute.cs, XmlElement.cs : set_Prefix checks NCName validity.
	* XmlAttributeCollection.cs : removed some incorrect TODO attributes.
	* XmlDocument.cs ; CreateAttribute(name) now auto-completes xmlns NSURI
	  when the argument is "xmlns".
	* XmlElement.cs : more compliant IsEmpty support. See also WriteTo().
	* XmlNamespaceManager.cs : added initial "xml" and "xmlns" namespaces.
	* XmlNode.cs : ser_InnerXml() throws InvalidOperationException.
	* XmlNodeReader.cs : LookupNamespace() refactory. Fixed ReadInnerXml()
	  not to set error state for non-started XmlNodeReader.
	* XmlTextReader.cs : fixed ReadAttributeValue() not to reset state.
	  BaseURI support. Fixed Initialize() to handle Attribute correctly.
	  SetProperty for attribute auto-completes xmlns NSURI.
	  Attribute and whitespace handling became more correct.
	  Don't parse external DTD if XmlResolver is null.
	* XmlTextWriter.cs : implemented WriteEntityRef().
	  WriteStartAttribute() checks if ns does not equal to that of xmlns.
	* XmlWriter.cs : trivial refactoring (WriteNode() xmldecl output).

2003-05-05  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlConvert.cs : IsInvalid() Now uses XmlConstructs.IsName(Start).
	  EncodeName() now correctly encodes invalid names.
	  Result string of ToString(DateTime) contains "fffffff".

2003-04-29  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs : fixed IsEmpty (removed private field isEmpty).
	* XmlNodeReader.cs : Fixed AttributeCount, each this[] (indexers),
	  MoveTo*Attribute(),
	  Fixed this[] to work correctly against XmlDeclarations.
	  Fixed ReadInnerXml() and ReadOuterXml() to call Read() correctly.
	  (which may prevent validations etc.)
	* XmlReader.cs,
	  XmlNodeReader.cs,
	  XmlTextReader.cs : Fixed ReadString() to be compliant with each
	  other.
	* XmlTextReader.cs : ReadInnerXml() now moves to next node correctly.

2003-04-27  Pedro Martínez Juliá  <yoros@wanadoo.es>

	* XmlNode.cs: ensure to get a valid Uri in BaseUri when loading the
	source document from a file.

2003-04-27  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs : fixed WriteTo() and WriteContentTo() to write
	  content EntityReference correctly.
	* XmlNodeReader.cs : many fix for EndElement handling (AttributeCount,
	  HasAttributes, indexers, MoveTo*Attribute() and Read() ).
	  Modified Skip() to call Read () explicitly.
	* XmlTextReader.cs :
	  Fixed ReadInnerXml() which ignored EndElement token in certain cases.
	  Implemented MoveToAttribute (local, ns), and modified GetAttribute()
	  in relation to this change.
	  Attributes for XmlDeclaration are now correctly set.
	* XmlTextWriter.cs : WriteRaw() is now different from WriteString().
	  Simplified WriteAttributes() for XmlDeclaration.

2003-04-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : fixed ReadInnerXml(). it was inconsistent with
	  Depth property fix.

2003-04-25  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : fixed Load() to set baseURI correctly.
	* XmlReader.cs : patch by Gonzalo. Fixed not to skip XmlDeclaration.
	* XmlTextReader.cs :
	  fixed Depth. When it's on StartElement, Depth was already incremented.
	  fixed private SaveProperty(), which moved away its saved properties
	  when MoveToElement was called repeatedly.
	* XmlTextWriter.cs : fixed WriteQualifiedName() to close start tag.
	* XmlWriter.cs :
	  WriteAttributes() refactory (for XMLDecl).
	  WriteNode() don't Read() when the reader is Initial state, let other
	  invokation to Read(). In case of Element, it should write entire
	  element. In case of Attribute, it shouldn't Read().
	  WriteStartDocument() should omit standalone decl. when there is no
	  explicit value.

2003-04-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlReader.cs: reverted last patch. It breaks System.Configuration 
	because 1. it considers XmlDeclaration as content and 2. always
	returns XmlNodeType.None.
	

2003-04-23  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* Added missing ChangeLog of 4/4/2003.
	* XmlTextWriter.cs : patch by Erik. fixed WriteQualifiedName.
	  (write prefix instead of ns.)
	* XmlInputStream.cs : file access mode fix (FileAccess.Read was missing)
	* XmlTextReader.cs : modified to call Read() instead of ReadContent().
	  (It may be required for decorated reader such as XmlValidatingReader.)
	  Changed Read() error message for mismatch end tag.
	* XmlDocument.cs : (ReadNode) friendly message for mismatch EndElement.
	* XmlReader.cs : Corrected misinterpreted MoveToContent() method.

2003-04-04  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : Load() now closes the given XmlReader.
	  Don't allow creation of XmlTextReader for Doctype. (workaround.)
	* XmlInputStream.cs : It now closes its internal stream explicitly.
	* XmlNode.cs : RemoveChild() bugfix for removing LastLinkedChild.
	* XmlNodeReader.cs : GetAttribute() bugfix for not-present attribute.
	* XmlParserInput.cs : added Close() method.
	* XmlReader.cs : MoveToContent() should (1) not Read in case of empty
	  element, and (2) MoveToElement() in case of attribute.
	* XmlTextReader.cs : Close() now actually closes source TextReaders.

2003-03-26  Duncan Mak  <duncan@ximian.com>

	* XmlTextWriter.cs (Write): A patch from Atsushi to fix
	prematurely ending the write, or something like that. It was
	causing us to chop off the end of the document when we're trying
	to generate XML Schemas.

2003-03-23  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : implemented ReadString().
	  fixed ctor(string, XmlNodeType, XmlParserContext) - don't raise
	  null reference exception when context is null.
	* XmlNodeReader.cs : fixed ReadString() - should ignore attributes etc.
	  fixed Read() - when positioned at EndElement, it didn't progress.
	  fixed HasAttribute - it didn't return false in all cases.
	  fixed Name and LocalName - only limited type of nodes return names.
	  fixed AttributeCount - in some cases it threw null ref exception.

2003-03-22  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextWriter.cs : WriteStartDocument doesn't set hasRoot=true, then
	  WriteEndDocument without root element now raises an error correctly.
	* XmlDocumentNavigator.cs : (MoveToFirstChild) fixed bugzilla #36672.
	  implemented BaseURI, NameTable, XmlLang, GetAttributes, GetNamespace,
	  MoveToAttribute.

2003-03-22  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs : RemoveAttribute now don't throws when specified
	  attribute does not exist.

2003-03-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNode.cs : add descriptions for some node type error.

2003-03-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeArrayList.cs, XmlNodeListChildren.cs : bugzilla #39920 fix.

2003-03-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDeclaration.cs : quick fix, not to use regex for set_Value.

2003-03-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : Fixed wrong notationdecl SYSTEM id read.
	* XmlInputStream.cs : Should allow versionless input stream entity.

2003-03-18  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* added XmlParserInput.cs for multi xml document sources.
	* added DTDObjectModel.cs (maybe temporary).
	* XmlTextReader.cs :
	  + fixed ctor to use XmlStreamReader. Allowed null XmlParserContext.
	  + Some members such as LineNumber, ReadChar now uses XmlParserInput.
	  + added support for Namespaces (namespace-ignorant parse available).
	  + added support for XmlResolver.
	  + replace SetReaderContext()/SetReaderFragment() with Initialize().
	  + use NameTable in CreateNameString.
	  + fixed ReadCData(). Now reads "]]]>" correctly.
	  + support for DTD parse.
	  + Read() now throws an error when it reached EOF while Depth > 0.
	* XmlAttribute.cs,
	  XmlDocumentFragment.cs,
	  XmlElement.cs : fix related to the changes of XmlTextReader.Initialize
	* XmlDocument.cs : ReadNode() now reads DocumentType.
	* XmlDocumentType.cs : implemented Entities, Notations, WriteTo().
	* XmlEntity.cs,
	  XmlNotation.cs : added override LastLinkedChild (for doctype node).
	* XmlNamedNodeMap.cs : Remove() raises an error if target is read only.
	* XmlElement.cs : bugfix for node removal of set_InnerXml.
	* XmlNode.cs : added insertBeforeIntern() derived from InsertBefore().
	  (to append child XmlEntity into XmlDocumentType correctly.)
	* XmlInputStream.cs : fixed to access file with FileAccess.Read.

2003-03-15  Duncan Mak  <duncan@ximian.com>

	* XmlElement.cs (Name): Only append prefix + ':' when prefix is
	neither String.Empty nor null. Thanks to Simon Guindon for
	reporting the bug and Jackson for fixing this bug with me.

2003-03-15  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlConstructs.cs : fix "int IsXXX()" to reject negative value.
	* XmlDocument.cs : simplify Load(string url) to use XmlTextReader.
	  fixed ReadNode(), it should call reader.Read() only on Initial state.
	* XmlInputStream.cs : Changed namespace. Added XmlStreamReader(stream)
	  and XmlStreamReader (string). Fixed XmlInputStream(url) not to use
	  System.Net.WebClient directly.
	* XmlParserContext.cs : baseURI never be null.
	* XmlTextWriter.cs : use WebName for Encoding instead of HeaderName.
	* XmlUrlResolver.cs : namespace change for XmlInputStream.

2003-03-12  Elan Feingold <efeingold@mn.rr.com>

	* XmlTextReader.cs: When throwing a ReaderException, show what
	character was the culprit

2003-03-05  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocumentFragment.cs, XmlElement.cs :
	  modified InnerXml (fragment type from Element to DocumentFragment).

	* XmlElement.cs : fixed WriteTo() ns check.
	* XmlNamespaceManager.cs : MS.NET allows Add() used two or more times.
	* XmlNode.cs : fixed ConstructNamespaceManager().

	* XmlConstructs.cs : added IsSpace, IsName, IsNameStart, IsNCName,
	  IsPubid with an int arg.
	* XmlReader.cs : changed to use XmlChar.cs (its role is as same as
	  XmlConstructs.cs).
	* XmlTextReader.cs :
	  improved error messages with line info.
	  / checking matching start and end tags.
	  / prevents the apperance of multiple root elements. (patch by Erik)
	  fixed and refactored ReadInnerXml() and ReadOuterXml()
	  changed to use XmlChar.cs.

	* XmlTextWriter.cs : changed to put element's xmlns at CloseStartTag ()
	  (It will help c14n implementation.)
	  / blocks multiple attribute output with element node.

2003-02-28  Alan Tam <Tam@SiuLung.com>

	* XmlConvert.cs: fixed the most ToXXX(string) and ToString(XXX)
	methods to make them compatible with the XML Schema Spec from W3C
	ToString(TimeSpan) is still outstanding

2003-02-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlDocument.cs:
	(Load (string)): hack to workaround some issues with Uri.Parse. Once
	Parse is fixed, remove the hack.

2003-02-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlQualifiedName.cs : fixed GetHashCode() to avoid null reference
	* XmlTextReader.cs : fixed ReadAttributeValue() to handle 
		entity reference, and some refactory.

2003-02-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlUrlResolver.cs : WebClient.Credentials was not implemented yet.

2003-02-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlInputStream.cs : added (also contains internal XmlStreamReader).
	* XmlDocument.cs : Load () now can specify URL using XmlUrlResolver,
		and can read non-UTF-8 stream.
	* XmlTextReader.cs : related to above stream fix.
	* XmlUrlResolver.cs : implemented GetEntity ().

2003-02-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextWriter.cs: implemented WriteRaw (char[], int, int).

2003-02-02  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : implemented QuoteChar.

2003-01-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNode.cs : implemented ReplaceChild.
	  removed DocElem checking at InsertBefore.
	* XmlNodeReader.cs : fixed ReadString and Read for correct node info.
	* XmlText.cs : implemented CloneNode and SplitText.

2003-01-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlCharacterData.cs: added XPathNodeType property.

2003-01-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextWriter.cs: throw an exception if WriteEndDocument is
	called without a prior call to WriteStartDocument.

2003-01-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeReader.cs : several fix to get more compatible with MS.NET.

2003-01-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNamespaceManager.cs : fundamental change of LookupPrefix to return
		null when no matching uri.
	* XmlElement.cs : removed unnecessary xmlns output.
	* XmlNode.cs : GetPrefixOfNamespace fix along with the change above.
	* XmlTextWriter.cs : LookupPrefix and WriteStartElementInternal fix 
		along with the change above, and moved timing of 'xmlns' output 
		to CloseStartElement.
	* XmlWriter.cs: modified WriteStartAttribute, same as yesterday.

2003-01-18  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlWriter.cs: modified WriteStartElement (see test for detail).
	Added WriteNode.

2003-01-13  Ville Palo <vi64pa@koti.soon.fi>

	* XmlDocument.cs: Added CheckName () method to check names validity.
	
2003-01-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs:
	(ReadOuterXml): use Depth property which return elementDepth, not depth.

2003-01-11  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs : (by ville) XmlElement.set_InnerText event bugfix.
	* XmlTextReader.cs : some fix for ReadOuterXml().

2003-01-08  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : bugfix for attributes related to creation of 
	  XmlAttribute *node*.

2003-01-08  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlTextReader.cs : bugfix for attribute values which have entity
	  references.

2002-12-28  Ville Palo <vi64pa@koti.soon.fi>

	* XmlDocument.cs: XmlTextWriter.Formatting == Indented when 
	calling Save () -methods.
	
2002-12-28  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlNodeReader.cs : primitive reading implementation.

2002-12-28  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs : quick fix for the incomplete patch of #35308 below.

2002-12-28  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : removed inconsistent line-feed output.
	* XmlElement.cs, XmlTextWriter.cs :
		fixed for bugzilla 35308 (default ns output)
	* XmlWhitespace.cs : limited output only when preserving whitespace.

2002-12-24  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlAttribute.cs, XmlDocument.cs, XmlTextReader.cs:
		Implemented XmlTextReader.ReadAttributeValue().
		Added internal ReadAttributeNodeValue().
		Fixed XmlAttribute.InnerXml to use these methods.
	
	* XmlDocument.cs, XmlDocumentFragment.cs, XmlElement.cs, XmlNode.cs:
		Implemented XmlDocument.ReadNode() and removed ConstructDOM().
		Other changes are replacing them.

2002-12-24  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs: patch by Ville (fixed default PreserveWhitespace)

2002-12-21  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlElement.cs, XmlTextWriter.cs, XmlWriter.cs:
		patch by JD Conley <jconley@winfessor.com>.
		(Fix for xmlns attribute output.)

2002-12-05  Ville Palo <vi64p@koti.soon.fi>

	* XmlQualifiedName.cs: Little fix to ToString () -method

2002-12-04  Tim Haynes  <thaynes@openlinksw.com>

        * class/System.XML/System.Xml/XmlElement.cs: Made more refined
        checks on attributeNode to fix 32262.

2002-12-03  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs (CreateNavigator(XmlNode)) : reverted
	* XmlTextWriter.cs (WriteStartElementInternal):
	  fixed when default namespace was specified, all descendants
	  fail to omit the default namespace declarations.
	* XmlAttribute.cs,
	  XmlDocument.cs,
	  XmlNode.cs (internal XmlLang/XmlSpace) : implemented(defined)
	* XmlAttribute.cs,
	  XmlDocumentFragment.cs,
	  XmlElement.cs (set_InnerXml): now uses XmlLang/XmlSpace
	* XmlElement.cs (set_IsEmpty) : implemented
	  (WriteTo) : removed my improper indenting (Writer already done)
	* XmlNode.cs (BaseURI) : fixed if ParentNode is null, NullPointerEx
	  (ConstructDOM) : implemented when xmlReader isn't XmlTextReader
	...and renamed XmlDocument.ConventionalParser to ReusableReader ;-)

2002-12-01  Atsushi Enomoto  <ginga@kit.hi-ho.ne.jp>

	* XmlNode.cs (RemoveChild):
		bugfixed when XmlNode is Document OwnerDocument is null
	* XmlDeclaration.cs (Value):
		bugfixed regular expression pattern.
	* XmlDocument.cs (CreateNavigator): bugfixed access modifier.

2002-11-24  Duncan Mak  <duncan@ximian.com>

	* XmlImplementation.cs (HasFeature): Fixed a typo. Thanks for
	Fabricio Barros Cabral (fx) on #mono for spotting it. This is his
	first patch to Mono! ;-)

2002-11-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlNode.cs:
	(AppendChild): readded refChild != null condition before throwing
	"cannot insert this node in this position" exception. There's probably
	a better solution. Fixes #34191.
	(RemoveAll): changed following Atsushi instructions.
	

2002-11-13  Duncan Mak  <duncan@ximian.com>

	* XmlElement.cs (IsEmpty): A temporary check-in to keep gtk-sharp
	compiling.

2002-11-14  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs : unified all constructors, added ConventionalParser,
		implemented CloneNode() and CreateEntityReference(),
	* XmlEntityReference.cs : set_Value, WriteContentTo, WriteTo
		set BaseURI to MonoTODO
	* XmlNode.cs : implemented PrependChild, modified ConstructDOM,
		bugfix InsertAfter (incorrect prepending) and InsertBefore
		(more than one DocumentElements hadn't caused errors)
	* XmlTextReader.cs : unified all constructors,
		added internal SetReaderContext(), SetReaderFragment()
		bugfix (syntax check of PUBLIC / getting internal subset)

2002-11-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	XmlAttribute.cs : set_InnerText, set_InnerXml, some check for set_Prefix
	XmlAttributeCollection.cs : (indexer) this[localName, namespaceURI]
	XmlCharacterData.cs : exchanged Data and Value
		(for processing events and inheritance)
	XmlDocumentFragment.cs : set_InnerXml
	XmlSignificantWhitespace.cs : set_Value
	XmlTextReader.cs : ReadAttributeValue

2002-11-04  Atsushi Enomoto <gigna@kit.hi-ho.ne.jp>

	XmlAttribute.cs: fixed missing internal 'OwnerElement''SetOwnerElement'

2002-11-03  Atsushi Enomoto <gigna@kit.hi-ho.ne.jp>

	* XmlAttributeCollection.cs : checks owner element.
		implemented CopyTo, InsertAfter, InsertBefore, Prepend,
		Remove, RemoveAt, SetNamedItem.
		removed some logics that sets 'Parent' (that should be null)
	* XmlDocument.cs : set_InnerXml, [PreserveWhitespace(incomplete)]
	* XmlDocumentFragment.cs : get_InnerXml, WriteContentTo, WriteTo
	* XmlElement.cs : implemented WriteTo, set_InnerText.
		Fixed WriteTo() to add xmlns:* attributes when
		writer.LookupPrefix() returned mismatching.
	* XmlNamedNodeMap.cs : compare not only name but localname and nsuri.
		Removing different prefixes for the same uri now runs correct.
		added SetNamedItem(XmlNode node, int position_to_insert).
	* XmlNode.cs : ConstructDOM (logically) creates XmlEntityReference,
		XmlWhitespace, and XmlSignificantWhitespace

2002-10-31  Atsushi Enomoto <gigna@kit.hi-ho.ne.jp>

	* XmlDocument.cs : implemented CreateDocumentFragment()
	* XmlElement.cs, XmlLinkedNode.cs :
		moved LastLinkedChild from XmlElement to XmlLinkedNode.
	* XmlEntityReference.cs : must throw NotImplementedException.
	* XmlNode.cs :
	      + implemented InsertBefore() and then implemented InsertAfter()
		and modified AppendChild() to call it.
	      + added logic to check ReadOnly, parent document equivalence,
		and inserting any 'content' before/after DocumentElement.
	      + implemented Clone() [it is equals to CloneNode() by MS doc.]
	      + added logic in RemoveChild() to check parent of oldChild.
	      + fixed ConstructNamespaceManager() to internal only.

2002-10-29  Atsushi Enomoto <gigna@kit.hi-ho.ne.jp>

	* XmlAttribute.cs : add internal 'IsDefault' property
			    (equals to !Specified)
	* XmlImplementation.cs : added 'internalNameTable' property.
	* XmlDocument.cs :
	    + now allows "" for 'standalone' in CreateXmlDeclaration.
	    + implemented 'Implementation' property and constructor with it.
	    + added logic for appending name table (but still no use)
	    + implemented property 'DocumentType'
	      (but without internalSubset parsing. wait for next update.)
	* XmlNode.cs :
	    + modified AppendChild() and RemoveChild() to support fragment.
	    + modified AppendChild() to remove newChild from its parent
	      when newChild is already in the other place.
	    + modified RemoveChild() to set parentNode null.
	    + modified ConstructDOM() to create DocumentType,
	      and fixed access modifier ('internal protected' to 'internal')
	* XmlLinkedNode.cs : fixed 'NextSibling' to return null
		when its parent is null.
	* XmlDocumentFragment.cs : added internal override 'LastLinkedChild'
		property to enable AppendChild() for this class.
	* XmlTextReader.cs : appended private publicId and systemId fields.

2002-10-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: make it work when the underlying Stream is not
	'seekable'.

2002-10-26  Piers Haken <piersh@friskit.com>

	* XmlNode.cs: add virtual property XPathNodeType
	* XmlAttribute.cs:
	* XmlComment.cs:
	* XmlDocument.cs:
	* XmlElement.cs::
	* XmlProcessingInstruction.cs:
	* XmlSignificantWhitespace.cs:
	* XmlText.cs:
	* XmlWhitespace.cs: implement XPathNodeType property
	* XmlDocumentNavigator.cs: use XPathNodeType property instead of switch

2002-10-26  Piers Haken <piersh@friskit.com>

	* XmlDocumentNavigator.cs: return invalid XPathNodeType (-1) for unknown node types.

2002-10-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: don't increment depth for entity references.

2002-10-22  Tim Haynes <thaynes@openlinksw.com>

	* - Fixed the duplication of xmlns:xx = yy when serializing the
	XML for serialization
	
	Fixed the unnecessary parsing/serializing when adding assemblies
	for serialization 

	Avoided setting the XmlNode.InnerXml property
	(as it's not implemented) 

	Fixed the usage/implementation of
	XmlElement.GetElementsByTagName()
	
2002-10-21  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs:
	* XmlElement.cs:
	* XmlNode.cs:
	* XmlTextReader.cs: Implementation for XmlNode.InnerXml from
	Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>.

2002-10-18  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs: Applied a patch by Atsushi Enomoto
	<ginga@kit.hi-ho.ne.jp>.

2002-10-12  A.Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs (ImportNode): Implemented

2002-10-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlDocument.cs: one more Load method implemented.
	* XmlTextReader.cs: Depth now works.

2002-09-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlConvert.cs: IsInvalid is now internal.
	* XmlNamespaceManager.cs: implemented RemoveNamespace
	* XmlTextReader.cs: return BaseURI and Encoding from the parser.
	* XmlTextWriter.cs: implemented WriteName and WriteNmToken.

2002-09-19  Matt Hunter <mahunter@tconl.com>

	* XmlElement.cs: Implementing SetAttributeNode(localName,namespaceURI)
	* XmlAttributeCollection.cs: Implemented Append (XmlAttribute) 
	  
2002-09-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlConvert.cs: finished implementation.
	* XmlTextReader.cs: fixed #30239.
	* XmlTextWriter.cs: fixed #30240.

2002-09-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: line and position begin with 1.

2002-09-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlException.cs: added a new internal constructor for IXmlLineInfo
	and output line and position info in Message.

	* XmlReader.cs: implemented missing bits.

2002-09-12	Piers Haken <piersh@friksit.com>

	* XmlDocumentNavigator.cs: implement MoveToId()

2002-09-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextWriter.cs: fixed bug #29886.

2002-08-26  Ravi Pratap  <ravi@ximian.com>


	* XmlAttribute.cs (InnerText): Implement getting this property.

	* XmlNode.cs (InnerText): Ensure that we append only values of
	text nodes.

2002-08-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlWriter.cs: made ws and namespaceManager protected. mcs has a bug
	that allowed compiling this.
	[ FIXME: filed bug #29435. mcs should have failed on this ]

2002-08-25  Tim Coleman <tim@timcoleman.com>
        * XmlNode.cs:
                Change CreateNavigator to not be virtual.
        * XmlElement.cs:
                Add set_Prefix and InnerText accessors.
        * XmlEntityReference.cs:
                Add set_Value accessor.
        * XmlTextWriter.cs:
                Make objects which should be private private.
        * XmlWriter.cs:
                Remove WriteStartElementInternal abstract definition.
        * XmlValidatingReader.cs:
                New stubs added.

2002-08-22  Jason Diamond <jason@injektilo.org>

	* XmlAttributeCollection.cs, XmlElement.cs: Implementation of RemoveAll
	and RemoveAllAttributes courtesy of Matt Hunter <xrkune@tconl.com>.

2002-08-22  Jason Diamond <jason@injektilo.org>

	* XmlElement.cs: Correction to previous GetElementsByTagName patch
	courtesy of Matt Hunter <xrkune@tconl.com>.

2002-08-22  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs, XmlElement.cs: Added implementation of namepsace
	qualified GetElementsByTagName courtesy of Matt Hunter 
	<xrkune@tconl.com>.

2002-08-19  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs, XmlElement.cs: Added implementation of 
	GetElementsByTagName courtesy of Matt Hunter <xrkune@tconl.com>.

2002-08-16  Jason Diamond <jason@injektilo.org>

	* XmlElement.cs: Fixed writing out qualified elements courtesy of
	Marcus Bürgel <marcus.buergel@gmx.de>.

2002-08-13  Tim Coleman <tim@timcoleman.com>
	* XmlTextWriter.cs:
		Partial implementation of WriteQualifiedName ().

2002-08-07  Kral Ferch <kral_ferch@hotmail.com>
	* XmlCharacterData.cs:  Implemented AppendData(), DeleteData(),
		InsertData(), and ReplaceData().  These methods fire the
		NodeChanging and NodeChanged events.
		
	* XmlDocument.cs:  Fixed bugs in onNodeChanged() and onNodeChanging().
	
	* XmlNode.cs:  AppendChild() fires NodeInserting and NodeInserted events.
		RemoveAll() and RemoveChild() fire NodeRemoving and NodeRemoved events.
	
2002-08-03  Tim Coleman <tim@timcoleman.com>
	* XmlNamespaceManager.cs:
		.Net allows the empty namespace to be redefined
		at a later point, but the current implementation
		did not.  This fixes a hashtable conflict.

2002-07-26  Tim Coleman <tim@timcoleman.com>
	* XmlTextWriter.cs:
		When given a textwriter, check to see if it has a
		null encoding. This was being done for other inputs
		than a textwriter.

Wed Jul 24 13:16:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* XmlTextReader.cs: rough line/column support.

2002-07-23  Duncan Mak  <duncan@ximian.com>

	* XmlConvert.cs: Implement the ToDateTime method. ToDateTime
	(string, string []) is particularly strange.

	* XmlException.cs: Remember to call the base serialization
	constructor.

	* XmlNodeReader.cs: Keep a new variable to store the Depth. 

2002-07-14  Jason Diamond  <jason@injektilo.org>

	* XmlAttribute.cs: Removed ownerElement field since we can reuse 
	parentNode field.

	* XmlDocumentNavigator.cs: MoveToParent now moves to the OwnerElement
	if the current node is an attribute.

	* XmlElement.cs: SetAttributeNode now sets the new attribute's
	owner element.

2002-07-12  Jason Diamond  <jason@injektilo.org>

	* XmlDocument.cs: If null was passed in for prefix or namespaceURI when
	creating an element, use String.Empty instead.

2002-07-12	Piers Haken <piersh@friksit.com>

	* XmlAttributeCollection.cs: implement some ItemOf indexers
	* XmlNamedNodeMap.cs: add internal 'Nodes' accessor for the nodeList field
	* XmlNode.cs: SelectNodes: return empty XmlNodeList, not null

2002-07-06  Ajay kumar Dwivedi <adwiv@yahoo.com>


2002-10-26  Piers Haken <piersh@friskit.com>

	* XmlDocumentNavigator.cs: return invalid XPathNodeType (-1) for unknown node types.

2002-10-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: don't increment depth for entity references.

2002-10-22  Tim Haynes <thaynes@openlinksw.com>

	* - Fixed the duplication of xmlns:xx = yy when serializing the
	XML for serialization
	
	Fixed the unnecessary parsing/serializing when adding assemblies
	for serialization 

	Avoided setting the XmlNode.InnerXml property
	(as it's not implemented) 

	Fixed the usage/implementation of
	XmlElement.GetElementsByTagName()
	
2002-10-21  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs:
	* XmlElement.cs:
	* XmlNode.cs:
	* XmlTextReader.cs: Implementation for XmlNode.InnerXml from
	Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>.

2002-10-18  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs: Applied a patch by Atsushi Enomoto
	<ginga@kit.hi-ho.ne.jp>.

2002-10-12  A.Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlDocument.cs (ImportNode): Implemented

2002-10-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlDocument.cs: one more Load method implemented.
	* XmlTextReader.cs: Depth now works.

2002-09-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlConvert.cs: IsInvalid is now internal.
	* XmlNamespaceManager.cs: implemented RemoveNamespace
	* XmlTextReader.cs: return BaseURI and Encoding from the parser.
	* XmlTextWriter.cs: implemented WriteName and WriteNmToken.

2002-09-19  Matt Hunter <mahunter@tconl.com>

	* XmlElement.cs: Implementing SetAttributeNode(localName,namespaceURI)
	* XmlAttributeCollection.cs: Implemented Append (XmlAttribute) 
	  
2002-09-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlConvert.cs: finished implementation.
	* XmlTextReader.cs: fixed #30239.
	* XmlTextWriter.cs: fixed #30240.

2002-09-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: line and position begin with 1.

2002-09-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlException.cs: added a new internal constructor for IXmlLineInfo
	and output line and position info in Message.

	* XmlReader.cs: implemented missing bits.

2002-09-12	Piers Haken <piersh@friksit.com>

	* XmlDocumentNavigator.cs: implement MoveToId()

2002-09-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextWriter.cs: fixed bug #29886.

2002-08-26  Ravi Pratap  <ravi@ximian.com>


	* XmlAttribute.cs (InnerText): Implement getting this property.

	* XmlNode.cs (InnerText): Ensure that we append only values of
	text nodes.

2002-08-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlWriter.cs: made ws and namespaceManager protected. mcs has a bug
	that allowed compiling this.
	[ FIXME: filed bug #29435. mcs should have failed on this ]

2002-08-25  Tim Coleman <tim@timcoleman.com>
        * XmlNode.cs:
                Change CreateNavigator to not be virtual.
        * XmlElement.cs:
                Add set_Prefix and InnerText accessors.
        * XmlEntityReference.cs:
                Add set_Value accessor.
        * XmlTextWriter.cs:
                Make objects which should be private private.
        * XmlWriter.cs:
                Remove WriteStartElementInternal abstract definition.
        * XmlValidatingReader.cs:
                New stubs added.

2002-08-22  Jason Diamond <jason@injektilo.org>

	* XmlAttributeCollection.cs, XmlElement.cs: Implementation of RemoveAll
	and RemoveAllAttributes courtesy of Matt Hunter <xrkune@tconl.com>.

2002-08-22  Jason Diamond <jason@injektilo.org>

	* XmlElement.cs: Correction to previous GetElementsByTagName patch
	courtesy of Matt Hunter <xrkune@tconl.com>.

2002-08-22  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs, XmlElement.cs: Added implementation of namepsace
	qualified GetElementsByTagName courtesy of Matt Hunter 
	<xrkune@tconl.com>.

2002-08-19  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs, XmlElement.cs: Added implementation of 
	GetElementsByTagName courtesy of Matt Hunter <xrkune@tconl.com>.

2002-08-16  Jason Diamond <jason@injektilo.org>

	* XmlElement.cs: Fixed writing out qualified elements courtesy of
	Marcus Bürgel <marcus.buergel@gmx.de>.

2002-08-13  Tim Coleman <tim@timcoleman.com>
	* XmlTextWriter.cs:
		Partial implementation of WriteQualifiedName ().

2002-08-07  Kral Ferch <kral_ferch@hotmail.com>
	* XmlCharacterData.cs:  Implemented AppendData(), DeleteData(),
		InsertData(), and ReplaceData().  These methods fire the
		NodeChanging and NodeChanged events.
		
	* XmlDocument.cs:  Fixed bugs in onNodeChanged() and onNodeChanging().
	
	* XmlNode.cs:  AppendChild() fires NodeInserting and NodeInserted events.
		RemoveAll() and RemoveChild() fire NodeRemoving and NodeRemoved events.
	
2002-08-03  Tim Coleman <tim@timcoleman.com>
	* XmlNamespaceManager.cs:
		.Net allows the empty namespace to be redefined
		at a later point, but the current implementation
		did not.  This fixes a hashtable conflict.

2002-07-26  Tim Coleman <tim@timcoleman.com>
	* XmlTextWriter.cs:
		When given a textwriter, check to see if it has a
		null encoding. This was being done for other inputs
		than a textwriter.

Wed Jul 24 13:16:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* XmlTextReader.cs: rough line/column support.

2002-07-23  Duncan Mak  <duncan@ximian.com>

	* XmlConvert.cs: Implement the ToDateTime method. ToDateTime
	(string, string []) is particularly strange.

	* XmlException.cs: Remember to call the base serialization
	constructor.

	* XmlNodeReader.cs: Keep a new variable to store the Depth. 

2002-07-14  Jason Diamond  <jason@injektilo.org>

	* XmlAttribute.cs: Removed ownerElement field since we can reuse 
	parentNode field.

	* XmlDocumentNavigator.cs: MoveToParent now moves to the OwnerElement
	if the current node is an attribute.

	* XmlElement.cs: SetAttributeNode now sets the new attribute's
	owner element.

2002-07-12  Jason Diamond  <jason@injektilo.org>

	* XmlDocument.cs: If null was passed in for prefix or namespaceURI when
	creating an element, use String.Empty instead.

2002-07-12	Piers Haken <piersh@friksit.com>

	* XmlAttributeCollection.cs: implement some ItemOf indexers
	* XmlNamedNodeMap.cs: add internal 'Nodes' accessor for the nodeList field
	* XmlNode.cs: SelectNodes: return empty XmlNodeList, not null

2002-07-06  Ajay kumar Dwivedi <adwiv@yahoo.com>

	* XmlTextWriter: Fixed Indentation. IndentationOverridden should
		not be set when inside a attribute.

2002-07-06  Ajay kumar Dwivedi <adwiv@yahoo.com>

	* XmlTextWriter: In WriteStartElement, if namespace is null and 
		prefix is null|empty do not write out xmlns=""
	
	* XmlWriter: WriteStartElement calls the virtual method with null
		argument instead of empty string.

2002-07-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlTextReader.cs: implemented .ctor (Stream).

2002-06-26  Duncan Mak  <duncan@ximian.com>

	* XmlNodeReader.cs: Implementation of most of the properties, and
	some of the related methods. 

2002-06-23  Piers Haken <piersh@friskit.com>
	
	* XmlDocumentNavigator.cs: implement Clone()
	* XmlElement.cs: remove bogus unimplemented override of InnerText
	* XmlNode.cs: implment SelectNodes/SelectSingleNode
	* XmlNodeArrayList.cs: new support class for SelectNodes

2002-06-21  Ajay kumar Dwivedi <adwiv@yahoo.com>
	
	* XmlQualifiedName: Name and Namespaces are never null. If null is passed
		to the constructor, set them to empty strings.
		Fixed the Operators.
	
2002-06-18  Ajay kumar Dwivedi <adwiv@yahoo.com>
	
	* XmlTextReader.cs: HasLineInfo returns false instead of throwing an
	Exception.

2002-06-14  Duncan Mak  <duncan@ximian.com>

	* XmlConvert.cs: Added CLSCompliant attributes to methods.
	
2002-06-12  Duncan Mak  <duncan@ximian.com>

	* XmlCharacterData.cs (Value): Throw an ArgumentException in the
	set block if the node is read-only.

2002-06-10  Ajay kumar Dwivedi <adwiv@yahoo.com>
	* XmlConstruct.cs : New Internal class with Helper methods for
	Checking XmlConstructs
	* XmlConvert.cs: Implemented most of the methods

2002-06-08  Duncan Mak  <duncan@ximian.com>	

	* XmlDocument.cs (Load):
	Added bits to Load (string) for BaseURI support.

	* XmlAttribute.cs (BaseURI): 
	* XmlDocument.cs (BaseURI): 
	* XmlEntity.cs (BaseURI): Implemented.

2002-05-27  Jason Diamond  <jason@injektilo.org>

	* XmlDocumentNavigator.cs: Added file to directory.

	* XmlNode.cs (CreateNavigator): Implemented.
	(InnerText): Implemented.

	* XmlDocument.cs (NamespaceURI, Prefix): Return String.Empty instead of
	throwing exception.
	(Load(XmlReader)): Allow for namespace qualified attributes.

	* XmlElement.cs: Implemented GetAttribute(string, string) and both 
	GetAttributeNode overloads.
	(SetAttributeNode(XmlAttribute)): Implemented.

	* XmlNamedNodeMap.cs: Fixed copy/paste bugs in GetNamedItem(string, string)
	and RemoveNamedItem(string, string).

	* XmlLinkedNode.cs (PreviousSibling): Implemented.

	* XmlTextReader.cs: Added code to maintain the order of attributes as 
	they're parsed. XML doesn't require this but Microsoft's parser does it and
	matching them makes testing easier so now we have it, too.

2002-05-26  Miguel de Icaza  <miguel@ximian.com>

	* XmlDocument.cs: Implement the Save methods.

2002-05-08  Mike Kestner  <mkestner@speakeasy.net>

	* XmlNamedNodeMap.cs (SetNamedItem): Fixed a copy/paste bug.

2002-04-28  Duncan Mak  <duncan@ximian.com>

	* XmlSignificantWhitespace.cs (Value):
	* XmlWhitespace.cs (Value): Added MonoTODO to the 'set'
	block. Added new private method, IsValidWhitespaceChar, for
	checking.

2002-04-16  Duncan Mak  <duncan@ximian.com>

	* XmlParserContext.cs (NameTable): Fixed a typo in the set block.

2002-04-12  Duncan Mak  <duncan@ximian.com>

	* XmlAttribute.cs (Prefix): Added preliminary code for set block,
	added comment on work that needs to be done here. A new MonoTODO item. 

	* XmlDocument.cs (ctor): Corrected constructor signature, changed
	parameter from 'NameTable' to 'XmlNameTable'.

	* XmlDocumentFragment.cs (InnerXml): Added missing set block.

	* XmlCaseOrder.cs: Moved to System.Xml.XPath.

2002-04-10  Duncan Mak  <duncan@ximian.com>

	* XmlNodeReader.cs: Initial stubs for the class.

2002-04-08  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlAttributes.cs: InnerXml getter, WriteContentTo, and WriteTo
	implementations.
	
	* XmlDeclaration.cs: WriteTo implementation.
	
	* XmlDocument.cs: InnerXml getter implementation.
	
	* XmlElement.cs: InnerXml getter implementation.

	* XmlNode.cs: Removed MonoTODO attrib on OuterXml.
	
	* XmlSignificantWhitespace.cs: WriteTo implementation.
	
	* XmlText.cs: WriteContentTo and WriteTo implementation.
	
	* XmlTextWriter.cs: WriteRaw implementation.
	
	* XmlWhitespace.cs: WriteContentTo and WriteTo implementations.

2002-04-05  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlAttributes.cs: Added reminder MonoTODO to set NamespaceURI
	if prefix in constructor is one of the default ones.
	
	* XmlCharacterData.cs: Returns String.Empty for Value and Data
	even when constructed with null.
	
	* XmlDeclaration.cs: Value doesn't put encoding or standalone
	in if they are empty.
	
	* XmlDocument.cs: Implemented CreateNode methods and this caused
	the changes in the other files in this checkin.
	
	* XmlProcessingInstruction.cs: Returns String.Empty for Value and Data
	even when constructed with null.
	
	* XmlWhitespace.cs: Changed Value 'get' to return Data.

2002-04-01  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: Impls for WriteEndDocument and WriteFullEndElement.
	
2002-03-31  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: Impls for LookupPrefix, WriteBase64,
	and WriteCharEntity.
	
	* XmlWrite.cs:  Fixed bug where attribute namespace decl
	was pushing a scope onto the namespace manager when it shouldn't
	have been.
	
2002-03-31  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: Some tweaks for WriteAttibuteString
	in different states (no open start element, in WriteState.Content mode).
	
2002-03-29  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: XmlLang and XmlSpace properties
	and WriteWhitespace.
	
	* XmlTextWriterOpenElement.cs: scope support for XmlLang
	and XmlSpace.

2002-03-29  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: Working on Attribute methods.
	
	* XmlWriter.cs: Working on Attribute methods.

2002-03-28  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs (CreateWhitespace):
	(CreateSignificantWhitespace): Removed extraneous call to the ToCharArray
	method.

	* XmlSignificantWhitespace.cs (Value): Removed MonoTODO attribute.

2002-03-26  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs (CreateDocumentType): Implemented.

	* XmlNode.cs (Value): Implemented.

	* XmlProcessingInstruction.cs (InnerText): Implemented. It works just
	like XmlCharacterData.

	* XmlDeclaration.cs (CloneNode): 
	* XmlDocument.cs (CreateXmlDeclaration): Added missing constructor
	arguments.

	* XmlCharacterData.cs (InnerText): Implemented. Funny that the
	docs say it is the "The concatenated values of the node and all
	the children of the node.". I wrote some test programs and
	couldn't get any of the derived nodes to AppendChild. For now,
	InnerText == Data == Value.
	(Substring): Fixed typo.

	* XmlDeclaration.cs (XmlDeclaration): Fixed the constructor parameter signature.

	* XmlImplementation.cs (CreateDocument): Implemented.

2002-03-25  Duncan Mak  <duncan@ximian.com>

	* XmlDeclaration.cs: Rewrote the class, fixed formatting, added
	missing properties (InnerText, Value).
	
	* XmlDocument.cs (CreateXmlDeclaration): Implemented.

2002-03-23  Kral Ferch <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: Impls for BaseStream and
	Namespaces and WriteState.
	
	* XmlWriter.cs: WriteState and WriteStartElementInternal.

2002-03-23  Kral Ferch <kral_ferch@hotmail.com>

	* XmlNodeListChildren.cs: made class internal
	instead of public.  Shouldn't be visible outside
	of System.Xml.
	
	* XmlTextWriter.cs: Implementations for Formatting,
	IndentChar, Indenting, QuoteChar, WriteStartDocument(standalone).
	Suppresses encoding on xml declaration if null stream passed in.
	Formats output including suppressing indentation for elements in
	mixed content mode.
	
	* XmlTextWriterOpenElement.cs: Initial checkin.
	XmlTextWriter uses stack of these objects to track
	state.
	
2002-03-22  Mike Kestner  <mkestner@speakeasy.net>

	* XmlElement.cs: impl HasAttribute(string name).

2002-03-22  Duncan Mak  <duncan@ximian.com>

	* XmlElement.cs: Reformatted.
	(CloneNode) Corrected.

	* XmlDocument.cs (CreateWhitespace):
	(CreateSignificantWhitespace): Implemented.

	* XmlAttribute.cs (CloneNode): Changed the child's CloneNode to
	true, because Attributes have ChildNodes.

2002-03-21  Kral Ferch <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: WriteStartDocument tracks state, writes out
	xml declaration along with encoding.  WriteEndElement throws
	exception if no WriteStartElement exists.

2002-03-20  Duncan Mak  <duncan@ximian.com>

	* XmlEntityReference.cs (CloneNode): Implemented.

	* XmlException.cs (Message): Implemented. We need to cache the
	message string because SystemException doesn't expose 'message'
	from Exception.

	* XmlText.cs (Value): Added in the missing Value property.

2002-03-20  Duncan Mak  <duncan@ximian.com>	

	* XmlAttribute.cs (CloneNode): Implemented.

	* XmlDocumentFragment.cs (CloneNode): Implemented.

	* XmlElement.cs (CloneNode): Implemented.

2002-03-19  Duncan Mak  <duncan@ximian.com>

	* XmlNotation.cs: Added to CVS.

	* XmlAttribute.cs (CloneNode): First crack at the CloneNode method.

	* XmlCDataSection.cs (CloneNode): Implemented.

	* XmlDocumentFragment.cs: Reformatted and added the missing properties
	(InnerXml, OwnerDocument, ParentNode).
	(CloneNode): Implemented.

	* XmlSignificantWhitespace.cs (CloneNode): Implemented.
	(Value) Implemented the 'get' property.

	* XmlWhitespace.cs (Module): implemented.

2002-03-19  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs: Fixed typo in Load that was duplicating the LocalName
	in the prefix.

2002-03-18  Jason Diamond <jason@injektilo.org>

	* XmlTextReader.cs: Don't restore properties after reading last
	attribute on an element.

	* XmlDocument.cs: Move back to element after reading attributes
	so that IsEmptyElement test succeeds.

2002-03-18  Kral Ferch <kral_ferch@hotmail.com>

	* XmlNamespaceManager.cs: Implemented LookupPrefix.
	
	* XmlTextWriter.cs: Implemented namespace and prefix support.

2002-03-18  Kral Ferch <kral_ferch@hotmail.com>

	* XmlTextReader.cs: Restores properties after
	reading last attribute on an element.
	
	* XmlNode.cs: AppendChild sets the parent
	on the child.

2002-03-17  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlCDataSection.cs: Formatting, Implementation for WriteTo.

	* XmlComment.cs: Implementations for WriteTo and WriteContentTo.
	
	* XmlElement.cs: Fixed bug in WriteTo.
	
	* XmlProcessingInstruction.cs: Formatting.
	
	* XmlTextWriter.cs: Implementations for Close, WriteCData, WriteComment,
	fixes for WriteEndElement, WriteProcessingInstruction.

2002-03-17  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlDocument.cs: Implementations for WriteTo() and WriteContentTo(),
	had Load() add PIs to the document, moved onXXX methods to alphabetical
	order in the file.
	
	* XmlElement.cs: Implementations for WriteTo() and WriteContentTo().
	
	* XmlNode.cs: Implementations for InnerXml Get and OuterXml.
	
	* XmlProcessingInstruction.cs: Implementations for WriteTo() and
	WriteContentTo().
	
	* XmlTextWriter.cs: Implementations for WriteEndElement,
	WriteProcessingInstruction, WriteStartElement, and WriteString.
	
	* XmlWriter.cs: Implemented WriteStartElement() methods.

2002-03-15  Duncan Mak  <duncan@ximian.com>

	* XmlEntity.cs: Added to CVS. Need to implement BaseURI and
	InnerText once I know what they do.

	* XmlDocumentType.cs (XmlDocumentType): Fix the constructor now
	that we can properly chain constructors.
	(CloneNode): implemented.
	(WriteContentTo): Removed MonoTODO attribute as this method has no
	effect in this class.

	* XmlProcessingInstruction.cs (Value): Added the missing Set
	block.
	(InnerText): Added in, but not implemented.

2002-03-14  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlTextWriter.cs: implemented constructors and 
	WriteCData and WriteComment.

2002-03-14  Duncan Mak  <duncan@ximian.com>

	* XmlDocument.cs: Moved the NodeChanged EventHandler to its own
	file, and updated the callbacks to reflect the change.
	(XmlDocument): Added the NameTable constructor.
	(NameTable): Also the NameTable property.

	* XmlNodeChangedEventHandler.cs: Added, replacing the version that
	was in XmlDocument.cs. It has two arguments now (object,
	EventArgs) , instead of one (object).

2002-03-14  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlWriter.cs: Formatting.
	
	* XmlTextWriter.cs: Initial checkin.
	
2002-03-14  Duncan Mak  <duncan@ximian.com>

	* Validation.cs: Removed, replaced by ValidationType.cs.

	* ValidationType.cs: Added.

2002-03-13  Duncan Mak  <duncan@ximian.com>

	* XmlException.cs: Made it [Serializable], implemented good ol'
	GetObjectData, and the serialization constructor.

	* XmlNamedNodeMap.cs (SetNamedItem): Check for the Name property.
	(SetNamedItem): Reverted (added back in) the patch with the
	ReadOnly checks. "Don't doubt yourself, my son... you were right!"

	* XmlNamedNodeMap.cs (GetEnumerator): piggyback on the ArrayList implementation.
	(GetNamedItem (string, string)): implemented.
	(RemoveNamedItem): implemented.
	(SetNamedItem): implemented.

2002-03-12  Kral Ferch  <kral_ferch@hotmail.com>

	* XmlAttribute.cs: Moved a method from amongst properties down to
	it's alphabetical position in the methods section.
	
	* XmlNode.cs: Passes in 'this' to XmlNodeList constructor instead of
	last linked child.  Set XmlNode base class to return false for IsReadOnly().
	Implemented GetEnumerator() and RemoveChild().
	
	* XmlNodeListChildren.cs: Now stores the parent instead of the last child.
	This is to support the behavior that the Enumerator doesn't become invalid
	when changes to the children occur.  Flushed out rest of implementation for
	MoveNext, Current, and Reset.

2002-03-12  Duncan Mak  <duncan@ximian.com>

	* XmlCharacterData.cs: Reformatted the properties for better readability.

	* XmlLinkedNode.cs: Removed the awful boxy comments.

	* XmlNamedNodeMap.cs (Count):
	(Item): Implemented. Tests will be coming.

	* XmlEntityReference.cs: 
	* XmlSignificantWhitespace.cs: Implemented these classes except for
	the Clone, WriteContentTo and WriteTo methods. Will have to
	investigate into these later.

2002-03-11  Duncan Mak  <duncan@ximian.com>

	* IHasXmlNode.cs: Added to CVS.

2002-03-08  Jason Diamond <jason@injektilo.org>

	* XmlParserContext.cs: Added missing constructors and missing Encoding 
	property.

	* XmlTextReader.cs: Start using the XmlParserContext class.

2002-03-08  Jason Diamond <jason@injektilo.org>

	* XmlTextReader.cs: Implemented MoveToElement and MoveToFirstAttribute.

2002-03-08  Mike Kestner  <mkestner@speakeasy.net>

	* XmlNode.cs (Item): Implemented both indexers.

2002-03-08  Jason Diamond  <jason@injektilo.org>

	* DomEncodingType.cs, TreePosition.cs, XPathNodeType.cs, XmlDataType.cs,
	XmlExceptionCode.cs, XmlSortOrder.cs, XmlUtil.cs: Removed files.

2002-03-08  Jason Diamond  <jason@injektilo.org>

	* XmlAttribute.cs: Attribute nodes are supposed to store their values
	as child nodes so updated to reflect that.

	* XmlDocument.cs, XmlElement.cs, XmlNode.cs: Moved code that was
	duplicated in XmlDocument and XmlElement into XmlNode so that it
	wouldn't have to be duplicated in XmlAttribute, too.

2002-03-08  Kral Ferch <kral_ferch@hotmail.com>

	* XmlNodeList.cs, XmlDocument.cs, XmlLinkedNode.cs,
	XmlNode.cs: Formatting.
	
	* XmlNodeListChildren.cs: Implementation of XmlNodeList
	for XmlNode.ChildNodes property.
	
	* XmlNodeListAsArrayList.cs: Removed file.  Using different
	data structure (circular list) in XmlNode so this file
	is no longer valid.
	
	* XmlDocument.cs, XmlElement.cs: New ChildNodes tests found
	bug in setter property of LastLinkedChild so fixed it.
	
2002-03-06  Jason Diamond  <jason@injektilo.org>

	* XmlInputSource.cs, XmlNames_1_0.cs, XmlParse.cs: Removed files.
	We already have a parser in XmlTextReader.

	* XmlException.cs: Removed constructor accepting XmlInputSource.

2002-03-06  Kral Ferch <kral_ferch@hotmail.com>

	* XmlNode.cs: Rewrote this class from scratch with
	MonoToDo attribs and NotImplementedExceptions.  Now defines an
	internal LastLinkedNode property to aid the new implementation.
	XmlNodes only have ref to owner doc and parent nodes now.
	
	* XmlLinkedNode.cs: Added NextLinkedSibling internal property
	and ref to next sibling to support walking our circular child
	node list.
	
	* XmlDocument.cs: Added ref to last child node and overrides
	XmlNode's internal LastLinkedChild property to support walking
	our circular child node list.
	
2002-03-02  Kral Ferch <kral_ferch@hotmail.com>

	* XmlProcessingInstructions.cs: Class was empty.  Implemented
	constructor, properties, and CloneNode() method.  Put in
	MonoToDo attrib for remaining methods.

	* XmlComment.cs: Reformatted and put in MonoToDo attribs.
	Got rid of helper methods and fields since they were no
	longer needed.

	* XmlLinkedNode.cs: Reformatted and put in MonoToDo attribs.

	* XmlDocument.cs: Added code to Load(XmlReader) to create XmlComment,
	XmlCDataSection, and XmlProcessingInstruction nodes. Implemented
	Createxxx() methods for those three node types.

2002-03-02  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs: Implemented the remaining CreateElement and
	CreateAttribute methods.

	* XmlAttribute.cs: Re-implemented.

	* XmlElement.cs: Set owner element on attributes. Reformatted.

2002-03-02  Jason Diamond <jason@injektilo.org>

	* XmlTextReader.cs: Implemented MoveToNextAttribute().

	* XmlDocument.cs: Reformatted. Adding missing methods and MonoTODO
	attributes. Create attribute nodes while loading. Implemented
	Load(string) and CreateTextNode().

	* XmlCharacterData.cs, XmlText.cs: Re-implemented.

	* XmlCDataSection.cs, XmlComment.cs: Call correct constructor in 
	XmlCharacterData.

	* XmlNamedNodeMap.cs, XmlAttributeCollection.cs: Stubbed out.

2002-03-02  Mike Kestner <mkestner@speakeasy.net>

	* XmlAttribute.cs : Using fix.
	* XmlDocument.cs (CreateAttribute(String)): Implement.

2002-03-02  Jason Diamond <jason@injektilo.org>

	* XmlNamespaceManager.cs: Atomize prefixes and namespaces strings in 
	the name table.

2002-02-28  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs, XmlNode.cs: Initial implementation of LoadXml 
	courtesy of Kral Ferch <kral.ferch@hotmail.com>.

2002-02-28  Jason Diamond <jason@injektilo.org>

	* XmlException.cs, XmlReader.cs, XmlTextReader.cs: Reformatted, 
	added missing members and MonoTODO attributes.
	
	* XmlTextReader.cs: Throw XmlException instead of System.Exception.

2002-02-27  Jason Diamond <jason@injektilo.org>

	* XmlElement.cs: Reformatted, added missing members and MonoTODO 
	attributes.

2002-02-26  Duncan Mak  <duncan@ximian.com>

	* XmlCDataSection.cs: Initial implementation.

	* NameTable.cs: Fixed the whole thing. Wrote a NUnit test to test
	it out. This should (hopefully) be correct.

2002-02-26  Jason Diamond <jason@injektilo.org>

	* XmlTextReader.cs: Apparently Microsoft's implementation treats
	namespace declarations as attributes so we do now, too.

	* XmlNamespaceManager.cs: HasNamespace fixed so that it only
	checks the current scope.

2002-02-26  Duncan Mak  <duncan@ximian.com>

	* XmlDocumentType.cs: Added a few hacks here and there to
	temporarily fix the "I broke the build issue".

2002-02-25  Jason Diamond <jason@injektilo.org>

	* XmlDocument.cs, XmlElement.cs, XmlNode.xs, XmlNodeList.cs,
	XmlNodeListAsArrayList.cs: Multiple fixes necessary to get
	simple test to pass. The existing code is really shitty so I'll
	probably start writing tests and refactoring before much else 
	can get done.

2002-02-25  Duncan Mak  <duncan@ximian.com>

	* NameTable.cs: Implemented.

	* XmlDeclaration.cs: It should inherit from XmlLinkedNode, not XmlNode.

2002-02-24  Duncan Mak  <duncan@ximian.com>
	
	* XmlNodeOrder.cs: Added to CVS.

	* XmlQualifiedName.cs: Fixed a warning from Equals ().

	* XmlTokenizedType.cs: Added to CVS.

	* XmlUrlResolver.cs: Added to CVS with one TODO task.

2002-02-23  Duncan Mak  <duncan@ximian.com>

	* XmlQualifiedName.cs: Fixed ToString () and added the operators
	(== and !=).

2002-02-23  Jason Diamond <jason@injektilo.org>

	* XmlTextReader.cs: Added support for qualified attributes.

2002-02-23  Jason Diamond <jason@injektilo.org>

	* XmlNamespaceManager.cs: Initial implementation.
	
	* XmlTextReader.cs: Added support for NamespaceURI property on
	elements.

2002-02-23  Nick Drochak <ndrochak@gol.com>

	* ChangeLog: Add the change log to this directory

	* XmlQualifiedName.cs: Fixed compile errors so it would build. Still has
	MonoTODO's
