luabind installation
====================

The build system used by luabind is Boost Build V2, which can be found
at:

  http://www.boost.org/doc/tools/build/index.html

The installation instructions are available at:

  http://www.boost.org/doc/tools/build/doc/html/bbv2/installation.html

If you are using Debian or Ubuntu, you can simply install the
"boost-build" package:

  $ sudo apt-get install boost-build

Other distributions may have similar packages.

On Windows, you can download pre-built "bjam" binaries, and follow the
installation instructions on the page linked above.


Windows
-------

The environment variable "BOOST_ROOT" must be set to the directory where Boost
was extracted. "LUA_PATH" must be set to a directory where Lua binaries and
headers reside. The recommended way to get the Lua libraries is to download the
"DLL and Includes" package from:

  http://luabinaries.luaforge.net/download.html

With these enviroment variables properly set:

  $ set BOOST_ROOT=...
  $ set LUA_PATH=...
  $ bjam stage

Will build the default library variants and place them in a directory called
"stage". This can be controlled with the "--stagedir" option:

  $ bjam --stagedir=libs stage

Would place the libraries in a "libs" directory.

Note that there is nothing magic going on here. If you don't want to
build the libraries this way, or run the tests, there is nothing
stopping you from using whatever build system you want. For example,
simply dropping the source files in a Visual Studio project should just
work. The only requirement is that "LUABIND_DYNAMIC_LINK" must be
defined when building and linking to a shared library.

\*nix
-----

  $ bjam install

Will build and install the default library variants, and install them together
with the header files to the default prefix, which is "/usr/local". The install
prefix can be controlled with the "--prefix" option. For example:

  $ bjam --prefix=/usr install

Will install to "/usr/lib" and "/usr/include".
