// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_mset.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/protobuf/unittest_mset.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestMessageSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageSetContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSetContainer_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageSetExtension1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSetExtension1_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageSetExtension2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSetExtension2_reflection_ = NULL;
const ::google::protobuf::Descriptor* RawMessageSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RawMessageSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* RawMessageSet_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RawMessageSet_Item_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2funittest_5fmset_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/unittest_mset.proto");
  GOOGLE_CHECK(file != NULL);
  TestMessageSet_descriptor_ = file->message_type(0);
  static const int TestMessageSet_offsets_[1] = {
  };
  TestMessageSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSet_descriptor_,
      TestMessageSet::default_instance_,
      TestMessageSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSet, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSet, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessageSet));
  TestMessageSetContainer_descriptor_ = file->message_type(1);
  static const int TestMessageSetContainer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetContainer, message_set_),
  };
  TestMessageSetContainer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSetContainer_descriptor_,
      TestMessageSetContainer::default_instance_,
      TestMessageSetContainer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetContainer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetContainer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessageSetContainer));
  TestMessageSetExtension1_descriptor_ = file->message_type(2);
  static const int TestMessageSetExtension1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension1, i_),
  };
  TestMessageSetExtension1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSetExtension1_descriptor_,
      TestMessageSetExtension1::default_instance_,
      TestMessageSetExtension1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessageSetExtension1));
  TestMessageSetExtension2_descriptor_ = file->message_type(3);
  static const int TestMessageSetExtension2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension2, str_),
  };
  TestMessageSetExtension2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSetExtension2_descriptor_,
      TestMessageSetExtension2::default_instance_,
      TestMessageSetExtension2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessageSetExtension2));
  RawMessageSet_descriptor_ = file->message_type(4);
  static const int RawMessageSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet, item_),
  };
  RawMessageSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RawMessageSet_descriptor_,
      RawMessageSet::default_instance_,
      RawMessageSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RawMessageSet));
  RawMessageSet_Item_descriptor_ = RawMessageSet_descriptor_->nested_type(0);
  static const int RawMessageSet_Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, message_),
  };
  RawMessageSet_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RawMessageSet_Item_descriptor_,
      RawMessageSet_Item::default_instance_,
      RawMessageSet_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RawMessageSet_Item));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2funittest_5fmset_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSet_descriptor_, &TestMessageSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSetContainer_descriptor_, &TestMessageSetContainer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSetExtension1_descriptor_, &TestMessageSetExtension1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSetExtension2_descriptor_, &TestMessageSetExtension2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RawMessageSet_descriptor_, &RawMessageSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RawMessageSet_Item_descriptor_, &RawMessageSet_Item::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2funittest_5fmset_2eproto() {
  delete TestMessageSet::default_instance_;
  delete TestMessageSet_reflection_;
  delete TestMessageSetContainer::default_instance_;
  delete TestMessageSetContainer_reflection_;
  delete TestMessageSetExtension1::default_instance_;
  delete TestMessageSetExtension1_reflection_;
  delete TestMessageSetExtension2::default_instance_;
  delete TestMessageSetExtension2_reflection_;
  delete RawMessageSet::default_instance_;
  delete RawMessageSet_reflection_;
  delete RawMessageSet_Item::default_instance_;
  delete RawMessageSet_Item_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#google/protobuf/unittest_mset.proto\022\021p"
    "rotobuf_unittest\"\036\n\016TestMessageSet*\010\010\004\020\377"
    "\377\377\377\007:\002\010\001\"Q\n\027TestMessageSetContainer\0226\n\013m"
    "essage_set\030\001 \001(\0132!.protobuf_unittest.Tes"
    "tMessageSet\"\226\001\n\030TestMessageSetExtension1"
    "\022\t\n\001i\030\017 \001(\0052o\n\025message_set_extension\022!.p"
    "rotobuf_unittest.TestMessageSet\030\260\246^ \001(\0132"
    "+.protobuf_unittest.TestMessageSetExtens"
    "ion1\"\230\001\n\030TestMessageSetExtension2\022\013\n\003str"
    "\030\031 \001(\t2o\n\025message_set_extension\022!.protob"
    "uf_unittest.TestMessageSet\030\371\273^ \001(\0132+.pro"
    "tobuf_unittest.TestMessageSetExtension2\""
    "n\n\rRawMessageSet\0223\n\004item\030\001 \003(\n2%.protobu"
    "f_unittest.RawMessageSet.Item\032(\n\004Item\022\017\n"
    "\007type_id\030\002 \002(\005\022\017\n\007message\030\003 \002(\014B\002H\001", 595);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/unittest_mset.proto", &protobuf_RegisterTypes);
  TestMessageSet::default_instance_ = new TestMessageSet();
  TestMessageSetContainer::default_instance_ = new TestMessageSetContainer();
  TestMessageSetExtension1::default_instance_ = new TestMessageSetExtension1();
  TestMessageSetExtension2::default_instance_ = new TestMessageSetExtension2();
  RawMessageSet::default_instance_ = new RawMessageSet();
  RawMessageSet_Item::default_instance_ = new RawMessageSet_Item();
  TestMessageSet::default_instance_->InitAsDefaultInstance();
  TestMessageSetContainer::default_instance_->InitAsDefaultInstance();
  TestMessageSetExtension1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestMessageSet::default_instance(),
    1545008, 11, false, false,
    &::protobuf_unittest::TestMessageSetExtension1::default_instance());
  TestMessageSetExtension2::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestMessageSet::default_instance(),
    1547769, 11, false, false,
    &::protobuf_unittest::TestMessageSetExtension2::default_instance());
  RawMessageSet::default_instance_->InitAsDefaultInstance();
  RawMessageSet_Item::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2funittest_5fmset_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fmset_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fmset_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_5fmset_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestMessageSet::TestMessageSet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TestMessageSet::InitAsDefaultInstance() {
}

TestMessageSet::TestMessageSet(const TestMessageSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TestMessageSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessageSet::~TestMessageSet() {
  SharedDtor();
}

void TestMessageSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessageSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessageSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessageSet_descriptor_;
}

const TestMessageSet& TestMessageSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSet* TestMessageSet::default_instance_ = NULL;

TestMessageSet* TestMessageSet::New() const {
  return new TestMessageSet;
}

void TestMessageSet::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
  return _extensions_.ParseMessageSet(input, default_instance_,
                                      mutable_unknown_fields());
}

void TestMessageSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  _extensions_.SerializeMessageSetWithCachedSizes(output);
  ::google::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(
      unknown_fields(), output);
}

::google::protobuf::uint8* TestMessageSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  target =
      _extensions_.SerializeMessageSetWithCachedSizesToArray(target);
  target = ::google::protobuf::internal::WireFormat::
             SerializeUnknownMessageSetItemsToArray(
               unknown_fields(), target);
  return target;
}

int TestMessageSet::ByteSize() const {
  int total_size = _extensions_.MessageSetByteSize();
  total_size += ::google::protobuf::internal::WireFormat::
      ComputeUnknownMessageSetItemsSize(unknown_fields());
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessageSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSet::MergeFrom(const TestMessageSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSet::CopyFrom(const TestMessageSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSet::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestMessageSet::Swap(TestMessageSet* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestMessageSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessageSet_descriptor_;
  metadata.reflection = TestMessageSet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessageSetContainer::kMessageSetFieldNumber;
#endif  // !_MSC_VER

TestMessageSetContainer::TestMessageSetContainer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TestMessageSetContainer::InitAsDefaultInstance() {
  message_set_ = const_cast< ::protobuf_unittest::TestMessageSet*>(&::protobuf_unittest::TestMessageSet::default_instance());
}

TestMessageSetContainer::TestMessageSetContainer(const TestMessageSetContainer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TestMessageSetContainer::SharedCtor() {
  _cached_size_ = 0;
  message_set_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessageSetContainer::~TestMessageSetContainer() {
  SharedDtor();
}

void TestMessageSetContainer::SharedDtor() {
  if (this != default_instance_) {
    delete message_set_;
  }
}

void TestMessageSetContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessageSetContainer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessageSetContainer_descriptor_;
}

const TestMessageSetContainer& TestMessageSetContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSetContainer* TestMessageSetContainer::default_instance_ = NULL;

TestMessageSetContainer* TestMessageSetContainer::New() const {
  return new TestMessageSetContainer;
}

void TestMessageSetContainer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_message_set()) {
      if (message_set_ != NULL) message_set_->::protobuf_unittest::TestMessageSet::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSetContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestMessageSet message_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TestMessageSetContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protobuf_unittest.TestMessageSet message_set = 1;
  if (has_message_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->message_set(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TestMessageSetContainer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .protobuf_unittest.TestMessageSet message_set = 1;
  if (has_message_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->message_set(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TestMessageSetContainer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestMessageSet message_set = 1;
    if (has_message_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message_set());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessageSetContainer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSetContainer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSetContainer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSetContainer::MergeFrom(const TestMessageSetContainer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_set()) {
      mutable_message_set()->::protobuf_unittest::TestMessageSet::MergeFrom(from.message_set());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSetContainer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetContainer::CopyFrom(const TestMessageSetContainer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSetContainer::IsInitialized() const {

  if (has_message_set()) {
    if (!this->message_set().IsInitialized()) return false;
  }
  return true;
}

void TestMessageSetContainer::Swap(TestMessageSetContainer* other) {
  if (other != this) {
    std::swap(message_set_, other->message_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessageSetContainer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessageSetContainer_descriptor_;
  metadata.reflection = TestMessageSetContainer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessageSetExtension1::kIFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int TestMessageSetExtension1::kMessageSetExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestMessageSet,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension1 >, 11, false >
  TestMessageSetExtension1::message_set_extension(kMessageSetExtensionFieldNumber, ::protobuf_unittest::TestMessageSetExtension1::default_instance());
TestMessageSetExtension1::TestMessageSetExtension1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TestMessageSetExtension1::InitAsDefaultInstance() {
}

TestMessageSetExtension1::TestMessageSetExtension1(const TestMessageSetExtension1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TestMessageSetExtension1::SharedCtor() {
  _cached_size_ = 0;
  i_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessageSetExtension1::~TestMessageSetExtension1() {
  SharedDtor();
}

void TestMessageSetExtension1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessageSetExtension1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessageSetExtension1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessageSetExtension1_descriptor_;
}

const TestMessageSetExtension1& TestMessageSetExtension1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSetExtension1* TestMessageSetExtension1::default_instance_ = NULL;

TestMessageSetExtension1* TestMessageSetExtension1::New() const {
  return new TestMessageSetExtension1;
}

void TestMessageSetExtension1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    i_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSetExtension1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 i = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
          set_has_i();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TestMessageSetExtension1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 i = 15;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->i(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TestMessageSetExtension1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 i = 15;
  if (has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->i(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TestMessageSetExtension1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 i = 15;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessageSetExtension1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSetExtension1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSetExtension1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSetExtension1::MergeFrom(const TestMessageSetExtension1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_i()) {
      set_i(from.i());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSetExtension1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension1::CopyFrom(const TestMessageSetExtension1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSetExtension1::IsInitialized() const {

  return true;
}

void TestMessageSetExtension1::Swap(TestMessageSetExtension1* other) {
  if (other != this) {
    std::swap(i_, other->i_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessageSetExtension1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessageSetExtension1_descriptor_;
  metadata.reflection = TestMessageSetExtension1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessageSetExtension2::kStrFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int TestMessageSetExtension2::kMessageSetExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestMessageSet,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension2 >, 11, false >
  TestMessageSetExtension2::message_set_extension(kMessageSetExtensionFieldNumber, ::protobuf_unittest::TestMessageSetExtension2::default_instance());
TestMessageSetExtension2::TestMessageSetExtension2()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TestMessageSetExtension2::InitAsDefaultInstance() {
}

TestMessageSetExtension2::TestMessageSetExtension2(const TestMessageSetExtension2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TestMessageSetExtension2::SharedCtor() {
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessageSetExtension2::~TestMessageSetExtension2() {
  SharedDtor();
}

void TestMessageSetExtension2::SharedDtor() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void TestMessageSetExtension2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessageSetExtension2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessageSetExtension2_descriptor_;
}

const TestMessageSetExtension2& TestMessageSetExtension2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSetExtension2* TestMessageSetExtension2::default_instance_ = NULL;

TestMessageSetExtension2* TestMessageSetExtension2::New() const {
  return new TestMessageSetExtension2;
}

void TestMessageSetExtension2::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::kEmptyString) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSetExtension2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TestMessageSetExtension2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string str = 25;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TestMessageSetExtension2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string str = 25;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TestMessageSetExtension2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string str = 25;
    if (has_str()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessageSetExtension2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSetExtension2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSetExtension2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSetExtension2::MergeFrom(const TestMessageSetExtension2& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSetExtension2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension2::CopyFrom(const TestMessageSetExtension2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSetExtension2::IsInitialized() const {

  return true;
}

void TestMessageSetExtension2::Swap(TestMessageSetExtension2* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessageSetExtension2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessageSetExtension2_descriptor_;
  metadata.reflection = TestMessageSetExtension2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RawMessageSet_Item::kTypeIdFieldNumber;
const int RawMessageSet_Item::kMessageFieldNumber;
#endif  // !_MSC_VER

RawMessageSet_Item::RawMessageSet_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RawMessageSet_Item::InitAsDefaultInstance() {
}

RawMessageSet_Item::RawMessageSet_Item(const RawMessageSet_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RawMessageSet_Item::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RawMessageSet_Item::~RawMessageSet_Item() {
  SharedDtor();
}

void RawMessageSet_Item::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void RawMessageSet_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RawMessageSet_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RawMessageSet_Item_descriptor_;
}

const RawMessageSet_Item& RawMessageSet_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

RawMessageSet_Item* RawMessageSet_Item::default_instance_ = NULL;

RawMessageSet_Item* RawMessageSet_Item::New() const {
  return new RawMessageSet_Item;
}

void RawMessageSet_Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RawMessageSet_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // required bytes message = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RawMessageSet_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type_id = 2;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type_id(), output);
  }

  // required bytes message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RawMessageSet_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type_id = 2;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type_id(), target);
  }

  // required bytes message = 3;
  if (has_message()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RawMessageSet_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type_id = 2;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

    // required bytes message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RawMessageSet_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RawMessageSet_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RawMessageSet_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RawMessageSet_Item::MergeFrom(const RawMessageSet_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RawMessageSet_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet_Item::CopyFrom(const RawMessageSet_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawMessageSet_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RawMessageSet_Item::Swap(RawMessageSet_Item* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RawMessageSet_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RawMessageSet_Item_descriptor_;
  metadata.reflection = RawMessageSet_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int RawMessageSet::kItemFieldNumber;
#endif  // !_MSC_VER

RawMessageSet::RawMessageSet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RawMessageSet::InitAsDefaultInstance() {
}

RawMessageSet::RawMessageSet(const RawMessageSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RawMessageSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RawMessageSet::~RawMessageSet() {
  SharedDtor();
}

void RawMessageSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RawMessageSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RawMessageSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RawMessageSet_descriptor_;
}

const RawMessageSet& RawMessageSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

RawMessageSet* RawMessageSet::default_instance_ = NULL;

RawMessageSet* RawMessageSet::New() const {
  return new RawMessageSet;
}

void RawMessageSet::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RawMessageSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated group Item = 1 {
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                1, input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(11)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RawMessageSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated group Item = 1 {
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      1, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RawMessageSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated group Item = 1 {
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        1, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RawMessageSet::ByteSize() const {
  int total_size = 0;

  // repeated group Item = 1 {
  total_size += 2 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RawMessageSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RawMessageSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RawMessageSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RawMessageSet::MergeFrom(const RawMessageSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RawMessageSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet::CopyFrom(const RawMessageSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawMessageSet::IsInitialized() const {

  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void RawMessageSet::Swap(RawMessageSet* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RawMessageSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RawMessageSet_descriptor_;
  metadata.reflection = RawMessageSet_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)
