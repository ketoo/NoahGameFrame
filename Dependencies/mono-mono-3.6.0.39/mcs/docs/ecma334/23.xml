<?xml version="1.0"?>
<clause number="23" title="Exceptions">
  <paragraph>Exceptions in C# provide a structured, uniform, and type-safe way of handling both system level and application-level error conditions. <note>[Note: The exception mechanism is C# is quite similar to that of C++, with a few important differences: <list><list_item> In C#, all exceptions must be represented by an instance of a class type derived from System.Exception. In C++, any value of any type can be used to represent an exception. </list_item><list_item> In C#, a finally block (<hyperlink>15.10</hyperlink>) can be used to write termination code that executes in both normal execution and exceptional conditions. Such code is difficult to write in C++ without duplicating code. </list_item><list_item> In C#, system-level exceptions such as overflow, divide-by-zero, and null dereferences have well defined exception classes and are on a par with application-level error conditions. end note]</list_item></list></note> </paragraph>
</clause>
