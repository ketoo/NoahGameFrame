2009-09-22  Sebastien Pouliot  <sebastien@ximian.com> 

	* CryptoStreamTest.cs: Add (nunit-ized) test cases provided by
	Santa Marta (via Atsushi) as repro for bugs #539288 and #539229

2009-09-22  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoStreamTest.cs: Convert to newer nunit syntax

2008-09-17  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigTest.cs: Add test cases for HMAC URI.

2008-07-13  Nestor Salceda  <nestor.salceda@gmail.com>

	* RSAPKCS1KeyExchangeFormatterTest.cs: Add test case where you are
	passing null parameters to SetKey method and constructor with the key as
	parameter.  Fixes the bug #408738.

2008-04-21  Sebastien Pouliot  <sebastien@ximian.com>

	* HMACSHA1Test.cs: Add test case where data reside inside a byte
	array. Patch by Kazuki Oikawa.

2008-04-17  Sebastien Pouliot  <sebastien@ximian.com>

	* DSATest.cs: Add valid test cases with invalid xml. Update to
	NUnit 2 syntax.
	* HashAlgorithmTest.cs: Fix compiler warnings.
	* RSATest.cs: Add valid test cases with invalid xml. Update to
	NUnit 2 syntax.
	* SHA256Test.cs, SHA384Test.cs, SHA512Test.cs: Flush

2008-03-04  Sebastien Pouliot  <sebastien@ximian.com>

	* PaddingModeTest.cs: Add test case for #366623 ANSI padding bug.

2008-02-21  Sebastien Pouliot  <sebastien@ximian.com>

	* Rfc2898DeriveBytesTest.cs: Add test cases for consecutive calls to
	GetBytes and compare the result to a single, larger, call. Converted 
	all exitsing tests to NUnit 2.2.

2008-01-02  Sebastien Pouliot  <sebastien@ximian.com>

	* RC2CryptoServiceProviderTest.cs: Fix Create[De|En]cryptor_KeyNull 
	test case not to fail about 1 out of 256 times under the 2.0 profile.
	* TripleDESCryptoServiceProviderTest.cs: Fix Create[De|En]cryptor_KeyNull
	test case not to fail about 1 out of 256 times under the 2.0 profile.

2007-11-20  Sebastien Pouliot  <sebastien@ximian.com>

	* DESCryptoServiceProviderTest.cs: Fix CreateDecryptor_KeyNull test 
	case not to fail about 1 out of 256 times under the 2.0 profile.

2007-10-23  Sebastien Pouliot  <sebastien@ximian.com>

	* DESCryptoServiceProviderTest.cs: Fix CreateEncryptor_KeyNull test 
	case not to fail about 1 out of 256 times under the 2.0 profile.

2007-05-16  Sebastien Pouliot  <sebastien@ximian.com> 

	* CryptoStreamTest.cs: Add test cases for WriteByte.

2007-05-08  Randolph Chung  <tausq@debian.org>

	* DSACryptoServiceProviderTest.cs: Remove "NotWorking" annotation
	for the blob tests that should now pass.

2007-05-08  Sebastien Pouliot  <sebastien@ximian.com>

	* DSATest.cs: Add test case where we import a key that has a null Y
	(public part) but where X (private part) is available - and usable
	to compute Y.

2007-03-22  Sebastien Pouliot  <sebastien@ximian.com> 

	* CryptoConfigTest.cs: Fix upper/lower/mixed cases tests as they work 
	only for 2.0.
	* CryptoStreamTest.cs: Fixed some test cases to work properly on MS
	fx 2.0.
	* DSACryptoServiceProviderTest.cs: Normalize line endings.
	* PasswordDeriveBytesTest.cs: Fix test case that used Reset (as the 
	method was fixed to reset the state in fx 2.0).
	* Rfc2898DeriveBytesTest.cs: Add test case to trigger an endian bug.
	* RSACryptoServiceProviderTest.cs: Normalize line endings.
	* SymmetricAlgorithmTransformTest.cs: Change/split test cases so that
	they work properly under both MS 1.1 and 2.0. In some cases tests are
	marked as NotWorking because Mono implements the, more consistent, 2.0
	behavior for all transforms.

2007-03-15 Roei Erez <roeie@mainsoft.com>

	* Adding some TARGET_JVM tags.
	
2007-03-05  Sebastien Pouliot  <sebastien@ximian.com>

	* SymmetricAlgorithmTransformTest.cs: Add test cases for #81008 by
	looking at the encrypted/decrypted block length when TransformBlock is
	called with different MoO and paddings.

2007-02-14  Sebastien Pouliot  <sebastien@ximian.com> 

	* HashAlgorithmTest.cs: Convert to NUnit 2.2 format.
	* HMACMD5Test.cs: Convert to NUnit 2.2 format.
	* HMACRIPEMD160Test.cs: Convert to NUnit 2.2 format.
	* HMACSHA1Test.cs: Convert to NUnit 2.2 format.
	* HMACSHA256Test.cs: Convert to NUnit 2.2 format.
	* HMACSHA384Test.cs: Convert to NUnit 2.2 format. Add test cases from
	RFC4231 using the correct block size (128) and the "legacy" size (64).
	* HMACSHA512Test.cs: Convert to NUnit 2.2 format. . Add test cases from
	RFC4231 using the correct block size (128) and the "legacy" size (64).
	* KeyedHashAlgorithmTest.cs: Convert to NUnit 2.2 format.
	* SHA1CryptoServiceProviderTest.cs: Convert to NUnit 2.2 format.
	* SHA1Test.cs: Convert to NUnit 2.2 format.
	* SHA256ManagedTest.cs: Convert to NUnit 2.2 format.
	* SHA256Test.cs: Convert to NUnit 2.2 format.
	* SHA384ManagedTest.cs: Convert to NUnit 2.2 format.
	* SHA384Test.cs: Convert to NUnit 2.2 format.
	* SHA512ManagedTest.cs: Convert to NUnit 2.2 format.
	* SHA512Test.cs: Convert to NUnit 2.2 format.

2007-02-14  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigTest.cs: Adjust line-endings.
	* CryptoStreamTest.cs: Adjust line-endings.
	* DESTest.cs: Adjust line-endings.
	* DSACryptoServiceProviderTest.cs: Adjust line-endings.
	* DSATest.cs: Adjust line-endings.
	* RSACryptoServiceProviderTest.cs: Adjust line-endings.

2007-01-08  Sebastien Pouliot  <sebastien@ximian.com>

	* DESCryptoServiceProviderTest.cs: Remove test cases for bug #80439
	as they are more general than DES and the default padding.
	* SymmetricAlgorithmTransformTest.cs: New. Extensive test cases for
	bug #80439, all symmtric ciphers (all block size), all mode of 
	operations and all supported padding modes.

2007-01-04  Sebastien Pouliot  <sebastien@ximian.com>

	* DESCryptoServiceProviderTest.cs: Update and add new test cases for
	bug #80439.

2007-01-03  Sebastien Pouliot  <sebastien@ximian.com>

	* DESCryptoServiceProviderTest.cs: Add tests for bug #80439 where 
	inputCount is reduced to fit into the output buffer (for any mode).

2006-11-24  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigTest.cs: Added test case for X509Chain.

2006-11-16  Sebastien Pouliot  <sebastien@ximian.com>

	* PasswordDeriveBytesTest.cs: Added test case for bug #79499

2006-10-11  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigTest.cs: Added test cases to ensure lower/mixed-case of 
	algorithm names are supported by CreateFromName and MapNameToOID (fix 
	bug #79641). Updated some OID that were changed (well nulled) in the 
	final 2.0 release of MS framework.

2006-09-08  Sebastien Pouliot  <sebastien@ximian.com>

	* RSACryptoServiceProviderTest.cs: Added test cases for decoding bad
	PKCS1 and OAEP padding - both resulting in a CryptographicException.
	* RSAOAEPKeyExchangeDeformatterTest.cs: Add test case for bad padding.
	* RSAPKCS1KeyExchangeDeformatterTest.cs: Add test case for bad padding

2006-09-05  Sebastien Pouliot  <sebastien@ximian.com>

	* RSACryptoServiceProviderTest.cs: Test case for #79269 where we 
	ensure a CryptographicException (not a NRE) when decrypting without a
	private key.

2006-07-01  Sebastien Pouliot  <sebastien@ximian.com>

	* RSAPKCS1SignatureDeformatterTest.cs: Added test case where 
	SetHashAlgorithm isn't called and the hash algorithm name is derived
	from the hash instance. From bug #78744 by Diego Mesa Tabares.

2006-06-15  Sebastien Pouliot  <sebastien@ximian.com>

	* HashAlgorithmTest.cs: Added new test cases wrt the output buffer 
	used in TransformBlock (e.g. bug #78647). Updated existing test case
	to work under 2.0 final.
	* HMACMD5Test.cs: Fix SetUp to allow new inherited test cases to work 
	properly.
	* HMACRIPEMD160Test.cs: Fix SetUp to allow new inherited test cases to
	work properly.
	* HMACSHA1Test.cs: Fix SetUp to allow new inherited test cases to 
	work properly.
	* HMACSHA256Test.cs: Fix SetUp to allow new inherited test cases to 
	work properly.
	* HMACSHA384Test.cs: New. Basic test cases that, cheaply, inherits 
	the HashAlgorithm tests.
	* HMACSHA512Test.cs: New. Basic test cases that, cheaply, inherits 
	the HashAlgorithm tests.
	* KeyedHashAlgorithmTest.cs: Ensure we're always using the same key 
	(required for new, inherited, test cases). Fix ToString to match 
	KeyedHashAlgorithm (and not an inherited class).

2006-06-01  Sebastien Pouliot  <sebastien@ximian.com>

	* RandomNumberGeneratorTest.cs: Don't forget the last run in Runs. 
	Track both 0 and 1 runs. Changed runs ranges to match FIPS140-2 Change
	Notice #1 (fixes bug #78560). Updated test cases to NUnit 2.2 format.

2005-12-15  Sebastien Pouliot  <sebastien@ximian.com>

	* RijndaelTest.cs: Add test cases for cycling key sizes and block 
	sizes.
	* SymmetricAlgorithm2Test.cs: Added test case for re-setting the 
	BlockSize. Keeping the same value *doesn't* change the current IV 
	(while doing the same on the KeySize *does* change the key).

2005-11-22  Sebastien Pouliot  <sebastien@ximian.com>

	* DSATest.cs: Added test case where J isn't imported. In this case we
	don't export (our internally calculated) J and it's also not part of 
	the XML output.

2005-10-21  Sebastien Pouliot  <sebastien@ximian.com>

	* RC2CryptoServiceProviderTest.cs: New. Unit tests specific to this 
	implementation (not algorithm specific but required to match MS 
	behaviour).
	* RijndaelManagedTest.cs: Added unit tests specific to this 
	implementation (not algorithm specific but required to match MS
	behaviour).
	* DESCryptoServiceProviderTest.cs: Added unit tests specific to this
	implementation (not algorithm specific but required to match MS
	behaviour).
	* TripleDESCryptoServiceProviderTest.cs: New. Unit tests specific to 
	this implementation (not algorithm specific but required to match MS
	behaviour).

2005-09-29  Sebastien Pouliot  <sebastien@ximian.com>

	* HMACSHA1Test.cs: Use the new ctor(byte[],bool) introduced in 2.0 RC
	in some of the existing tests (under 2.0).

2005-04-27  Sebastien Pouliot  <sebastien@ximian.com>

	* DSACryptoServiceProviderTest.cs: Catch UnauthorizedAccessException
	directly in UseMachineKeyStore (not just wrapped inside a 
	CryptographicException). 
	* RSACryptoServiceProviderTest.cs: Catch UnauthorizedAccessException
	directly in UseMachineKeyStore (not just wrapped inside a 
	CryptographicException). 

2005-04-25  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigTest.cs: Check that ArgumentNullException is throw in
	EncodeOID for 2.0. Comment test for RSA OID (2.0).
	* DESTest.cs: Check that null keys throws CryptographicException in 
	IsWeakKey and IsSemiWeakKey for 2.0.
	* TripleDESTest.cs: Check that null keys throws CryptographicException
	in IsWeakKey for 2.0.
	* SymmetricAlgorithm2Test.cs: Check that a FeedbackSize of zero throws
	a CryptographicException in 2.0.

2005-04-18  Sebastien Pouliot  <sebastien@ximian.com>

	* SymmetricAlgorithm2Test.cs: Added a test case where the FeedBackSize
	is set to 0 before starting encryption.

2005-03-30  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoStreamTest.cs: Added test case when when no padding is used.

2005-03-24  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigCas.cs: New. CAS unit tests for CryptoConfig.
	* CryptoAPITransformCas.cs: New. CAS unit tests for CryptoAPITransform.

2005-02-10  Sebastien Pouliot  <sebastien@ximian.com>

	* DSATest.cs: Added unit test for Counter == 0. Actualized test cases
	for NET_2_0 now that we can inherit from DSA outside corlib.

2005-01-30  Sebastien Pouliot  <sebastien@ximian.com>

	* PasswordDeriveBytesTest.cs: Changed [Ignore] to [Category
	("NotWorking")] to reduce nunit logs.

2005-01-19  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoStreamTest.cs: Added [ExpectedException] for [Ignored] unit 
	tests that were converted to [Category]

2005-01-11  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoConfigTest.cs: Added new RIPEMD160 hash algorithm and new HMAC
	algorithms (HMACMD5, HMACRIPEMD160, HMACSHA256, HMACSHA384 and 
	HMACSHA512) to the tests.
	* DSACryptoServiceProviderTest.cs: Fixed VerifySignatureWithoutKey to
	ensure that Mono didn't create the key before starting verification.
	* RSACryptoServiceProviderTest.cs: Added tests for PublicOnly in the
	constructor tests and for VerifyHash with a null OID.
	* RSAPKCS1SignatureFormatterTest.cs: Fixed signatures values for 
	SHA256, SHA384 and SHA512 for NET_2_0 profile. The older signatures
	(working only in Mono) can't be used because 2.0 use new OID for those
	hash algorithms. Note that this still only works with Mono in 2.0!

2005-01-10  Sebastien Pouliot  <sebastien@ximian.com> 

	* CryptoStreamTest.cs, DSACryptoServiceProviderTest.cs,
	HashAlgorithmTest.cs, PKCS1MaskGenerationMethodTest.cs,
	RSAPKCS1KeyExchangeFormatterTest.cs, ToBase64TransformTest.cs:
	Use [Category ("NotDotNet")] for tests failing only on the MS runtime
	(so they are now executed on Mono).

2005-01-08  Sebastien Pouliot  <sebastien@ximian.com> 

	* TripleDESTest.cs: Testing weak key with null throws a NRE.

2005-01-06  Sebastien Pouliot  <sebastien@ximian.com> 

	* DESTest.cs: Updated weak key and semi-weak key tests with more 
	exhaustive versions.
	* TripleDESTest.cs: Added tests when including a DES weak key into
	a 2DES or 3DES key.

2005-01-04  Sebastien Pouliot  <sebastien@ximian.com> 

	* CryptoStreamTest.cs: Undo some previous fixes that have changed from
	2.0 Nov CTP. Stream chaining was working on Nov CTP but are failing 
	again with Dec.

2004-12-23  Sebastien Pouliot  <sebastien@ximian.com> 

	* CryptoStreamTest.cs: Fixed tests to execute properly on 2.0 Nov CTP.
	* DSACryptoServiceProviderTest.cs: Fixed tests to execute properly on 
	2.0 Nov CTP.
	* PaddingModeTest.cs: Fixed tests to execute properly on 2.0 Nov CTP.
	* RSACryptoServiceProviderTest.cs: Fixed tests to execute properly on 
	2.0 Nov CTP.

2004-12-23  Sebastien Pouliot  <sebastien@ximian.com>

	* ProtectedDataTest.cs: Moved in System.Security.dll
	* ProtectedMemoryTest.cs: Moved in System.Security.dll

2004-12-06  Sebastien Pouliot  <sebastien@ximian.com>

	* RSACryptoServiceProviderTest.cs: Adjusted unit tests to show that 
	RSACryptoServiceProvider doesn't support private keys without CRT
	parameters available - except to import the keys.

2004-11-09  Sebastien Pouliot  <sebastien@ximian.com>

	* PasswordDeriveBytesTest.cs: Removed test for 69036. This is a MS
	bug that will be fixed in 2.0 beta 2.

2004-11-03  Sebastien Pouliot  <sebastien@ximian.com>

	* DSACryptoServiceProviderTest.cs: Fixed UseMachineKeyStore not to 
	fail if the key container directory wasn't yet created (root).
	* PasswordDeriveBytesTest.cs: Added tests for NET_2_0, more tests
	for all constructors, tests for properties and a test for bug 69036.
	* RSACryptoServiceProviderTest.cs: Fixed UseMachineKeyStore not to 
	fail if the key container directory wasn't yet created (root).

2004-08-31  Nick Drochak <ndrochak@gol.com>

	* DSACryptoServiceProviderTest.cs: 
	* RSACryptoServiceProviderTest.cs: Feed csc smaller bite sizes.

2004-07-07  Sebastien Pouliot  <sebastien@ximian.com>

	* DESTest.cs: Added a new test case to check default values.
	* HMACSHA1.cs: Fixed bad test (and renamed it).
	* RC2Test.cs: Added a new test case to check default values.
	* RijndaelTest.cs: Added a new test case to check default values.
	Convert tests from NUnit 1 to 2.2.
	* TripleDESTest.cs: Added a new test case to check default values.
	Convert tests to NUnit 2.2.

2004-07-07  Sebastien Pouliot  <sebastien@ximian.com>

	* AllTests2.cs: Updated to NUnit 2.2 Assert.
	* CipherModeTest.cs: New. Tests supported CipherMode for all 
	SymmetricAlgorithm included in the framework (enum contains two more
	modes that aren't implemented in any Fx version).
	* CryptoConfigTest.cs: Ajusted new OID (for old names) in Fx 2.0.
	* CryptoStreamTest.cs: Fixed different reported exception in Fx 2.0.
	Fixed a bad test.
	* CspProviderFlagsTest.cs: New. Test the values of the enum.
	* DSACryptoServiceProviderTest.cs: Added new tests for new public 
	properties and methods added in Fx 2.0. Duplicated test to import a
	key pair into a disposed instance (works in Fx 2.0). Removed all
	[Ignore]s in NET_2_0 as the MS class/runtime has been fixed.
	* DSASignatureDeformatterTest.cs: Converted from NUnit 1 to 2.2. Fixed
	different reported exception in Fx 2.0.
	* DSASignatureFormatterTest.cs: Converted from NUnit 1 to 2.2. Fixed
	different reported exception in Fx 2.0.
	* HMACRIPEMD160Test.cs: Fixed tests using TransformFinalBlock.
	* HMACSHA1Test.cs: Fixed tests so they work on both NET_1_1 and 
	NET_2_0 profiles (as HMACSHA1 changed it's base class).
	* HashAlgorithmTest.cs: Fixed different reported exception in Fx 2.0.
	Removed [Ignore] in NET_2_0 as the MS class/runtime has been fixed.
	* MACTripleDESTest.cs: Fixed tests so they work on both NET_1_1 and 
	NET_2_0 profiles.
	* PKCS1MaskGenerationMethodTest.cs: Removed [Ignore] in NET_2_0 as the
	MS class has been fixed.
	* PaddingModeTest.cs: Added new tests for the two new padding mode
	introduced in Fx 2.0. Converted to NUnit 2.2.
	* PasswordDeriveBytesTest.cs: Removed [ExpectedException] for 
	StrangeBehaviour test as it is fixed in Fx 2.0.
	* RC2Test.cs: Changed exception from CryptographicException to 
	CryptographicUnexpectedOperationException for Fx 1.1/2.0.
	* RIPEMD160Test.cs: Fixed tests using TransformFinalBlock.
	* RSACryptoServiceProviderTest.cs: Added new tests for new public 
	properties and methods added in Fx 2.0. Duplicated test to import a
	key pair into a disposed instance (works in Fx 2.0). Duplicated test
	to sign with a null OID (Fx 2.0 use SHA1 oid in this case).
	* RSAOAEPKeyExchangeDeformatterTest.cs: Changed exception for a key
	exchange with no key (to match Fx 2.0).
	* RSAOAEPKeyExchangeFormatterTest.cs: Changed exception for a key
	exchange with no key (to match Fx 2.0).
	* RSAPKCS1KeyExchangeFormatterTest.cs: Changed exception for a key
	exchange with no key (to match Fx 2.0). Removed [Ignore] in NET_2_0 as
	the MS class/runtime has been fixed.
	* RSAPKCS1SignatureDeformatterTest.cs: Null keys, in constructor or in
	SetKey method, now throw an ArgumentNullException in Fx 2.0.
	* RSAPKCS1SignatureFormatterTest.cs: Null keys, in constructor or in
	SetKey method, now throw an ArgumentNullException in Fx 2.0.
	* Rfc2898DeriveBytesTest.cs: Typecasted a null as a string.
	* SymmetricAlgorithm2Test.cs: In Fx 2.0 an empty IV now throws a 
	CryptographicException.
	* ToBase64TransformTest.cs: Fixed different reported exception in Fx 2.0.
	Removed [Ignore] in NET_2_0 as the MS class/runtime has been fixed.

2004-06-23  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoStreamTest.cs: Added two tests for bug #60573. One shows that
	an encryptor doesn't reduce the number of block on Write while the
	second shows that a decryptor does reduce the number of blocks on 
	Write.

2004-06-16  Sebastien Pouliot  <sebastien@ximian.com>

	* SignatureDescriptionTest.cs: Added missing [TestFixture] :( and 
	cases for the previously undocumented .ctor(SecurityElement) - which
	is now, backwardly, documented in VS.NET 2005.

2004-05-27  Sebastien Pouliot  <sebastien@ximian.com>

	* HashAlgorithmTest.cs: Added new tests to check for more exceptions.

2004-05-26  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoStreamTest.cs: Added new unit tests for overflows.
	* FromBase64Transform.cs: Added new unit tests for undocumented 
	exceptions (null, overflows...).
	* ToBase64TransformTest.cs: Added new unit tests for negatives and
	overflows. 

2004-05-20  Sebastien Pouliot  <sebastien@ximian.com>

	* CryptoStreamTest.cs, DESCryptoServiceProviderTest.cs, 
	DSACryptoServiceProviderTest.cs, DSATest.cs, FromBase64Transform.cs,
	HMACRIPEMD160Test.cs, MD5Test.cs, PKCS1MaskGenerationMethodTest.cs,
	RIPEMD160ManagedTest.cs, RNGCryptoServiceProviderTest.cs, 
	RSACryptoServiceProviderTest.cs, RSAOAEPKeyExchangeDeformatterTest.cs,
	RSAOAEPKeyExchangeFormatterTest.cs, RSAPKCS1KeyExchangeDeformatterTest.cs,
	RSAPKCS1KeyExchangeFormatterTest.cs, RSAPKCS1SignatureDeformatterTest.cs,
	RSAPKCS1SignatureFormatterTest.cs, RSATest.cs: SetUp/TearDown are now
	public (required for new nunit).

2004-05-17  Sebastien Pouliot  <sebastien@ximian.com>

	* RNGCryptoServiceProviderTest.cs: Added new tests to see how the 
	constructor behave with null seeds or if they modify the seed.

2004-05-07  Sebastien Pouliot  <sebastien@ximian.com>

	* DSACryptoServiceProviderTest.cs: Added a new unit test for SignData
	(was badly tested) and simplified test to reduce key pair generations.
	* PasswordDerivceBytesTest.cs: Added new tests to complete
	coverage.
	* RSACryptoServiceProviderTest.cs: Added new tests to complete
	coverage.
	* ToBase64TransformTest.cs: Added a (legal) test where the final 
	transform receive data smaller than it's input block (padding).

2004-05-06  Sebastien Pouliot  <sebastien@ximian.com>

	* RC2Test.cs: Converted to NUnit 2. Uncommented some tests that throw 
	exceptions to test exception handling (and get more coverage).
	* RNGCryptoServiceProviderTest.cs: Updated unit tests for exception 
	testing.
	* RSAOAEPKeyExchangeDeformatterTest.cs: Updated unit tests to complete 
	coverage.
	* RSAOAEPKeyExchangeFormatterTest.cs: Updated unit tests to complete 
	coverage.
	* RSAPKCS1KeyExchangeDeformatterTest.cs: Updated unit tests to 
	complete coverage.
	* RSAPKCS1KeyExchangeFormatterTest.cs: Updated unit tests to complete 
	coverage.
	* RSAPKCS1SignatureDeformatterTest.cs: Updated unit tests to complete 
	coverage.
	* RSAPKCS1SignatureFormatterTest.cs: Updated unit tests to complete 
	coverage.
	* RSATest.cs: Updated unit tests for importing XML key pairs.
	* SHA256Test.cs: Corrected Setup attribtue (was [Test]).
	* SignatureDescriptionTest.cs: Removed unimplemented constructor from
	tests. Converted to NUnit2.
	* SymmetricAlgorithm2Test.cs: New. Non generated unit test for better
	coverage (like exception testing).
	* ToBase64TransformTest.cs: New. Unit tests to complete coverage of
	ToBase64Transform.
	* TripleDESTest.cs: New. Unit tests to complete coverage of TripleDES.

2004-04-29  Sebastien Pouliot  <sebastien@ximian.com>

	* DSACryptoServiceProviderTest.cs: New unit tests fo better coverage.
	* FromBase64Transform.cs: New unit tests for better coverage.
	* HashAlgorithmTest.cs: New unit tests for better coverage.
	* HMACSHA1Test.cs: New unit tests for better coverage. Updated to 
	NUnit2.
	* KeyedHashAlgorithmTest.cs: Coverage already complete. Updated to 
	NUnit 2.
	* SHA1Test.cs: Coverage already complete. Updated to NUnit2.
	* SHA1CryptoServiceProviderTest.cs: Coverage almost complete. Updated 
	to NUnit2.
	* SHA256Test.cs: Coverage already complete. Updated to NUnit2.
	* SHA256ManagedTest.cs: Coverage already complete. Updated to NUnit2.
	* SHA384Test.cs: Coverage already complete. Updated to NUnit2.
	* SHA384ManagedTest.cs: Coverage almost complete. Updated to NUnit2.
	* SHA512Test.cs: Coverage already complete. Updated to NUnit2.
	* SHA512ManagedTest.cs: Coverage almost complete. Updated to NUnit2.

2004-04-28  Sebastien Pouliot  <sebastien@ximian.com>

	* DESCryptoServiceProviderTest.cs: New. Completes coverage for 
	DESCryptoServiceProvider class. Calls the FIPS 81 tests for this
	implementation.
	* DESTest.cs: Added test vectors from FIPS 81.

2004-04-26  Sebastien Pouliot  <sebastien@ximian.com>

	* DESTest.cs: New. Unit tests for DES including checks for weak and
	semi-weak keys (with and without parity applied on keys). Completes
	coverage for DES class.

2004-04-02  Bernie Solomon  <bernard@ugsolutions.com>

	* PasswordDeriveBytesTest.cs: Add ToInt32LE so
	it works on big endian machines.

2004-03-10  Sebastien Pouliot  <sebastien@ximian.com>

	* FromBase64Transform.cs: Two new unit tests showing that the 
	transform doesn't care if it's data is invalid base64. Convert class
	is on it's own.

2004-03-10  Sebastien Pouliot  <sebastien@ximian.com>

	* FromBase64Transform.cs: Converted to NUnit2 format. New unit tests
	for properties, Dispose, Reuse and ignored characters.

2004-03-09  Atsushi Enomoto  <atsushi@ximian.com>

	* DSATest.cs : Added ToXmlString test that checks if input without
	  Seed and PgenCounter elements pass or not.

2004-02-12  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoStreamTest.cs: Added new tests for [From|To]Base64Transform 
	(InputBlockSize != OutputBlockSize) and for cascading CryptoStreams.

2004-02-09  Sebastien Pouliot  <sebastien@ximian.com>

	* DSACryptoServiceProvider.cs: Added new unit tests for key pair 
	persistence.
	* RSACryptoServiceProvider.cs: Added new unit tests for key pair 
	persistence.

2004-02-04  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoStreamTest.cs: Added many more tests for every problem found
	with CryptoStream using code samples from the internet.

2003-12-15  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoConfigTest.cs: Converted unit tests to NUnit2.
	* PaddingModeTest.cs: New. Unit tests to check every padding modes for
	symmetric algorithms.
	* MACTripleDESTest.cs: Updated unit tests for NUnit2 and to work for 
	both 1.0 and 1.1 framework.

2003-11-13  Sebastien Pouliot  <spouliot@videotron.ca>

	* ProtectedDataTest.cs: New. Unit tests for ProtectedData (1.2).
	* ProtectedMemoryTest.cs: New. Unit tests for ProtectedMemory (1.2).

2003-11-11  Sebastien Pouliot  <spouliot@videotron.ca>

	* Rfc2898DeriveBytesTest.cs: More tests for Reset and keys longer than
	a single block.

2003-11-10  Sebastien Pouliot  <spouliot@videotron.ca>

	* Rfc2898DeriveBytesTest.cs: New. Unit tests for Rfc2898DeriveBytes
	and test vectors from RFC3211.

2003-11-09  Sebastien Pouliot  <spouliot@videotron.ca>

	* HMACMD5Test.cs: New. Unit test for HMAC-MD5 with test vectors from 
	RFC2104.
	* HMACRIPEMD160Test.cs: New. Unit test for HMAC-RIPEMD160 with test 
	vectors from http://www.esat.kuleuven.ac.be/~bosselae/ripemd160.html.
	* HMACSHA256Test.cs: New. Unit test for HMAC-SHA256.

2003-11-08  Sebastien Pouliot  <spouliot@videotron.ca>

	* RIPEMD160Test.cs: New. Unit test using RIPEMD160 test vectors.
	* RIPEMD160Managed.cs: New. Unit tests running RIPEMD160Test using the
	RIPEMD160Managed implementation.

2003-10-04  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoStreamTest.cs: Added test case from bugzilla #49323 from
	Carlos Guzmán Álvarez and some small tests for empty stream with
	different PaddingMode (as found by Lluis Sanchez Gual).

2003-08-05  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoStreamTest.cs: Added test case from bugzilla #40689 from 
	Henning Westerholt.

2003-07-31  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoStreamTest.cs: New. Very basic test for CryptoStream + the 
	test case from bugzilla #46143 from Joerg Rosenkranz.
	* RSACryptoServiceProviderTest.cs: Fixed some exceptions that are
	different from .NET 1.0 and 1.1.

2003-07-05  Sebastien Pouliot  <spouliot@videotron.ca>

	* DSACryptoServiceProviderTest.cs: Added news unit tests for Dispose/Clear
	and better test coverage (based on Zoltan's logs).
	* DSATest.cs: Converted to NUnit2 format. Added new tests for better unit 
	test coverage (import incomplete public keys).
	* RSACryptoServiceProviderTest.cs: Added news unit tests for Dispose/Clear
	and better test coverage (based on Zoltan's logs).
	* RSATest.cs: Converted to NUnit2 format. Added new tests for better unit 
	test coverage (import incomplete public keys).

2003-06-23  Nick Drochak <ndrochak@gol.com>

        * MACTripleDESTest.cs: Adjust for .NET 1.1.

2003-06-11  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests2.cs: Converted tests to NUnit2 format.
	* RSACryptoServiceProviderTest.cs: Converted tests to NUnit2 format.
	* RSAPKCS1KeyExchangeDeformatterTest.cs: Converted tests to NUnit2 format.
	* RSAPKCS1KeyExchangeFormatterTest.cs: Converted tests to NUnit2 format.
	* RSAPKCS1SignatureDeformatterTest.cs: Converted tests to NUnit2 format.
	* RSAPKCS1SignatureFormatterTest.cs: Converted tests to NUnit2 format.

2003-05-29  Sebastien Pouliot  <spouliot@videotron.ca>

	* PKCS1MaskGenerationMethodTest.cs: Added [Ignore] to vector test
	(as it's result isn't valid on both framework 1.0 and 1.1).
	* RSAPKCS1SignatureDeformatter.cs: Splitting the test for NUnit2
	cloned the previous error into many more tests. Hopefully fixed.

2003-05-28  Sebastien Pouliot  <spouliot@videotron.ca>

	* RSAPKCS1SignatureDeformatter.cs: Fixed (well I hope so) a test
	which doesn't throw the same exception under 1.1. Also converted 
	the tests to NUnit2 format.

2003-05-12  Sebastien Pouliot  <spouliot@videotron.ca>

	* PKCS1MaskGenerationMethodTest.cs: Uncommented PKCS#1 v.2.1 vector 
	unit test (will work on Mono but fails with MS implementation).
	* RSAOAEPKeyExchangeDeformatterTest.cs: Updated tests vectors for
	both Mono and MS (under Windows XP) generated OAEP results.
	* RSAOAEPKeyExchangeFormatterTest.cs: Update exception handling.

2003-04-17  Nick Drochak  <ndrochak@gol.com>

	* DSATest.cs: Use nunit version 2 style to test throw.
	* HMACSHA1Test.cs: Eliminate compiler warning.

2003-03-04  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoConfigTest.cs: Added new tests for algorithms 
	documented in book ".NET Framework Security".

2003-02-03  Sebastien Pouliot  <spouliot@videotron.ca>

	* PasswordDeriveBytesTest.cs: Added some new tests to complete 
	coverage.
	* RSAPKCS1SignatureDeformatterTest.cs: Added test for null and 
	invalid	hash algorithm.

2003-01-19  Sebastien Pouliot  <spouliot@videotron.ca>

	* HMACSHA1Test.cs: Added tests for constructors.
	* MACTripleDESTest.cs: Added tests for constructors.

2003-01-12  Sebastien Pouliot  <spouliot@videotron.ca>

	* HashAlgorithmTest.cs: Added new test for null streams.
	* MACTripleDESTest.cs: New. Test suite par MAC using 3DES.

2002-12-21  Nick Drochak <ndrochak@gol.com>

	* all: make tests build and run under nunit2

2002-12-21  Nick Drochak  <ndrochak@gol.com>

        * AllTests2.cs: Helper file for unit tests
	
2002-11-20  Sebastien Pouliot  <spouliot@videotron.ca>

	* RSAPKCS1SignatureDeformatterTest.cs: Removed patch from Nick - 
	as it doesn't seems to work on my system and the exception behavior 
	isn't logical (only MD5 not SHA1, ...).

2002-11-18  Nick Drochak  <ndrochak@gol.com>

	* RSAPKCS1SignatureDeformatterTest.cs: MS .NET throws an exception when
	verifying a bad signature.  Test for that.

2002-11-17  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added a common RSA keypair for tests and all RSA 
	suites for new tests.
	* RSACryptoServiceProviderTest.cs: Include tests for keygen,
	import/export and signature (no encryption yet).
	* RSAOAEPKeyExchangeDeformatterTest.cs: Compare results with 
	pre-generated vectors from Mono/Windows (cannot yet compare 
	with CryptoAPI/Windows as OAEP isn't available on my system).
	* RSAOAEPKeyExchangeFormatterTest.cs: Test that the Formatter output
	is compatible with the Deformatter.
	* RSAPKCS1KeyExchangeDeformatterTest.cs: Compare results with 
	pre-generated vectors from Mono/Windows and CryptoAPI/Windows.
	* RSAPKCS1KeyExchangeFormatterTest.cs: Test that the Formatter output
	is compatible with the Deformatter.
	* RSAPKCS1SignatureDeformatterTest.cs: Compare results with 
	pre-generated vectors from Mono/Windows and CryptoAPI/Windows.
	* RSAPKCS1SignatureFormatterTest.cs: Test that the Formatter output
	is compatible with the Deformatter.

2002-11-16  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suites for DSASignatureDeformatter, 
	DSASignatureFormatter.
	* CryptoConfigTest.cs: Tests new URLs. This test will fail
	if System.Security.dll isn't present (or not yet compiled).
	* DSACryptoServiceProviderTest.cs: New. Key generation (limited
	because it's too slow), Import/Export, Signature and Verification.
	* DSASignatureDeformatterTest.cs: New. Test signature verification. 
	* DSASignatureFormatterTest.cs: New. Test signature creation.
	* DSATest.cs: Comment DSA-derived test class as DSA constructor
	is internal. Reworked the test suite.
	* SignatureDescriptionTest.cs: Added tests for
	DSASignatureDescription and RSAPKCS1SHA1SignatureDescription.

2002-11-02  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suites for SignatureDescription and 
	activated suites for SHA384Managed and SHA512Managed.
	* SignatureDescriptionTest.cs: New. Basic tests (because I don't
	know the context in which the class is used).

2002-10-28  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added test suites for SHA256, SHA384 and SHA512 
	(last two partly commented until implementation is commited).
	* SHA256Test.cs: New. Generic FIPS180-2 tests for SHA-256.
	* SHA256ManagedTest.cs: New. Implementation tests (inherits
	from SHA256Test).
	* SHA384Test.cs: New. Generic FIPS180-2 tests for SHA-384.
	* SHA384ManagedTest.cs: New. Implementation tests (inherits
	from SHA384Test).
	* SHA512Test.cs: New. Generic FIPS180-2 tests for SHA-512.
	* SHA512ManagedTest.cs: New. Implementation tests (inherits
	from SHA512Test).

2002-10-25  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suite for PasswordDeriveBytes
	* PasswordDeriveBytesTest.cs: New. Tests against pre-generated vectors -
	only works for short runs (keys < HashSize) not long runs

2002-10-20  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suite for Rjindael
	* RjindaelTest.cs: New. Test vectors from FIPS PUB 197 appendix.

2002-10-19  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Renabled most tests after commenting all code causing a 
	cyclic dependency (corlib->System.Xml->corlib). Some tests will fail 
	until commented code is replaced.
	* SymmetricAlgorithm.cs: New (189) generated test cases for all default
	algorithm implementation, all cipher modes, all padding modes, all key
	sizes, all block sizes, feedback...
	* PKCS1MaskGenerationMethodTest.cs: Commented vector test. Added new 
	tests to check for various exceptions

2002-10-16  Nick Drochak  <ndrochak@gol.com>

	* CryptoConfigTest.cs (TestCreateFromName): Disable tests for
	algorithms that aren't in the build yet.

2002-10-16  Nick Drochak  <ndrochak@gol.com>

	* AllTests.cs: Disable tests that use components were are excluding
	from corlib.
	* SHA1Test.cs: same

2002-10-14  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suite for PKCS1MaskGenerationMethod
	* PKCS1MaskGenerationMethodTest.cs: New. Test work as per PKCS#1 but 
	result isn't the same as MS implementation !?! is MS using this class ?

2002-10-13  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suite for HashAlgorithm, KeyedHashAlgorithm and
        HMACSHA1
	* HashAlgorithmTest.cs: New. Test for Create and Clear
        * KeyedHashAlgorithmTest.cs: New. Test for Create and key assignation
        * HMACSHA1Test.cs: New. Test vectors from FIPS 198 and RFC2202

2002-10-12  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllTests.cs: Added suite for RandomNumberGenerator, SHA1 and 
        SHA1CryptoServiceProvider
	* RandomNumberGeneratorTest.cs: New. Tests for Create and generic 
        random quality tests (FIPS140-2)
	* SHA1Test.cs: New. Tests for Create and generic SHA1 tests (FIPS180-1)
	* SHA1CryptoServiceProviderTest.cs: New. Inherited SHA1Tests tests +
        specific tests

2002-10-10  Sebastien Pouliot  <spouliot@videotron.ca>

	* DSATest.cs: Added non-abstract DSA class to test To/FromXmlString()
	* RSATest.cs: Added non-abstract RSA class to test To/FromXmlString()
	* AllTests.cs: Added DSATest.cs and RSATest.cs in suite

2002-10-09  Sebastien Pouliot  <spouliot@videotron.ca>

	* CryptoConfigTest.cs: New tests
	* AllTests.cs: Added CryptoConfigTest in suite

2002-10-05  Andrew Birkett  <andy@nobugs.org>

	* RC2Test.cs: New test.  Only three cases are enabled - the other
	five work fine under mono, but fail under MS corlib, so I've 
	commented them out.

	* AllTests.cs: Added RC2Test.

2002-09-23  Andrew Birkett  <andy@nobugs.org>

	* RijndaelManagedTest.cs: Fixed initialization order problem 
	to match MS behaviour.

2002-09-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* MD5Test.cs: new test from Eduardo García Cebollero (kiwnix@yahoo.es).
	* AllTests.cs: added new test.
