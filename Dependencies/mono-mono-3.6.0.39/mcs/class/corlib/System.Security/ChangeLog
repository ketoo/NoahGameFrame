
Wed Jul 21 16:00:08 CEST 2010 Paolo Molaro <lupus@ximian.com>

	* SecurityRuleSet.cs: this enum is actually a byte, the msdn docs are
	wrong.

2010-05-27  Jb Evain  <jbevain@novell.com>

	* SecurityContextSource.cs: add new enum in net_4_0.

2010-04-16  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Add stub for new methods (so code compiles
	correctly under other profiles)
	* SecurityManager_2_1.cs: Implement [Check|Ensure]ElevatedPermissions
	for Moonlight Elevated Trust

2010-03-23  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager_2_1.cs: Add an internal HasElevatedPermissions 
	property to mscorlib since the "real" (i.e. visible) one in 
	System.Windows.dll is not accessible by most code.

2010-03-16  Jb Evain  <jbevain@novell.com>

	* SecurityTransparentAttribute.cs
	* SecurityFrame.cs
	* IPermission.cs
	* SecurityManager.cs
	* SecurityManager_2_1.cs
	* SecuritySafeCriticalAttribute.cs:
		use MOONLIGHT symbol to disambiguate MonoTouch and Moonlight code.

2009-10-30	Marek Safar  <marek.safar@gmail.com>

	* SecurityRuleSet.cs, SecurityRulesAttribute.cs: Implemented.

2009-10-23  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager_2_1.cs: Return to duty for SecurityEnabled, it
	will allow us to distinguish between running in the browser
	(coreclr active) and on the console (e.g. smcs) from managed code

2009-09-23  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityContext.cs: Remove NET_2_1 defines since the type is
	now unused in NET_2_1 profile

2009-09-22  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission_2_1.cs: New. Stub to compile NET_2_1
	* IPermission.cs: Remove ISecurityEncodable for NET_2_1
	* PermissionSet_2_1.cs: New. Stub to compile NET_2_1
	* SecurityContext.cs: Remove usage of CompressedStack for NET_2_1
	* SecurityException_2_1.cs: New, CAS-less version for NET_2_1
	* SecurityException.cs: Remove NET_2_1 conditions
	* SecurityFrame.cs: Keep structures (needed by the runtime) but
	remove SecurityFrame itself for NET_2_1

2009-09-21  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityContext.cs: Don't use WindowsIdentity under NET_2_1

2009-09-09  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs, SecurityManager_2_1.cs: Replace existing
	throw methods (for coreclr) with a single one.

2009-05-02  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs (ThrowSecurityException): Don't include
	CAS-specific information when throwing a SecurityException in
	NET_2_1

2009-05-01  Sebastien Pouliot  <sebastien@ximian.com> 

	* SecurityCriticalAttribute.cs: Add simpler version NET_2_1
	* SecuritySafeCriticalAttribute.cs: Remove MonoTODO for NET_2_1
	* SecurityTransparentAttribute.cs: Remove MonoTODO for NET_2_1

2009-05-01  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityState.cs: Implement IsStateAvailable (added in 2.0SP 
	and part of SL API)

2009-04-27  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityException.cs: Remove CAS-specific stuff from ToString
	* SecurityManager.cs: Do not include for NET_2_1 build
	* SecurityManager_2_1.cs: Alternate implementation for NET_2_1

2009-03-19  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Remove VerificationException (not used from
	the runtime anymore) and add FieldAccessException (which is now, 
	or soon will be, required/used by the runtime).

2009-02-19  Rodrigo Kumpera  <rkumpera@novell.com>

	* SecurityManager.cs: Make core-clr work under non 2.1 profiles.

2008-09-15  Jb Evain  <jbevain@novell.com>

	* SecuritySafeCriticalAttribute.cs: Include SecuritySafeCritical in
	the net_2_0 profile, as a recent sp includes it.

2008-08-07  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityState.cs: New. Silverlight 2.0 abstract type.

2008-05-30  Sebastien Pouliot  <sebastien@ximian.com> 

	* CodeAccessPermission.cs,
	* PermissionSet.cs,
	* SecurityManager.cs: Provide better MonoTODO messages for the 
	next version of MoMA.

2008-04-02  Andreas Nahr  <ClassDevelopment@A-SoftTech.com>

	* VerificationException.cs
	* SecurityElement.cs
	* SecurityContext.cs
	* NamedPermissionSet.cs
	* HostProtectionException.cs: Fix parameter names

2008-01-02  Sebastien Pouliot  <sebastien@ximian.com> 

	* SecureString.cs: Fix InsertAt buffer calculation. Fix #350820

2008-01-02  Sebastien Pouliot  <sebastien@ximian.com>

	* SecureString.cs: Don't forget length in Copy. Fix #350840

2007-11-07  Atsushi Enomoto  <atsushi@ximian.com>

	* SecurityElement.cs :
	  set_Text() should unescape the input string. get_Text() should
	  return unescaped string. It also applies to attribute value.
	  ToString() should return valid (escaped) XML.

2007-10-14  Gert Driesen  <drieseng@users.sourceforge.net>

	* SecurityElement.cs: In ctors, do not assign to Tag property to
	ensure exception message match that of MS. In Tag property, set name
	of parameter in ArgumentNullException and do not filter out
	namespace prefixes. Modified Text property to allow null values
	after change to IsValidText that no longer considers null value as
	valid. Avoid NRE in Escape.

2007-08-28  Mark Probst  <mark.probst@gmail.com>

	* SecurityManager.cs: Changed method argument of
	LinkDemandSecurityException to IntPtr and removed the assembly
	argument (which can be gotten to via the method), to avoid having
	to embed reference object values in the native code.

2007-08-20  Mark Probst  <mark.probst@gmail.com>

	* SecurityManager.cs: Changed arguments of MethodAccessException
	to IntPtr, to avoid having to embed reference object values in the
	native code.

2007-08-20  Mark Probst  <mark.probst@gmail.com>

	* SecurityManager.cs: Added two methods needed for CoreCLR
	security.

2007-08-08  Atsushi Enomoto  <atsushi@ximian.com>

	* SecureString.cs : commenting out internal call. It somehow seems
	  to cause timeout on the buildbots :(

2007-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* SecureString.cs : adding notes that ProtectedMemory is not
	  implemented for non-windows environment.

2007-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* SecureString.cs : Decrypt() and Encrypt() now use icall wrapper
	  to ProtectedMemory in System.Security.dll.

2007-02-23  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSet.cs: Fix InvalidCastException on non-CAS permissions.
	Fix bug #80936.

2006-06-16  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityContext.cs: Don't skip the calling callBack if we don't call
	CompressedStack.Run (#78652).

2006-06-15  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityContext.cs: Don't call CompressedStack.Run if we don't have
	a compressed stack in the context (which can now happen because of 
	#78652). This should fix MWF bug #78652 (BeginInvoke under 2.0).

2006-04-07  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityException.cs: Show Evidence correctly (it's a collection) 
	but avoid showing the Hash evidence (it's way too big to be useful).

2005-11-11  Sebastien Pouliot  <sebastien@ximian.com> 

	* SecureString.cs: Completed InsertAt, fixed Alloc not to re-alloc a
	block of the same size. Fixed missing encryption for the char* ctor.
	Only missing is access to ProtectedMemory do to the [en|de]cryption.

2005-10-30  Sebastien Pouliot  <sebastien@ximian.com> 
 
	* PermissionSet.cs: Forgot to remove virtual from 2.0 IsSubsetOf.

2005-10-29  Sebastien Pouliot  <sebastien@ximian.com> 
 
	* PermissionSet.cs: Another update to corcompare shows that even more
	methods are not virtual in 2.0 final.

2005-10-28  Sebastien Pouliot  <sebastien@ximian.com> 
 
	* PermissionSet.cs: Some methods are no more virtual in 2.0 final.

2005-10-28  Sebastien Pouliot  <sebastien@ximian.com>

	* SecureString.cs: Changed the previous (and partial) managed 
	implementation to one (that will be) based on ProtectedMemory. Work in
	progress...

2005-10-17  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSet.cs: If the current permission set is unrestricted then
	we must allow "permit only" for unrestricted (all other case are known
	to be too restrictive).

2005-09-22  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Added [Obsolete] on SecurityEnabled for 2.0 (as 
	it cannot be turned off on MS runtime anymore). Removed dependecies
	on PermissionSetCollection as this class (related to *Choice actions)
	didn't make it to 2.0 RC.

2005-09-02  Sebastien Pouliot  <sebastien@ximian.com>
 
	* CodeAccessPermission.cs: Fix Deny for permissions that do not return
	null for empty intersection (common on flags-based permissions).
	* PermissionBuilder.cs: Add an helper call to create an empty 
	(PermissionState.None) permission from a type.
	* SecurityManager.cs: Added AppDomain support in InheritanceDemand. 
	Fixed some another small difference between 1.x and 2.0 (wrt 
	unrestricted permissions). Fixed error reporting for InheritanceDemand
	(was LinkDemand).

2005-06-30  Sebastien Pouliot  <sebastien@ximian.com> 

	* SecurityManager.cs: Fixed inheritance demands for 1.x.

2005-06-22  Sebastien Pouliot  <sebastien@ximian.com> 

	* CodeAccessPermission.cs: Fix Unrestricted PermitOnly (which is like
	a no-op). Speed up Assert if Unrestricted.
	* HostSecurityManager.cs: Updated FIXME description.
	* PermissionSet.cs: Remove Copy() of the permission set when non-CAS
	permissions are used (replaced by an array of bools). Completed Assert
	support by re-using the array of bools. Updated TODO descriptions.
	* SecurityException.cs: Added evidence (if available) in the ToString
	description of the exception.
	* SecurityManager.cs: Reworked CheckExecutionRights to get the correct
	behavior.

2005-06-20  Sebastien Pouliot  <sebastien@ximian.com> 

	* CodeAccessPermission.cs: Removed redundant and unrequired TODO.
	* PermissionSet.cs: Some 2.0 optimizations (because sets are simpler
	without the special case for identity permissions).
	* SecurityManager.cs: Shortcut for ResolveIdentityPermissions (in 2.0)
	and some more declarative security syntax updates.

2005-06-16  Sebastien Pouliot  <sebastien@ximian.com> 

	* PermissionSet.cs: Added support for non-CAS permissions in the
	IsSubsetOf method.
	* SecurityManager.cs: Simplified IsGranted and added support for 2.0
	(where all permissions support unrestricted). Changed desclarative 
	security syntax not to use flags (like the rest of the source code).

2005-06-16  Sebastien Pouliot  <sebastien@ximian.com> 
 
	* NamedPermissionSet.cs: A default NamedPermissionSet is Unrestricted.
	* SecurityManager.cs: Simplified LinkDemandFullTrust as FullTrust is
	immutable.

2005-06-14  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Added ResolvingPolicyLevel property to enable
	support for FullTrustAssemblies during policy resolution. Reworked
	(simplified) locking. Moved check for CheckExecutionRights to the 
	"right" place.
	* PermissionSet.cs: Added shortcut in GetPermission(Type).

2005-06-08  Sebastien Pouliot  <sebastien@ximian.com>

	* AllowPartiallyTrustedCallersAttribute.cs, HostSecurityManagerFlags.cs
	IEvidenceFactory.cs, IPermission.cs, ISecurityEncodable.cs,
	ISecurityPolicyEncodable.cs, IStackWalk.cs, NamedPermissionSet.cs,
	PolicyLevelType.cs, SecureString.cs, SecurityElement.cs, 
	SecurityZone.cs, UnverifiableCodeAttribute.cs, VerificationException.cs
	XmlSyntaxException.cs: Fix 2.0 beta2 API changes (which is mostly 
	adding ComVisible attributes to classes).

2005-06-01  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionBuilder.cs: Removed unification stuff. This is done at a 
	lower level.
	* SecurityManager.cs: Split loading PolicyLevel in two phases. The
	PolicyHierarchy is now available after phase 1 which ensures we can
	load permission from outside corlib.

2005-05-28  Sebastien Pouliot  <sebastien@ximian.com>

	* HostSecurityManager.cs: Added check for ActivationArguments in 
	application evidences.

2005-05-27  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Allow unrestricted identity permissions in
	2.0.
	* PermissionBuilder.cs: New. Internal class to help create permission
	instances from XML or with a fully qualified name. This class also 
	deals with unification.
	* PermissionSet.cs: Use PermissionBuilder to create permissions in 
	FromXml method. Many 2.0 fixes (mostly to support unrestricted 
	identity permissions)

2005-05-26  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Fix typo for PermitOnly. Added ComVisible 
	attribute for NET_2_0 profile.
	* PermissionSet.cs: Changed static string to const. Added ComVisible 
	attribute for NET_2_0 profile.
	* SecurityContext.cs: Capture the identity token but don't create a 
	WindowsIdentity instance unless required (e.g. Run). This requires 
	less privileges (so it runs better that way under CAS).

2005-05-25  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityException.cs: PermissionState isn't always serialized 
	(depending on the security policy) so it cannot always be deserialized
	too (and this must work without throwing exceptions).

2005-05-20  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityContext.cs: Includes more methods in NET_1_1 to enable 
	ThreadPool.UnsafeQueueUserWorkItem to work properly (i.e. without
	stack propagation).

2005-05-16  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSet.cs: Add support for "hidden" read-only mode (as used
	by PolicyStatement).
	* SecurityFrame.cs: Add some debugging code in the ToString method.
	* SecurityManager.cs: Changed internal API so we can display the 
	permission that failed in a PermissionSet (e.g. assembly or appdomain).

2005-05-11  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: GetZoneAndOrigin is present in 1.1 too (but is 
	hidden from mono-api-info because of the LinkDemand for ECMA key).

2005-05-09  Sebastien Pouliot  <sebastien@ximian.com> 
 
	* SecurityContext.cs: That was the wrong place to capture the stack.

2005-05-09  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityContext.cs: Capture the CompressedStack when the current 
	context one is empty.
	* SecurityManager.cs: Class is now static (2.0).
	* SecurityTreatAsSafeAttribute.cs: Fixed AttributeTargets.

2005-05-06  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Reworked frames check to check only for
	the stack modifiers. Throwing a SecurityException now calls Assembly.
	UnprotectedGetName () to avoid throwing (recursively) other 
	SecurityExceptions.
	* PermissionSet.cs: Reworked frames check to include Assembly (moved) 
	and AppDomain (new) transitions.
	* SecurityFrame.cs: Added Domain member to match the runtime structure
	definition. Removed debugging code (will be moved into the runtime 
	later) as it can cause SecurityException is some cases.
	* SecurityManager.cs: Added a method to check if a PermissionSet is
	granted by an AppDomain.

2005-04-28  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSetCollection.cs: Updated wrt beta2. Seems this will be
	removed before 2.0 final.
	* HostProtectionException.cs: Updated wrt beta2. Added TODO as it 
	isn't support by the runtime.
	* SecurityContext.cs: Updated wrt beta2. Class is now internal in 
	NET_1_1 to allow the compressed stack propagation to other threads.
	* SecurityCriticalAttribute.cs: Added support for property Scope.
	* SecurityException.cs: Removed PermitOnlySetInstance property to 
	match beta2.
	* SecurityTransparentAttribute.cs: Fixed AttributeUsage. Added TODO
	as it isn't support by the runtime.
	* SuppressUnmanagedCodeSecurityAttribute.cs: Added delegates to usage
	in NET_2_0.

2005-04-27  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityCriticalScope.cs: New. Enum introduced in 2.0 beta2.
	* SecurityTreatAsSafeAttribute.cs: New. Attribute introducted in 2.0
	beta2.

2005-04-25  Sebastien Pouliot  <sebastien@ximian.com>

	* HostSecurityManager.cs: Now refers to HostSecurityManagerOptions.
	* HostSecurityManagerFlags.cs: Renamed enum to 
	HostSecurityManagerOptions.

2005-03-31  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityException.cs: Added try/catch in GetObjectData because the
	PermissionState property is serialized only if both ControlEvidence 
	and ControlPolicy are granted.

2005-03-24  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Fixed PermitOnly when used in a set. Added
	an InheritanceDemand for ControlEvidence and ControlPolicy on the 
	class.
	* PermissionSet.cs: Added an InheritanceDemand for MS public key on 
	class.
	* SecurityException.cs: Moved PermissionType up in ToString as this
	property isn't restricted (i.e. will be part of the output even if
	the other properties can't make it).

2005-03-15  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Fixed depth for starting the stack walk
	(imperative) and fixed assert condition.
	* PermissionSet.cs: Fixed depth for starting the stack walk.
	* SecurityFrame.cs: Reversed stack. Added optional debugging code.

2005-03-14  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Fix CodeAccessPermissionTest.CustomCAS unit test
	when --security is enabled (code was over-optimized ;-).

2005-03-11  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Added methods to support reflection query and 
	invoke for LinkDemand and InheritanceDemand. Added method to do a
	stack walk (demand) when a p/invoking (called by JIT generated code).

2005-03-02  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs,
	* PermissionSet.cs: Don't throw NotSupportedException if the security 
	manager (SecurityManager.SecurityEnabled) is off.

2005-02-25  Sebastien Pouliot  <sebastien@ximian.com> 

	* CodeAccessPermission.cs: Implement Equals for NET_2_0 profile.
	* PermissionSet.cs: Added code to decode the metadata format used for
	declarative security in 2.0 (except enums and arrays now).
	* PermissionSetCollection.cs: Added code to decode from the new metadata
	format used for declarative security in 2.0.
	* SecurityManager.cs: Added support for LinkDemandChoice, Inheritance
	DemandChoice and DemandChoice (2.0). Added support for reflected 
	LinkDemand (promotes the demand to a full Demand).

2005-02-15  Sebastien Pouliot  <sebastien@ximian.com> 

	* SecurityException.cs: Show the method informations when displaying a
	SecurityException.
	* SecurityManager.cs: Reworked InheritanceDemand implementation. Added
	a new method to throw a SecurityException for an InheritanceDemand.

2005-02-10  Sebastien Pouliot  <sebastien@ximian.com> 
 
	* SecurityManager.cs: Reduced the number of parameters for LinkDemand.
	Removed a (forgotten) debugging message.

2005-02-10  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityException.cs: Show more information when a SecurityException
	occurs to help debugging.
	* SecurityManager.cs: Reworked LinkDemand implementation. Supply more
	informations when throwing a SecurityException for LinkDemand.
	* PermissionSet.cs: Remove (now) unused code for LinkDemand.

2005-02-08  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Updated code for LinkDemand (and it's special
	cases).

2005-01-27  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Process Deny for empty PermissionSet (e.g.
	an unrestricted permission set must deny all permissions).
	* SecurityException.cs: Added missing HResult to NET_2_0 constructors.
	Added securiy permissions for GrantedSet, RefusedSet and 
	PermissionState properties (to avoid leaking policy informations). 
	Make sure that ToString() always works.
	* SecurityManager.cs: Remove outdated comments (now that the 
	declarative attributes are in place).

2005-01-25  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Now use Environment.InternalGetFolderPath to
	avoid recursion when initializing security policies.

2005-01-24  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Made ThrowSecurityException static so it 
	can be reused from PermissionSet.
	* SecurityManager.cs: Use the new icalls for SecurityEnabled and
	CheckExecutionRights properties. Fix IsGranted for unrestricted 
	permissions. Set type correctly when loading policy files.
	* PermissionSet.cs: Now supports unrestricted permission set when
	evaluating demands.

2005-01-22  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityFrame.cs: Keep RuntimeDeclSecurityEntry enum in sync with
	runtime (added index to allow AOT to work with declarative security).

2005-01-19  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Fix the regressions on NET_1_1 introduced by my
	refactoring 10 days ago.

2005-01-11  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSet.cs: Simplified GetHashCode as two exact copies may 
	have different hash codes (documented as such). This fix some unit
	tests for 2.0.

2005-01-10  Sebastien Pouliot  <sebastien@ximian.com>

	* HostSecurityManager.cs: Fix signature as DetermineApplicationTrust
	doesn't return a boolean anymore.
	* SecurityElement.cs: The attributes and children elements are not
	indented in 2.0. This fix many unit tests that do string compares.
	* PermissionSetCollection.cs: We can't trust all IList implementations
	to throw the ArgumentOutOfRangeException - so we better do it here.

2005-01-09  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: CheckAssert, CheckDemand, CheckDeny and
	CheckPermitOnly are no more publicly avaiable in Fx 2.0 and have been
	changed to internal for all profiles. Updated comments to reflect the
	(better) documentation available with 2.0.
	* HostSecurityManager.cs: Updated to Dec CTP specs. There is missing
	documentation (and/or classes) to implement completly the 
	DetermineApplicationTrust method at this point.
	* PermissionSetCollection.cs: Completed implementation.
	* PermissionSet.cs: Fix the case where Assert, Deny and PermitOnly 
	must be ignored for non-CAS permissions.
	* SecurityManager.cs: Refactored resolve methods to implements 
	ResolveSystemPolicy (a resolve without the AppDomain policy level).
	Added a default implementation for GetZoneAndOrigin (empty ArrayList) 
	which seems to be right (at least) for FullTrust. 

2005-01-08  Sebastien Pouliot  <sebastien@ximian.com>

	* AllowPartiallyTrustedCallersAttribute.cs: Cleanup;
	* HostSecurityManagerFlags.cs: Updated flags for 2.0 Dec CTP.
	* SecurityCriticalAttribute.cs: New. New 2.0 attribute.
	* SecurityTransparentAttribute.cs: New. New 2.0 attribute.
	* SuppressUnmanagedCodeSecurityAttribute.cs: Cleanup;

2004-12-20  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Refactored to play more nicely with 
	PermissionSet and the new functionalities in the runtime.
	* PermissionSet.cs: Modified to use the new functionalities in the
	runtime. This allows the declarative stack modifiers to work in a 
	stack walk.
	* SecurityFrame.cs: New. This is the managed representation of the
	security informations associated with a stack frame. This current
	version only support declarative stack modifiers.
	* SecurityManager.cs: Modified to use the new functionalities in the
	runtime.

2004-11-30  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs:
	* NamedPermissionSet.cs:
	* PermissionSet.cs:
	* SecurityElement.cs:
	* SecurityException.cs:
		Added ComVisible attributes to match 2.0 October Preview.
	* SecureString.cs: Added an internal method to get the unencrypted 
	string (required to use the string inside mscorlib).

2004-10-19  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Changed private static methods to use a single
	parameter (as method permissions overrides class permissions for
	demand, assert, deny and permitonly).

2004-10-15  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Implemented stubs (soon to be icalls) to
	get/set/clear the current security frame on the stack. Implemented
	Assert, Deny and PermitOnly with the new methods. Changed Demand to
	use the CheckAssert, CheckDeny, CheckPermitOnly and CheckDemand 
	introduced in 2.0.
	* PermissionSet.cs: Fixed IsEmpty using documentation from 2.0 beta 1.
	Implemented immediate (i.e. no stack walk) caller demand (CAS and 
	non-CAS) required for LinkDemand and InheritanceDemand. Implemented
	Assert, Deny and PermitOnly using CodeAccessPermission new methods.
	Re-implement Demand to separate CAS and non-CAS permissions.
	* SecurityManager.cs: Added new private static methods that will 
	either be called by the JIT (linkdemand), runtime (inheritancedemand)
	or by code emitted by the JIT (demand, assert, deny and permitonly).

2004-10-15  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityException.cs: Provide more details when a security exception
	is raised (to help debugging).

2004-09-02  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSet.cs: Updated to match latest unit tests, i.e. match
	Fx 1.1 on NET_1_1 and Fx 2.0 (beta 1) in NET_2_0.
	* SecurityElement.cs: FromString is now internal before NET_2_0.

2004-09-01  Sebastien Pouliot  <sebastien@ximian.com>

	* NamedPermissionSet.cs: FromXml now calls base class instead of an
	internal method of PermissionSet. This should allow class to inherit
	from NamedPermissionSet properly.
	* PermissionSet.cs: Added an internal PolicyLevel property to allow
	policy file class name resolution. Fixed IsEmpty to return true if
	the list contains "empty" permissions. Fixed Copy to copy permissions
	even for unrestricted sets (again because of IUnrestrictedPermission).
	* SecurityManager.cs: Fixed Resolve(Evidence) because permission 
	classes	Intersect methods can either return null or an empty 
	PermissionSet.  Fixed ResolvePolicy(Evidence[]) for null (NET_2_0).

2004-08-31  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSet.cs: Fixed RemovePermission and Intersect (due to typos
	in unit tests). Fixed SetPermission (null).

2004-08-30  Sebastien Pouliot  <sebastien@ximian.com>

	* NamedPermissionSet.cs: Fixed Description in copies, GetHashCode and
	Equals (for NET_2_0). Fixed handling of null Name when deserialized 
	from XML.
	* PermissionSet.cs: AddPermission now unions permissions of the same
	type. CopyTo throw (most) exceptions only if there are items in the
	set. Implemented Demand (but without support for Assert, Deny and 
	PermitOnly). Fixed deserialized from XML when no class is specified.
	Started implementation of ConvertPermissionSet (error cases). Fixed
	Intersect to be compatible (including bugs like FDBK14612) with MS.
	RemovePermission now compatible with MS (bug? FDBK14622). Fixed Union
	to work with permissions that do not implement IUnrestrictedPermission.

2004-08-26  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityElement.cs: Fixed the new Copy() in Fx 2.0 as it isn't a 
	deep copy. Throw proper exceptions in FromString (Fx 2.0).
	* SecurityManager.cs: Throw a NullReference exception in 
	SavePolicyLevel as MS won't fix it (FDBK13121).

2004-08-19  Atsushi Enomoto  <atsushi@ximian.com>

	* CodeAccessPermission.cs : csc build fix. Currently mcs has bugs on
	  CS0136 error detection (variable identifiers in switch cases share
	  the scope).

2004-08-17  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Added common methods to help building all
	Permissions classes in corlib. Most are declared static as they can 
	also help non CodeAccessPermission-derived permissions.

2004-08-12  Sebastien Pouliot  <sebastien@ximian.com>

	* SecurityManager.cs: Change ResolvePolicy to only care about host
	provided evidence to create identity permissions.
	* SecurityContextSwitcher.cs: Added missing [ReliabilityContract] to 
	Undo method.

2004-08-11  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Basic implementation for Demand (without
	full stack trace, i.e. Assert, Deny and PermitOnly aren't considered).
	Added TODO to unimplemented NET_2_0 methods.
	* HostSecurityManager.cs: Added comments (as it looked not implemented
	even to myself).
	* PermissionSet.cs: Fixed Unrestricted when copied. Changed exception
	ordering in Copy (ArgumentNullException couldn't work). Made IsEmpty
	more robust.
	* SecurityManager.cs: Implemented IsGranted using Assembly.Demand. 
	Basic implementation for policy resolution.

2004-08-03  Sebastien Pouliot  <sebastien@ximian.com>

	* PermissionSetCollection.cs: New class in Fx 2.0.
	* SecureString.cs: New class in Fx 2.0. Not yet encrypted.

2004-08-02  Sebastien Pouliot  <sebastien@ximian.com>

	* PolicyTypeLevel.cs: Removed duplicate license.
	* SecurityManager.cs: Moved secuirty demands as attributes (but mcs 
	doesn't seem to encode them properly as they show up in corcompare).
	Implemented IsGranted, ResolvePolicy (but some code is still missing
	in related classes) and SavePolicy/SavePolicyLevel.

2004-07-14  Sebastien Pouliot  <sebastien@ximian.com>

	* CodeAccessPermission.cs: Added CheckAssert, CheckDemand, CheckDeny,
	CheckPermitOnly, Equals and GetHashCode to NET_2_0 profile. Actualized
	TODOs. Removed duplicate license.
	* NamedPermissionSet.cs: Added Equals/GetHashCode to NET_2_0 profile.
	Removed duplicate license.
	* PermissionSet.cs: Added Equals/GetHashCode to NET_2_0 profile. 
	Removed duplicate license.
	* SecurityElement.cs: Added Copy and FromString methods to NET_2_0 
	profile. Removed duplicate license.
	* SecurityException.cs: Added new constructors and properties to 
	NET_2_0 profile. Removed duplicate license.
	* SecurityManager.cs: Added GetZoneAndOrigin and ResolvePolicy to 
	NET_2_0 profile. Removed duplicate license.
	* VerificationException.cs: Implements _Exception for NET_2_0 profile.
	Removed duplicate license.
	* XmlSyntaxException.cs: Implements _Exception for NET_2_0 profile. 
	Removed duplicate license.

2004-07-14  Sebastien Pouliot  <sebastien@ximian.com>

	* HostProtectionException.cs: New class in Fx 2.0.
	* HostSecurityManager.cs: New class in Fx 2.0.
	* HostSecurityManagerFlags.cs: New enum in Fx 2.0.
	* SecurityContext.cs: New class in Fx 2.0.
	* SecurityContextSwitcher.cs: New structure in Fx 2.0.

2004-06-15  Gert Driesen <drieseng@users.sourceforge.net>

	* XmlSyntaxException.cs: added missing serialization ctor
	* SecurityException.cs: fixed typo

2004-03-05  Atsushi Enomoto <atsushi@ximian.com>

	* SecurityElement.cs : ignore prefix; this enables RSA.FromXmlString()
	  to allow namespaced elements.

2004-01-27  Sebastien Pouliot  <spouliot@videotron.ca>

	* SecurityElement.cs: Attributes are now kept in an ArrayList (but
	still returned in an Hashtable) so the attributes order can be
	kept like MS implementation (but Hashtable cannot guarantee this).

2004-01-26  Sebastien Pouliot  <spouliot@videotron.ca>

	* NamedPermissionSet.cs: Changed internal constructor 
	NamedPermissionSet (SecurityElement e) to NamedPermissionSet ().
	* PermissionSet.cs: Changed internal constructor 
	PermissionSet (SecurityElement e) to PermissionSet ().

2004-01-24  David Sheldon <dave-mono@earth.li>

       * SecurityElement.cs: Changed indentation in ToString, it seems
        MS indent by 3 spaces, not 4. Also added NewLine to childless 
	elements.

2004-01-24  David Sheldon <dave-mono@earth.li>

       * SecurityElement.cs: Changed newline distribution in ToString.
         Matches MS better.

2004-01-06  Sebastien Pouliot  <spouliot@videotron.ca>

	* CodeAccessPermission.cs: Fixed Demand for custom permissions 
	(permissions that do not implement, the internal, IBuiltInPermission).
	Ref. http://bugzilla.ximian.com/show_bug.cgi?id=52626
	* SecurityException.cs: Fixed ToString() which could, when no 
	PermissionType where specified, throws a NullReferenceException.
	Ref. http://bugzilla.ximian.com/show_bug.cgi?id=52626

2004-01-05  Sebastien Pouliot  <spouliot@videotron.ca>

	* CodeAccessPermission.cs: Fixed Union to match 1.1/1.2 documentation. 
	Simplified ToString to match MS implementation. Added LAMESPEC to 
	Assert, Demand, Deny and PermitOnly as they aren't virtual.
	* NamedPermissionSet.cs: Added internal constructor for PolicyLevel. 
	* PermissionSet.cs: Added internal constructor for PolicyLevel. 
	* SecurityManager.cs: Moved some stuff to PolicyLevel class (e.g. Load).

2004-01-03  Sebastien Pouliot  <spouliot@videotron.ca>

	* SecurityManager.cs: Added some basic stuff to make some security unit
	tests works (mostly when using PolicyHierarchy).

2004-01-02  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllowPartiallyTrustedCallersAttribute.cs: Fixed AttributeUsage using
	1.2 documentation (AllowMultiple=false, Inherited=false)
	* NamedPermissionSet.cs: Changes to match unit tests.
	* PermissionSet.cs: Implemented Copy, Intersect, IsSubsetOf and Union 
	methods. Corrected FromXml.
	* PolicyLevelType.cs: Added missing [Serializable].
	* SecurityElement.cs: Fixed constructor to match unit tests.
	* SecurityException.cs: Added support for GrantedSet and RefusedSet 
	properties (since 1.1). Set HResult to 0x8013150A.
	* SecurityZone.cs: Added missing [Serializable].
	* SuppressUnmanagedCodeSecurityAttribute.cs: Fixed AttributeUsage using
	1.2 documentation (AllowMultiple=true, Inherited=false)
	* UnverifiableCodeAttribute.cs: Fixed AttributeUsage using 1.2 
	documentation (AllowMultiple=true, Inherited=false)

2003-06-29  Sebastien Pouliot  <spouliot@videotron.ca>

	* PermissionSet.cs: Added missing "virtual" to Count, IsSynchronized 
	and SyncRoot.

2003-06-29  Nick Drochak  <ndrochak@gol.com>

	* NamedPermissionSet.cs : Fix buglet/typo/thinko. Thank you unit tests.

2003-06-28  Sebastien Pouliot  <spouliot@videotron.ca>

	* CodeAccessPermission.cs: Added missing methods. Removed old XML
	documentation (present in monodoc). Added missing MonoTODO attrs.
	* NamedPermissionSet.cs : Changed some code from result of unit 
	tests. Updated MonoTODO attributes.
	* PermissionSet.cs: Added missing methods. Removed old XML
	documentation (present in monodoc). Added missing MonoTODO attrs.
	Added code to some methods.
	* SecurityManager.cs: Added missing MonoTODO attributes.

2003-05-09  Sebastien Pouliot  <spouliot@videotron.ca>

	* AllowPartiallyTrustedCallersAttribute.cs: New. Class was missing
	from original 1.0 documentation (but inclufed in framework 1.0)

2002-06-10  Duncan Mak  <duncan@ximian.com>

	* IEvidenceFactory.cs (Evidence): Added missing method.
	
	* SuppressUnmanagedCodeSecurityAttribute.cs:
	* UnverifiableCodeAttribute.cs: Added missing
	AttributeUsage attribute.

2002-06-05  Nick Drochak  <ndrochak@gol.com>

	* SecurityElement.cs: Fixed couple of hard to spot typos which were
	causing valid names and keys to be rejected.

2002-04-28  Lawrence Pit <loz@cable.a2000.nl>

	* CodeAccessPermission.cs : implemented ToString method

2002-04-27  Lawrence Pit <loz@cable.a2000.nl>

	* SecurityElement.cs: fixed bugs, implemented several methods

2002-03-12  Duncan Mak  <duncan@ximian.com>

	* SecurityException.cs: Inherit from SystemException, not Exception.

2002-02-23  Nick Drochak  <ndrochak@gol.com>

	* SecurityElement.cs: fixed typo

2002-02-13  Dan Lewis <dihlewis@yahoo.co.uk>
	
	* NamedPermissionSet.cs: New file (stub)

2002-02-07  Duncan Mak  <duncan@ximian.com>

	* SecurityException.cs: Reformatted to fit the form of other
	Exceptions. Added serialization bits.

2002-01-05  Ravi Pratap  <ravi@ximian.com>

	* SecurityElement.cs : Insert MonoTODO attribute.

2002-01-02  Nick Drochak  <ndrochak@gol.com>

	* CodeAccessPermission.cs: Fix syntax error hidden by exclusion in .build file

2001-12-30  Nick Drochak  <ndrochak@gol.com>

	* PermissionSet.cs SecurityManager.cs: New Files
	* CodeAccessPermission.cs: Add Skeleton code
	* IPermission.cs: Make public and inherit from ISecurityEncodable 
	* ISecurityEncodable.cs: Make interface public
	* ISecurityPolicyEncodable.cs: Ditto
	* IStackWalk.cs: Ditto

2001-12-29  Nick Drochak  <ndrochak@gol.com>

	* ISecurityPolicyEncodable.cs, PolicyLevelType.cs, 
	SecurityZone.cs, SecurityException.cs, UnverifiableCodeAttribute.cs,
	SuppressUnmanagedCodeSecurityAttribute.cs,
	VerificationException.cs, XmlSyntaxException.cs: New files

2001-12-21  Miguel de Icaza  <miguel@ximian.com>

	* SecurityElement.cs, CodeAccessPermission.cs IPermission.cs
	IStackWalk.cs SecurityElement.cs ISecurityEncodable.cs: New files.
	
