2011-05-05  Veerapuram Varadhan  <v.varadhan@gmail.com>

	** Fixes #663287
	* NullableConverter.cs (ConvertTo): Compare the type of value
	against underlyingType instead of nullableType.
	
2010-07-19  Marek Habersack  <mhabersack@novell.com>

	* MultilineStringConverter.cs: implemented

2010-06-29  Sebastien Pouliot  <sebastien@ximian.com>

	* ComplexBindingPropertiesAttribute.cs:
	* DefaultBindingPropertyAttribute.cs:
	* DefaultEventAttribute.cs:
	* DefaultPropertyAttribute.cs:
		Fix GetHashCode so that values are equals if Equals 
		return true
	* DesignTimeVisibleAttribute.cs: Fix default value for Visible.

2010-06-25  Alan McGovern  <amcgovern@novell.com>

	* TypeConverter_2_1.cs: Implement ConvertToString as per docs and
	moonlight tests.

2010-05-21  Sebastien Pouliot  <sebastien@ximian.com>

	* AsyncOperation.cs: Add checks for null delegates
	* BackgroundWorker.cs: Ensure ProgressChanged can be called before
	starting the work but not after its complete

2010-05-20  Sebastien Pouliot  <sebastien@ximian.com>

	* DefaultValueAttribute.cs: Two instances where DefaultValue == 
	null are equal so they *must* return the same hash code

2010-03-20  Miguel de Icaza  <miguel@novell.com>

	* TypeDescriptor.cs: Remove warning.

2010-03-16  Jb Evain  <jbevain@novell.com>

	* TypeConverter_2_1.cs, ComponentCollection.cs,
	PropertyDescriptor.cs: use MOONLIGHT symbol to disambiguate
	MonoTouch and Moonlight code.

2010-02-05  Carlos Alberto Cortez <calberto.cortez@gmail.com>

	* MaskedTextProvider.cs: In ToString() if we are a password, use the
	prompt char in the places where no char has been filled in yet, instead of
	putting the password char.
	Fixes #360407.

2010-01-15  Alexandre Gomes  <alexmipego@gmail.com>

	* BaseNumberConverter.cs: Fixed CanConvertTo and ConvertTo when
	targeting primitive types.

2009-12-08  Marek Habersack  <mhabersack@novell.com>

	* TypeDescriptor.cs: AddProvider overloads must refresh the
	instance and type when called.
	If GetProvider (object) fails to look up provider for the passed
	instance, it attempts to look up provider for the instance's
	type.
	GetProvider (Type) looks for providers using all the parent types
	of the passed type if no provider for it is found.
	WrappedTypeDescriptionProvider.GetTypeDescriptor chains up to the
	wrapped type, if present.

	* TypeDescriptionProvider.cs: GetTypeDescriptor properly returns
	the value obtained from parent in GetTypeDescriptor.

2009-11-30  Sebastien Pouliot  <sebastien@ximian.com>

	* TypeConverterAttribute.cs: Add missing [ComVisible] for SL2/3 builds

2009-10-14  Jonathan Pryor  <jpryor@novell.com>

	* TypeConverter_2_1.cs: Skip this type in the MonoTouch profile;
	  MonoTouch will be using the 2.0 version of TypeConverter.
	* ComponentCollection.cs, PropertyDescriptor.cs: MonoTouch uses the
	  .NET 2.0 versions of these types.

2009-09-29  Alan McGovern  <amcgovern@novell.com>

	* DefaultValueAttribute.cs: Implement the cctor which takes
	a Type and a string for the SL2 case.
	* CategoryAttribute.cs: Fix a typo in the CategoryAttribute.Asynchronous
	ctor and fix some SL2 specific naming changes for the default properties.

2009-09-24  Ivan N. Zlatev  <contact@i-nz.net>

	* EnumConverter.cs: Fix conversion of 0 flag values.
	[Fixes bug #541402]

2009-07-22  Jb Evain  <jbevain@novell.com>

	* ExpandableObjectConverter.cs: no method to override for a NET_2_1 profile.

2009-07-20  Tom Hindle <tom_hindle@sil.org>

	* Container.cs: Replaced for loop with for loop.
	[Fixes bug #522474]

2009-07-19  Gert Driesen  <drieseng@users.sourceforge.net>

	* Container.cs: Use generic list on 2.0 profile, and avoid using var
	on 1.0 profile. Use for loop instead of while in Dispose to avoid
	accessing count on each iteration.

2009-07-19  Gert Driesen  <drieseng@users.sourceforge.net>

	* Container.cs: Avoid NRE in Remove and RemoveWithoutUnsiting.

2009-07-18  Gert Driesen  <drieseng@users.sourceforge.net>

	* Container.cs: Changed Dispose(bool) behaviour to match .NET, based
	on patch by Tom Hindle (tom_hindle@sil.org). Also use ValidateName
	in Add overloads on 1.0 profile by making it available as private
	method. Use case-insensitive comparison of component name.

2009-06-29 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* LicenseProviderAttribute.cs: avoid nullref when provider has not
	been set or cannot be loaded.

2009-06-23  Marek Habersack  <mhabersack@novell.com>

	* TypeDescriptor.cs: do not wrap DefaultTypeDescriptionProvider.
	Implemented GetAttributes and GetProperties in
	DefaultTypeDescriptor.

	* AttributeCollection.cs: make sure that attrList is never null.

2009-06-22  Marek Habersack  <mhabersack@novell.com>

	* WeakObjectWrapper.cs, WeakObjectWrapperComparer.cs: added - used
	by TypeDescriptor for storage of type description providers.

	* TypeDescriptor.cs: implemented part of the 2.0+ API which deals
	with adding/removing/getting type description providers.

	* AttributeCollection.cs: do not throw NREX when attrList is
	null in Count.

2009-05-14  Jonathan Pryor  <jpryor@novell.com>

	* ListChangedEventArgs.cs: Fix .NET compatibility problems (discovered
	  from trying to run the System.Data.Linq unit tests).

2009-04-22 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Win32Exception.cs: made W32ErrorMessage internal.

2009-02-28  Zoltan Varga  <vargaz@gmail.com>

	* EventHandlerList.cs: Change this to use a linked list as stated by the
	MSDN docs.

2009-02-27  Rodrigo Kumpera  <rkumpera@novell.com>

	* ReflectionPropertyDescriptor.cs: Don't cache getter and
	setter properties. Cache instead the PropertyInfo objects
	that defined them.

	PropertyInfo::Get/SetValue is faster than calling the method
	throught reflection.	

2009-02-21  Kornél Pál  <kornelpal@gmail.com>

	* EventHandlerList.cs: Fix profile 1.x build by not using HandlerEntry.

2009-02-21 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* EventHandlerList.cs: there's no need for HandlerEntry here.
	Just store the delegate.

2009-02-19  Marek Habersack  <mhabersack@novell.com>

	* AttributeCollection.cs: this [Type] shouldn't throw a NREX when
	attrList is null.

	* TypeDescriptor.cs: GetConverter (Type) must throw
	ArgumentNullException if the passed parameter is null.
	FindDefaultConverterType should gracefully cope with type being
	null.

2009-01-09  Ivan N. Zlatev  <contact@i-nz.net>

	* BindingList.cs: Add calls InsertItem which raises OnListChanged, so 
	don't raise a duplicate OnListChanged in AddNewCore.

2008-12-22  Ivan N. Zlatev  <contact@i-nz.net>

	* ReferenceConverter.cs: Implemented.
	[Fixes bug #381435]

2008-12-06  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: Added support for NullableConverter.

2008-12-06  Ivan N. Zlatev  <contact@i-nz.net>

	* NullableConverter.cs: Implemented.

2008-12-06  Ivan N. Zlatev  <contact@i-nz.net>

	* ListSortDescriptionCollection.cs: Add the items supplied in the 
	ctor to the internal list.

2008-11-21  Rolf Bjarne Kvinge  <rkvinge@novell.com>

	* TypeConverter_2_1.cs: fix method signatures to match SL2 api.

2008-11-20  Jb Evain  <jbevain@novell.com>

	* TypeConverter_2_1.cs: update to SL2 api.

2008-11-12  Jb Evain  <jbevain@novell.com>

	* IComponent.cs
	* ComponentCollection.cs
	* PropertyDescriptor.cs: adjust api for NET_2_1.

2008-09-08  Jonathan Pobst  <monkey@jpobst.com>

	* BackgroundWorker.cs: If the user sets Cancel to true, but then
	throws an exception in DoWork, we need to set Cancel back to false.
	[Fixes bug #328830]

2008-09-01  Rodrigo Kumpera  <rkumpera@novell.com>

	* ReflectionPropertyDescriptor.cs (SetValue, GetValue) : Lookup
	the MethodInfo for accessors in parent types in case of partial
	overrides of virtual properties.

2008-08-07  Sebastien Pouliot  <sebastien@ximian.com>

	* DefaultValueAttribute.cs: Fix Equals (wrt boxing) and 
	GetHashCode (wrt NRE on null Value).
	* PropertyChangedEventArgs.cs: Property PropertyName is not
	virtual for NET_2_1

2008-07-31  Jb Evain  <jbevain@novell.com>

	* BackgroundWorker.cs
	* DoWorkEventArgs.cs
	* DefaultValueAttribute.cs
	* RunWorkerCompletedEventArgs.cs: clean up for NET_2_1.

	* TypeConverter_2_1.cs: new specific type for NET_2_1.

2008-07-23  Marek Habersack  <mhabersack@novell.com>

	* EventHandlerList.cs: optimize the implementation.

2008-07-17  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: Attributes precendence (higher to lower) 
	should be type -> base types -> interfaces and not 
	type -> interfaces -> base types.

2008-07-17  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: 
	 - Refactor the default converters table not to be a Hashtable, 
	 because the order of the keys is not preserved.
	 - Fix FindDefaultConverterType to properly make use of the default 
	 converters.

2008-07-16  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: 
	 - Fix GetConverter (Type) overload to have same logic as the 
	 object one.
	 - Object-ReferenceConverter should be the last entry in the predefined 
	 converters table, so that when we look up we don't end up with the wrong 
	 converter for derived types.

2008-07-16  Jonathan Pobst  <monkey@jpobst.com>

	Apply patch from Achille Fouilleul (achille.fouilleul at gadz dot org)

	* BackgroundWorker.cs: Ensure the async object is set to null before
	calling RunWorkerCompleted, as IsBusy is based off the async object.
	[Fixes bug #394365]

2008-07-16  Jonathan Pobst  <monkey@jpobst.com>
	
	Apply patches from Jordan Callicoat (MonkeeSage at gmail dot com)

	* AsyncCompleteEventArgs.cs: RaiseExceptionIfNecessary should throw
	TargetInvocationException if there was an exception, and IOE if
	the operation was cancelled.
	* BackgroundWorker.cs: Do not call RunWorkerCompleted from CancelAsync,
	setting cancel_pending to true is enough.
	* RunWorkerCompletedEventArgs.cs: Raise exceptions when user tries
	to access the Result if there are any exceptions.
	[Fixes bugs #328830 and 373153]

2008-07-01  Rodrigo Kumpera  <rkumpera@novell.com>

	* PropertyDescriptorCollection.cs : Kill some foreach loops.

2008-06-27  Atsushi Enomoto  <atsushi@ximian.com>

	* PropertyDescriptorCollection.cs : huh.

2008-06-27  Gert Driesen  <drieseng@users.sourceforge.net>

	* EventDescriptorCollection.cs: Fixed Empty to return read-only
	collection. In a read-only collection, throw NotSupportedException
	instead of InvalidOperationException when attempting to modify the
	collection. Fixed find to use ordinal comparison on 2.0 profile.
	Fixed IList's IsFixedSize and IsReadOnly.
	* PropertyDescriptorCollection.cs (Find): Use key as argument name
	when name is null. Silly compatiblity fix. 

2008-06-27  Gert Driesen  <drieseng@users.sourceforge.net>

	* EventDescriptorCollection.cs: Fixed NRE in Sort overloads when order
	string array is null.
	* PropertyDescriptorCollection.cs: Fixed NRE in Sort overloads when
	order string array is null.

2008-06-27  Ivan N. Zlatev  <contact@i-nz.net>

	* PropertyDescriptorCollection.cs, EventDescriptorCollection.cs, 
	MemberDescriptor.cs: Implement proper sorting of descriptors by 
	comparing their names.
	[Fixes bug #403882]

2008-06-25  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: Fix a NRE.
	[Fixes bug #403880]

2008-06-11  Atsushi Enomoto  <atsushi@ximian.com>

	* DateTimeConverter.cs : use MM for month instead of mm.
	  Fixed bug #396649, patch by Andy Hume.

2008-06-02  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Turn W32ErrorMessage into an icall so it can
	use the FormatMessage API.  Fixes bug 321827.

2008-06-02  Ivan N. Zlatev  <contact@i-nz.net>

	* MemberDescriptor.cs, PropertyDescriptor.cs, 
	ReflectionPropertyDescriptor.cs: Implement FillAttributes.
	* MemberDescriptor.cs: 
	 - Attributes should be checked for duplicates based on their 
	 TypeId and not Type.
	 - For duplicate attributes the last one added has higher precedence.
	* ReflectionPropertyDescriptor.cs: Use the property type supplied 
	in the ctor instead of using reflection, because this won't work if 
	there are more then one property with the same name.

2008-05-29  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: GetAttributes must retrieve the attributes of 
	the type, the base types and the interfaces the type implements.
	[Fix part of bug #394310]

2008-05-21  Atsushi Enomoto  <atsushi@ximian.com>

	* INotifyPropertyChanging.cs, PropertyChangingEventArgs.cs,
	  PropertyChangingEventHandler.cs : new types in 2.0 SP1.

2008-05-19  Sebastien Pouliot  <sebastien@ximian.com>

	* CharConverter.cs,
	* DateTimeConverter.cs,
	* GuidConverter.cs,
	* TimeSpanConverter.cs: Avoid unboxing structs more than one time.
	[Found using Gendarme]

2008-05-05  James Fitzsimons <james.fitzsimons@gmail.com>

	* TypeDescriptor.cs: GetProperties should not return write-only 
	properties.

2008-04-26  Jb Evain  <jbevain@novell.com>

	* PropertyTabAttribute.cs, BindingList.cs: replace
	usages of new Type [0] with Type.EmptyTypes.
	Found with Gendarme.

2008-04-16  Marek Habersack  <mhabersack@novell.com>

	* ReferenceConverter.cs: fix ConvertFrom and ConvertTo when
	converting from/to string - base must be called only if the
	conversion target type is NOT string, otherwise the result of the
	conversion will be the value type name.

2008-04-13  Jb Evain  <jbevain@novell.com>

	* TypeDescriptor.cs: internalize method AddEditorTable
	for the 2.1 profile.
	Merged from the Moonlight 2 branch.

2008-04-07  Ivan N. Zlatev  <contact@i-nz.net>

	* ReflectionPropertyDescriptor.cs: ReadOnlyAttribute has a Default, 
	so there is no need for a null reference check. Fixes the attr_ro unused 
	value warning during compilation.

2008-03-28  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: Do not return parent type properties, where the child 
	has used "new" and also changed the property return type. The problem was that
	Type.GetProperties returns both the child and parent property in this case.
	[Fixes bug #374334]

2008-03-19  Ivan N. Zlatev  <contact@i-nz.net>

	* PropertyTabAttribute.cs: Implement Equals, bugfixes and refactorings.

2008-03-15  Gert Driesen  <drieseng@users.sourceforge.net>

	* DesignerAttribute.cs: To match MS, throw NRE when designerTypeName
	argument is null in ctors.

2008-03-13  Ivan N. Zlatev  <contact@i-nz.net>

	* DesignerAttribute.cs: For the TypeId strip type name only 
	of the base type to prevent AssemblyQualifiedName and not clashes.
	* TypeDescriptor.cs: GetAttributes should ask for the inherited
	attributes. I was wrong.

2008-03-10  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: GetAttributes should not ask the Type
	for the inherited attributes. Until recently it didn't 
	make a difference if we did or not, because 
	Type.GetCustomAttributes never returned inherited such.

2008-03-06  Ivan N. Zlatev  <contact@i-nz.net>

	* Container.cs: On disposal unsite the component first before 
	disposing in order to prevent it from asking us to remove it 
	through the Site property.
	[Fixes bugs #367653 and #367583]

2008-03-01  Ivan N. Zlatev  <contact@i-nz.net>

	* Component.cs: Do not set the Site to null on disposing as this 
	is the Containers job. Instead try to remove from Container if sited.

2008-02-26  Gert Driesen  <drieseng@users.sourceforge.net>

	* CharConverter.cs: Use trimmed value in FormatException.

2008-02-26  Ivan N. Zlatev  <contact@i-nz.net>

	* PropertyDescriptor.cs: 
	 - Implement CreateInstance and GetTypeFromName
	 and refactor GetEditor and Converter use them.
	 - Drop TypeDescriptor.GetTypeFromName as we also want to check the
	 ComponentType assembly, which it doesn't do.
	* TypeDescriptor.cs: Make GetTypeFromName private as it is no longer
	used from the outside.

2008-02-26  Ivan N. Zlatev  <contact@i-nz.net>

	* ReflectionPropertyDescriptor.cs: Use Attribute.GetCustomAttributes
	instead of PropertyInfo.GetCustomAttributes as the latter will not 
	retrieve inherited attributes.
	[Fixes bug #322464]

2008-02-17  Gert Driesen  <drieseng@users.sourceforge.net>

	* CharConverter.cs (ConvertFrom): Avoid NRE when value is null.
	Provide more info when left of value > 1.
	* CultureInfoConverter.cs (ConvertFrom): Avoid NRE when value is null.
	On 2.0 profile, use case-sensitive comparison for (Default) value.
	Use case-insensitive comparing when value is considered as displayname.
	Provide more info in exception message.
	(ConvertTo): Use '(Default)' instead of '(default)' for invariant
	culture.

2008-02-16  Ivan N. Zlatev  <contact@i-nz.net>

	* CharConverter.cs: 
	 - Handle \0 char.
	 - Trim the ConvertFrom string
	 - Handle null string in ConvertFrom as \0 char.
	 [Fixes bug #362112]

2008-02-16  Ivan N. Zlatev  <contact@i-nz.net>

	* CultureInfoConverter.cs:
	 - Handle "(default)" to and from conversion
	 - Sort cultures alphabetically and also cache them.
	 [Fixes bug #362113]

2008-02-16  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs, PropertyDescriptor.cs: 
	Do not throw when can't find Type from string.
	* ReferenceConverter.cs: Convert null value from and to string.
	Return an empty StandardValueCollection.
	[Part of fix for bugs #360666 and #358332]

2008-02-04  Ivan N. Zlatev  <contact@i-nz.net>

	 * DateTimeConverter.cs: handle empty strings in ConvertFrom.

2008-01-19  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* MaskedTextProvider.cs: Fix IsPassword (found by Gendarme)

2008-01-07  Sebastien Pouliot  <sebastien@ximian.com>

	* CultureInfoConverter.cs: Gendarme's AvoidToStringOnStringsRule in
	ConvertFrom method.
	* DesignerAttribute.cs: Gendarme's AvoidToStringOnStringsRule in 
	TypeId getter.

2008-01-04  Ivan N. Zlatev  <contact@i-nz.net>

	* ReflectionPropertyDescriptor.cs: Create Transactions with 
	descriptions when setting/resetting the property.

2008-01-03  Gert Driesen  <drieseng@users.sourceforge.net>

	* Component.cs: Moved Site property before Container to match MS. This
	allows a unit test for ordered result of TypeDescriptor.GetProperties
	to pass.

2008-01-03  Vladimir Krasnov  <vladimirk@mainsoft.com>

	* TypeDescriptor.cs: fixed properties order in returning collections
	in PropertyDescriptorCollection

2007-12-25  Vladimir Krasnov  <vladimirk@mainsoft.com>

	* PropertyDescriptorCollection.cs: optimized Find method, removed
	culture sensitive string comparison

2007-12-19  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Add text for error 5, Access denied.

2007-12-04  Arina Itkes <arinai@mainsoft.com>

	* WarningException.cs: 
	  Changes for SOAP serialization compatibility with .NET. 

2007-12-04  Gert Driesen  <drieseng@users.sourceforge.net>

	* Win32Exception.cs: Do not pass native error to base ctors.

2007-11-15  Gert Driesen  <drieseng@users.sourceforge.net>

	* MemberDescriptor.cs: Spaces to tabs, code formatting.
	* PropertyDescriptor.cs: When adding or removing a new handler for an
	existing component, update the hashtable. In GetValueChangedHandler,
	return null if component is null.

<2007-11-12  Atsushi Enomoto  <atsushi@ximian.com>

	* PropertyDescriptor.cs : implement GetValueChangedHandler().
	* ToolboxItemFilterAttribute.cs : implement ToString().

2007-11-03  Gert Driesen  <drieseng@users.sourceforge.net>

	* InvalidEnumArgumentException.cs: Fixed default ctor. Modified
	message on 2.0 profile for ctor (string, int, Type) to match MS.

2007-10-29  Atsushi Enomoto  <atsushi@ximian.com>

	* AttributeCollection.cs : implemented FromExisting().
	* Container.cs : implemented ValidateName() support.
	* ContainerFilterService.cs : FilterComponents() does nothing.
	* InstanceCreationEditor.cs : implemented get_Text().

2007-09-27  Atsushi Enomoto  <atsushi@ximian.com>

	* TypeDescriptor.cs : added missing ObsoleteAttribute.
	* MemberDescriptor.cs, PropertyDescriptor.cs :
	  implemented GetInvocationTarget().

2007-09-25  Jonathan Pobst  <monkey@jpobst.com>

	* AsyncOperationManager.cs: Tie the SynchronizationContext here to
	SynchronizationContext.Current.

2007-09-17  Gert Driesen  <drieseng@users.sourceforge.net>

	* ComponentResourceManager.cs: In ApplyResources, when culture is
	null use CurrentUICulture. Use hashtable, which is case-insensitive
	when IgnoreCase is true, to store the resources of the specified
	culture and its parent(s). When IgnoreCase is set, perform a
	case-insensitive lookup of property. Ignore resources that have no
	value, or where the value is not an instance of the property type.
	Fixes bug #82674.

2007-09-05  Gert Driesen  <drieseng@users.sourceforge.net>

	* EnumConverter.cs: Added support for converting flag enum from
	string.

2007-08-31  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeConverter.cs: Fixed GetConvertFromException and
	GetConvertToException to match MS, and use these in ConvertFrom and
	ConvertTo.
	* EnumConverter.cs: Use IsFlags instead of duplicating code that
	checks for FlagsAttribute. When converting to InstanceDescriptor and
	no corresponding enum field is found, then let base class throw a
	NotSupportedException.

2007-08-30  Ivan N. Zlatev  <contact@i-nz.net>
	
	* EnumConverter.cs: Implemented conversion to InstanceDescriptor
	for enums with a FlagsAttribute. Fixes #82118.

2007-08-29  Ivan N. Zlatev  <contact@i-nz.net>

	* DesignerOptionService.cs: implemented.
	* ITreeDesigner.cs: implemented.

2007-08-25  Ivan N. Zlatev  <contact@i-nz.net>

	* NestedContainer.cs: implemented.

2007-08-25  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptionProvider.cs: implemented.
	* TypeDescriptionProviderAttribute.cs: implemented.
	* CustomTypeDescriptor.cs: implemented.
	* TypeDescriptor.cs: Implement CreateInstance.

2007-08-20  Gert Driesen  <drieseng@users.sourceforge.net>

	* EnumConverter.cs: Conversion to and from Enum [] is 2.0 only. 
	Modified conversion to string to support enum names and integral
	values, and throw ArgumentException if value is not valid.
	For conversion to InstanceDescriptor, use ConvertToString to get name
	of field. Avoid endless loop when converting to Enum [].
	* ToolboxItemFilterType.cs: Spaces to tabs.
	* TypeConverter.cs: Improve exception messages (to match MS).

2007-08-19  Ivan N. Zlatev  <contact@i-nz.net>

	* ReflectionPropertyDescriptor.cs: For read-only properties,
	ShouldSerializeValue must also check for 
	DesignerSerializationVisibility.Content and if present return true.

2007-08-19  Ivan N. Zlatev  <contact@i-nz.net>

	* EnumConverter.cs: Implement conversion to and from Enum[]

2007-08-19  Ivan N. Zlatev  <contact@i-nz.net>

	* TypeDescriptor.cs: GetProperties should return only the last type's 
	implementation of a property with a matching name in the base types.

2007-08-03  Jb Evain  <jbevain@novell.com>

	* ComponentCollection.cs: use our own collection base
	  for the 2.1 profile, as ReadOnlyCollectionBase does not exist
	  in 2.1, and they are internalized by the linker.

2007-08-01  Atsushi Enomoto  <atsushi@ximian.com>

	* BackgroundWorker.cs : remove extra MonoTODOs.

2007-07-21  Gert Driesen  <drieseng@users.souceforge.net>

	* DisplayNameAttribute.cs: To match MS, do not change null DisplayName
	to a zero-length string. Modified IsDefaultAttribute to take into
	account null DisplayName.

2007-07-16  Gert Driesen  <drieseng@users.sourceforge.net>

	* ReflectionPropertyDescriptor.cs: For read-only properties,
	ShouldSerializeValue must only take into account the return value
	of the ShouldSerialize method. Code formatting.

2007-07-12  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* PropertyDescriptor.cs: GetEditor: We have to check the property
	  itself for attributes as well, not only the property type.
	* TypeDescriptor.cs: Make a couple of methods internal so that
	  PropertyDescriptor can use them.

2007-07-12  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* TypeDescriptor.cs: GetEditor: Make sure the static constructor of the
	  editors basetype is called, since that's where we're initializing
	  the editor table.

2007-07-11  Igor Zelmanovich <igorz@mainsoft.com>

	* ReflectionPropertyDescriptor: fixed ShouldSerializeValue:
	MSDN: If this method cannot find a DefaultValueAttribute or 
	a ShouldSerializeMyProperty method, it cannot create optimizations 
	and it returns true.

2007-07-11  Igor Zelmanovich <igorz@mainsoft.com>

	* ReflectionPropertyDescriptor: fixed ShouldSerializeValue:
	avoid NullReferenceException.

2007-07-10  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* TypeDescriptor.cs: Implemented AddEditorTable, and check the editor
	  table in GetEditor if no editor can be found using attributes.

2007-06-30  Gert Driesen  <drieseng@users.sourceforge.net>

	* PropertyDescriptorCollection.cs: Added missing explicit interface
	implementation of IEnumerable.GetEnumerator.
	* TypeDescriptor.cs: Params modifier applies to 1.0 profile as well.
	Spaces to tabs.

2007-05-31  Atsushi Enomoto  <atsushi@ximian.com>

	* LookupBindingPropertiesAttribute.cs:
	  Should be sealed. Implemented GetHashCode().

2007-05-31  Atsushi Enomoto  <atsushi@ximian.com>

	* ContainerFilterService.cs CustomTypeDescriptor.cs
	  InstanceCreationEditor.cs InvalidAsynchronousStateException.cs
	  MultilineStringConverter.cs NestedContainer.cs
	  NullableConverter.cs TypeDescriptionProvider.cs
	  TypeDescriptionProviderAttribute.cs :
	  2.0 stubs except for [Obsolete].
	* TypeDescriptor.cs : added missing 2.0 members.

2007-05-31  Atsushi Enomoto  <atsushi@ximian.com>

	* PropertyDescriptor.cs : oops, wrong fix.

2007-05-31  Atsushi Enomoto  <atsushi@ximian.com>

	* PropertyDescriptor.cs : call base. fix winforms tests.

2007-05-31  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* LookupBindingPropertiesAttribute.cs: Implemented.

2007-05-31  Atsushi Enomoto  <atsushi@ximian.com>

	* AsyncOperationManager.cs AttributeCollection.cs
	  BackgroundWorker.cs BindingList.cs CategoryAttribute.cs
	  Component.cs DataObjectFieldAttribute.cs DefaultValueAttribute.cs
	  DescriptionAttribute.cs EventDescriptorCollection.cs
	  IComNativeDescriptorHandler.cs IListSource.cs
	  ListSortDescriptionCollection.cs MemberDescriptor.cs
	  PropertyDescriptor.cs SyntaxCheck.cs ToolboxItemFilterAttribute.cs:
	  2.0 profile updates.

2007-05-15 Adar Wesley <adarw@mainsoft.com>

	* AttributeCollection.cs: added missing method FromExisting.

	* Container.cs: added missing method ValidateName

	* DefaultValueAttribute.cs: added missing method SetValue.

	* EventHandlerList.cs: added missing method AddHandlers.

	* MemberDescriptor.cs: added missing method GetInvocationTarget.

	* PropertyDescriptor.cs: added missing method GetValueChangedHandler.

	* TypeDescriptor.cs: added missing methods CreateInstance, GetFullComponentName,
	GetClassName, GetReflectionType, CreateAssociation, GetAssociation, 
	RemoveAssociation, RemoveAssociations.

2007-05-14  Vladimir Krasnov  <vladimirk@mainsoft.com>

	* PropertyDescriptorCollection.cs: fixed Find method, compare using
	invariant culture

2007-05-10  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* MaskedTextProvider.cs: Small fix for ToString for passwords.

2007-05-09 Igor Zelmanovich <igorz@mainsoft.com>

	* Win32Exception.cs:
	added MonoNotSupported attribute for TARGATE_JVM.	
		
2007-05-08 Igor Zelmanovich <igorz@mainsoft.com>

	* RunWorkerCompletedEventArgs.cs: added 'new' keyword, cause 
	UserState hides inherit property.

2007-04-07  Gert Driesen  <drieseng@users.sourceforge.net>

	* RecommendedAsConfigurableAttribute.cs: Mark obsolete on 2.0 profile.

2007-03-05  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* MaskedTextProvider.cs: Make internal methods private.

2007-02-27  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* MaskedTextProvider.cs: Added.

2007-02-17  Gert Driesen  <drieseng@users.sourceforge.net>

	* DateTimeConverter.cs: Fixed typo in exception message.

2007-02-13  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeDescriptor.cs: Do not assume that an ISite always has an
	ITypeDescriptorFilterService. Fixes bug #80836.

2007-01-29  Marek Habersack  <grendello@gmail.com>

	* PasswordPropertyTextAttribute.cs: Implement.

2007-01-21  Zoltan Varga  <vargaz@gmail.com>

	* RecommendedAsConfigurableAttribute.cs: Make this non-obsolete to fix
	the 2.0 build, since System.ServiceProcess.ServiceController uses it.

2007-01-20  Chris Toshok  <toshok@ximian.com>

	* InheritanceLevel.cs: 2.0 class-status work.

	* ListSortDirection.cs: same.

	* BindableSupport.cs: same.

	* SyntaxCheck.cs: same.

	* CancelEventHandler.cs: same.

	* ListChangedEventHandler.cs: same.

	* SettingsBindableAttribute.cs: same.

	* ToolboxItemFilterType.cs: same.

	* PropertyChangedEventHandler.cs: same.

	* MarshalByValueComponent.cs: same.

	* LicenseUsageMode.cs: same.

	* RefreshProperties.cs: same.

	* RecommendedAsConfigurableAttribute.cs: same.

2007-01-20  Chris Toshok  <toshok@ximian.com>

	* BindingList.cs: new class.

2007-01-13  Miguel de Icaza  <miguel@novell.com>

	* DataObjectFieldAttribute.cs: Removed some code I left from the
	copy/paste activity from the xxxMethodxx.

2007-01-12  Miguel de Icaza  <miguel@novell.com>

	* DataObjectFieldAttribute.cs: Add new file.

2007-01-11  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Add error 50 (ERROR_NOT_SUPPORTED)

2007-01-08  Raja R Harinath  <rharinath@novell.com>

	* ISupportInitializeNotification.cs: Add implemented interface.
	* ICancelAddNew.cs, IIntellisenseBuilder.cs: New.
	* INestedContainer.cs, INestedSite.cs: New.

2007-01-02  Konstantin Triger  <kostat@mainsoft.com>

	* DataObjectAttribute.cs: Implemented.

2007-01-02  Konstantin Triger  <kostat@mainsoft.com>

	* EventHandlerList.cs: Do not reject null key.

2006-12-25  Raja R Harinath  <harinath@gmail.com>

	* InitializationEventAttribute.cs: New.

2006-12-24  Konstantin Triger  <kostat@mainsoft.com>

	* Implemented DataObjectMethodAttribute and DataObjectMethodType.

2006-12-22  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* DefaultBindingPropertyAttribute.cs: new attribute.

2006-12-21  Gert Driesen  <drieseng@users.sourceforge.net>

	* MemberDescriptor.cs: On 2.0 profile, take the DisplayNameAttribute
	into account for DisplayName. Fixes bug #80292.

2006-12-20  Chris Toshok  <toshok@ximian.com>

	* AttributeProviderAttribute.cs: new class.

2006-12-20  Chris Toshok  <toshok@ximian.com>

	* ComplexBindingPropertiesAttribute.cs: add Default field.

2006-12-20  Chris Toshok  <toshok@ximian.com>

	* ComplexBindingPropertiesAttribute.cs: new 2.0 attribute.

2006-12-19  Chris Toshok  <toshok@ximian.com>

	* PropertyDescriptor.cs: stop crashing on a missing type
	converter.

2006-12-06  Chris Toshok  <toshok@ximian.com>

	* ReflectionPropertyDescriptor.cs: turns out if "ShouldSerialize*"
	is present and returns false, "CanReset*" also returns false.

2006-12-06  Chris Toshok  <toshok@ximian.com>

	* ReflectionPropertyDescriptor.cs: ShouldSerializeValue should
	return false if there's no ShouldSerialize method.

2006-12-06  Chris Toshok  <toshok@ximian.com>

	* ReflectionPropertyDescriptor.cs: fixes for CanResetValue and
	ShouldSerializeValue - we need to find both public and nonpublic
	methods.

2006-12-01  Duncan Mak  <duncan@a-chinaman.com>

	* AddingNewEventArgs.cs: 
	* AddingNewEventHandler.cs: Added.

	* ListChangedEventArgs.cs (.ctor): Uncomment the bit about
	property descriptor now that there's an implementation of it.
	(PropertyDescriptor): New 2.0 property.

2006-11-29  Ivan N. Zlatev <contact@i-nz.net>

	* MemberDescriptor.cs, ReflectionPropertyDescriptor.cs: 1) The
	ReflectionPropretyDescriptor must be able to operate with non
	public properties.

	2) The current implementation ignores the fact that the component
	can be in design mode. In design mode some of the properties (the
	design-time ones) are supposed to be redirected to the
	designer. The component which should be used to access the
	property is retrieved by using MemberDescriptor.GetInvokee
	(implemented in the patch). Updated the
	ReflectorPropertyDescriptor to use GetInvokee to decide which
	component should it use.

	Reviewed by: Miguel de Icaza

2006-11-28  Miguel de Icaza  <miguel@novell.com>

	* TypeDescriptor.cs: This implementation is really from Gonzalo,
	he dictated to me :-)

2006-11-20  Nagappan A  <anagappan@novell.com>

	* ISupportInitializeNotification.cs: New Interface file to support
	NET 2.0 features.

2006-11-09  Chris Toshok  <toshok@ximian.com>

	* ReflectionPropertyDescriptor.cs: IsReadOnly needs to take into
	account the ReadOnlyAttribute.

2006-11-08  Gert Driesen  <drieseng@users.sourceforge.net>

	* ArrayConverter.cs: Modifed ConvertTo for Array => String to match
	MS. In GetProperties, throw NRE to match MS.

2006-11-08  Chris Toshok  <toshok@ximian.com>

	* ArrayConverter.cs: implement GetProperties correctly, by
	creating ArrayPropertyDescriptor objects for each array element.

2006-10-05 Andrew Skiba <andrews@mainsoft.com>

	* EventHandlerList.cs: Implement event handler list according to MS
	definition. No hash table, just a simple list with good performance
	for a small number of events (<20) and worse performance when number
	of events is bigger (patch by eyala@mainsoft.com).

2006-10-29 Alexander Olk <alex.olk@googlemail.com>

	* ComponentResourceManager.cs: Make ApplyResources work.
	  Instead of iterating through the resource set table we now
	  read the property infos of an object and check if there is
	  an item in the resource set for each property info. This makes
	  it finally possible to create language dependent resources
	  that do not have to include everything from a parent culture
	  resource (mostly invariant culture).
	  Throw an ArgumentNullException if value or objectName is null.

2006-10-29 Alexander Olk <alex.olk@googlemail.com>

	* ComponentResourceManager.cs: Don't close the resource set in
	  ApplyResources, it is possible to call ApplyResources multiple
	  times. Closing the resource set means that it gets disposed.
	  Fixes bug #79182.

2006-09-28 Andrew Skiba <andrews@mainsoft.com>

	* Component.cs,PropertyDescriptorCollection.cs,MarshalByValueComponent.cs:
	TARGET_JVM

2006-09-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Container.cs: 'unsite' the component when removing it. Fixes
	bug #79255. Patch by Ivan N. Zlatev.

2006-09-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: don't ignore toplevel attributes when they are
	overriden.

	Patch by Ivan N. Zlatev that fixes bug #79256.

2006-08-20  Gert Driesen  <drieseng@users.sourceforge.net>

	* InvalidEnumArgumentException.cs: Beautify error message.

2006-08-14  Raja R Harinath  <rharinath@novell.com>

	* IRaiseItemChangedEvents.cs: Add.  Mentioned in #79012.

2006-07-31  Sebastien Pouliot  <sebastien@ximian.com> 

	* InvalidEnumArgumentException.cs: Updated to 2.0.
	* LicenseException.cs: Updated to 2.0. Add a demand for 
	SerializationFormatter on GetObjectData method.
	* TypeDescriptor.cs: Add linkdemand for ReflectionPermission on 
	CreateEvent and CreateProperties methods. Add linkdemand for 
	unrestricted on ComNativeDescriptorHandler get/set.
	* WarningException.cs: Updated to 2.0. Add a demand for 
	SerializationFormatter on GetObjectData method.
	* Win32Exception.cs: Add a demand for SerializationFormatter on 
	GetObjectData method.

2006-07-14  Peter Dennis Bartok  <pbartok@novell.com>

	* MaskedTextResultHint.cs: Added

2006-05-31  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeConverter.cs: Added explicit interface implementation for
	ICollection.CopyTo and IEnumerable.GetEnumerator. Fixes corcompare
	warnings.
	* Component.cs: Remove TypeConverter attribute. Fixes corcompare
	warning.
	* AttributeCollection.cs: Added explicit interface implemenation for
	IEnumerable.GetEnumerator, IList.RemoveAt and ICollection.Count.
	Fixes corcompare warnings.
	* PropertyDescriptorCollection.cs: Added explicit interface
	implemenation for ICollection.Count. Fixes corcompare warning.

2006-05-22  Atsushi Enomoto  <atsushi@ximian.com>

	* TypeDescriptor.cs : GetProperties() does not return indexers.

2006-05-11  Atsushi Enomoto  <atsushi@ximian.com>

	* ReflectionPropertyDescriptor.cs,
	  DerivedPropertyDescriptor.cs : invoke OnValueChanged() when
	  the value was successfully changed. It is needed to have
	  MWF PropertyGrid change properties successfully.

2006-05-08  Atsushi Enomoto  <atsushi@ximian.com>

	* AsyncOperation.cs : SynchronizationContext.OperationStarted()
	  should not be called more than once. So move it from Post() to
	  .ctor(). Thanks again to cl.

2006-05-08  Atsushi Enomoto  <atsushi@ximian.com>

	* AsyncOperation.cs : call OperationStared() at Post(). Call
	  OperationCompleted() at the finalizer. Thanks to cl.

2006-05-08  Atsushi Enomoto  <atsushi@ximian.com>

	* SettingsBindableAttribute.cs : new file. Bug #78333 is fixed.

2006-04-27  Miguel de Icaza  <miguel@novell.com>

	* Component.cs: The converter for the Component is
	ComponentConverter, which makes the GetPropertiesSupported return
	true.   So JChamber's patch should work now.

2006-04-26  Miguel de Icaza  <miguel@novell.com>

	* TypeDescriptor.cs (Info.GetProperties, TypeInfo.GetProperties):
	Use the more specific GetProperties call so we do not return
	static properties, should fix that part of the PropertyGrid bug
	#78192.

	Code formatting police hit again.

	* ReflectionPropertyDescriptor.cs (CanResetvalue): Do not
	dereference a null value, avoids crash in property grid.

	Code formatting police. 

2006-04-25  Miguel de Icaza  <miguel@novell.com>

	* TypeConverter.cs (ConvertFrom): Do not crash if we are passed a
	null value. 

2006-04-25  Atsushi Enomoto  <atsushi@ximian.com>

	* BaseNumberConverter.cs : (ConvertTo) regardless of InnerType,
	  it converts the argument value to InnerType using supplied format.
	  (It might be not limited to NET_2_0 but it's too cosmetic to dig
	  into the problem. At least this is for run-test-ondotnet fixes.)

2006-04-17  Atsushi Enomoto  <atsushi@ximian.com>

	* BackgroundWorker.cs, RunWorkerCompletedEventArgs.cs :
	  cosmetic attribute fixes.

2006-04-17  Atsushi Enomoto  <atsushi@ximian.com>

	* AsyncOperation.cs,
	  AsyncOperationManager.cs
	  BackgroundWorker.cs
	  DoWorkEventArgs.cs
	  DoWorkEventHandler.cs
	  RunWorkerCompletedEventArgs.cs
	  RunWorkerCompletedEventHandler.cs :
	  Initial implementation of AsyncOperation and BackgroundWorker.

	  (However I think it does not work as expected - it depends on
	  SynchronizationContext.Post() and I doubt it works fine - the
	  callback should run synchronously while it does not look so.)

2006-03-30  Atsushi Enomoto  <atsushi@ximian.com>

	* AsyncCompletedEventArgs.cs : constructor did not initialize fields.

2006-03-28  Atsushi Enomoto  <atsushi@ximian.com>

	* ProgressChangedEventHandler.cs ProgressChangedEventArgs.cs :
	  added 2.0 types.

2006-02-26  Pedro Martinez Julia  <pedromj@gmail.com>

	* HandledEventHandler.cs: Resolving a "Replaced" SVN flag.

2006-02-23 Andrew Skiba <andrews@mainsoft.com>

	* TypeDescriptor.cs: performance improvement for GetAttributes,
	GetProperties and GetEvents. See the standalone test for the use case.

2006-01-31 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Container.cs: patch by Brian Crowell that fixes GetService().

2006-01-22  Chris Toshok  <toshok@ximian.com>

	* DesignerSerializationVisibilityAttribute.cs: in the 2.0 case,
	this attribute is valid on fields and events as well.

2005-11-19  Zoltan Varga  <vargaz@gmail.com>

	* TypeDescriptor.cs: Small changes to make this more compliant with
	MSDN docs and actual MS behaviour.

2005-11-07  Pedro Martinez Julia <pedromj@gmail.com>

	* IBindingListView.cs Initial implementation
	* HandledEventArgs.cs Initial implementation
	* HandledEventHandler.cs Initial implementation
	* ListSortDescription.cs: Initial implementation
	* ListSortDescriptionCollection.cs: Initial implementation

2005-10-31  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Add another error code.

2005-09-20  Chris Toshok  <toshok@ximian.com>

	* INotifyPropertyChanged.cs: new interface.

2005-09-19  Gert Driesen <drieseng@users.sourceforge.net>

	* TypeDescriptor.cs: Remove usage of removed internal
	PropertyDescriptorCollection ctor. Return read-only collection.
	* PropertyDescriptorCollection.cs: Removed internal ctor taking
	ArrayList. Add ctor for making read-only collection. Added
	read-only checks. Implemented IsReadOnly and IsFixedSize. Empty now
	returns read-only collection to match MS.NET.

2005-09-12  Gert Driesen <drieseng@users.sourceforge.net>

	* TypeConverter.cs: Only return browsable properties in GetProperties.

2005-08-28  Gert Driesen <drieseng@users.sourceforge.net>

	* DateTimeConverter.cs: ConvertTo must return zero-length string
	for DateTime.MinValue. Use CultureInfo.GetFormat to obtain
	DateTimeFormatInfo to match MS.NET.

2005-08-27 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: remove double lock in DefaultConverter.

2005-08-26  Gert Driesen <drieseng@users.sourceforge.net>

	* BaseNumberConverter.cs: Use CultureInfo.GetFormat to obtain
	NumberFormatInfo to match MS.NET. Added ConvertToString abstract 
	method for conversion to string.
	* ByteConverter.cs: Implemented ConvertToString.
	* DecimalConverter.cs: Implemented ConvertToString.
	* DoubleConverter.cs: Implemented ConvertToString.
	* Int16Converter.cs: Implemented ConvertToString.
	* Int32Converter.cs: Implemented ConvertToString.
	* Int64Converter.cs: Implemented ConvertToString.
	* SByteConverter.cs: Implemented ConvertToString.
	* SingleConverter.cs: Implemented ConvertToString.
	* UInt16Converter.cs: Implemented ConvertToString.
	* UInt32Converter.cs: Implemented ConvertToString.
	* UInt64Converter.cs: Implemented ConvertToString.

2005-08-19  Gert Driesen <drieseng@users.sourceforge.net>

	* SingleConverter.cs: Implement conversion from string to match MS.NET.
	Set eol-style to native.
	* TypeConverter.cs: Always support conversion from InstanceDescriptor. 
	Set eol-style to native.
	* UInt16Converter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.
	* SByteConverter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set
	eol-style to native.
	* Int16Converter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.
	* UInt64Converter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.
	* DecimalConverter.cs: Implement conversion from string to match MS.NET.
	Set eol-style to native.
	* Int64Converter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.
	* UInt32Converter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.
	* Int32Converter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.
	* DoubleConverter.cs: Implement conversion from string to match MS.NET.
	Set eol-style to native.
	* BaseNumberConverter.cs: Support conversion from string containing 
	hex prefixes. Set eol-style to native.
	* ByteConverter.cs: Implement conversion from string to match MS.NET.
	Added support for converting string containing hex prefix. Set 
	eol-style to native.

2005-08-18  Gert Driesen <drieseng@users.sourceforge.net>

	* EditorBrowsableState.cs: Changed line ending from CRLF to LF to
	match other sources. Set eol-style to native.
	* ExtenderProvidedPropertyAttribute.cs: Changed line ending from CRLF
	to LF to match other sources. Set eol-style to native.
	* RefreshEventHandler.cs: Changed line ending from CRLF to LF to match
	other sources. Set eol-style to native.
	* TypeDescriptor.cs: Changed line ending from CRLF to LF to match 
	other sources. Set eol-style to native.

2005-08-16  Gert Driesen <drieseng@users.sourceforge.net>

	* BaseNumberConverter.cs: In ConvertFrom, wrap all exceptions that
	are thrown while converting from string in an Exception.

2005-08-16  Gert Driesen <drieseng@users.sourceforge.net>

	* ToolboxItemAttribute.cs: Fixed GetHashCode to correspond with MS.NET.
	Fixed initialization order. Throw ArgumentException if item type 
	cannot be loaded.

2005-08-09  Michael Hutchinson <m.j.hutchinson@gmail.com>

	* ToolboxItemAttribute.cs: Fixed typo

2005-08-09  Gert Driesen <drieseng@users.sourceforge.net>

	* IComponent.cs: Fixed Designer attribute to match MS.NET.
	* DesignerAttribute.cs: DesignerBaseTypeName defaults to fullname of
	IDesigner to match MS.NET.

2005-08-07  Michael Hutchinson <m.j.hutchinson@dur.ac.uk>

	Patch from Michael Hutchinson to make the aspnet editor work. 
	
	* ReflectionPropertyDescriptor.cs: Create transactions and raise
	component change events for all IComponents, not just base
	implementation 'Component' derivatives.

	* MemberDescriptor.cs: Make members 'Browsable' by default, as per
	MS spec.

	* PropertyDescriptor.cs: Changed default
	DesignerSerializationVisibility value to Visible rather than
	Hidden, as per MS spec.

2005-07-21 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: (GetProperties) throw exception if 'component' is
	null.

2005-06-30  Sebastien Pouliot  <sebastien@ximian.com>

	* Win32Exception.cs: Added some declarative security (permission from
	corlib) as an initial test (outside corlib). Added new constructors
	for NET_2_0.

2005-06-27  LLuis Sanchez Gual  <lluis@novell.com>

	* CultureInfoConverter.cs: Correctly look for verbose name of
	the culture being converted.

2005-06-08 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ToolboxItemAttribute.cs: fix the fix that was fixed before.

2005-06-08  Zoltan Varga  <vargaz@freemail.hu>

	* ToolboxItemAttribute.cs: Revert last change as it breaks the build.

2005-06-08 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ToolboxItemAttribute.cs: fix default type name.

2005-06-04 Gert Driesen <drieseng@users.sourceforge.net>

	* Win32Exception.cs: improve error message for error 10047.

2005-06-04 Gert Driesen <drieseng@users.sourceforge.net>

	* TypeDescriptor.cs: in .NET 2.0, GetComponentName returns null if
	object is not an IComponent or has no Site.
	In .NET 2.0, GetDefaultEvent does not fallback to first defined event
	if the default event is filtered out. GetDefaultProperty did not
	take filtering into account. Fixes bug #75152.

2005-05-31 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: add 10049 WSAEADDRNOTAVAIL. Fixes bug #75106.

2005-05-15 Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* IComponent.cs: Fix attributes

2005-04-28 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: implemented GetEditor. Patch by Jonathan Chambers.

2005-04-25 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DefaultValueAttribute.cs: fixed the .ctor that takes a type and a
	string. Previous implementation caused *lots* of exceptions being thrown
	when processing WebControl types.

2005-04-22  LLuis Sanchez Gual  <lluis@novell.com>

	* AttributeCollection.cs: When checking if the list contains an
	attribute, always return true if that attribute is the default
	attribute for that kind of attributes.

2005-04-13  LLuis Sanchez Gual  <lluis@novell.com>

	* TypeDescriptor.cs: When creating a converter, use a constructor that
	takes a Type parameter if exists.
	* PropertyDescriptor.cs: In the Converter property, check for a
	TypeConverterAttribute in the property.

2005-03-02  Jackson Harper  <jackson@ximian.com>

	* ReflectionEventDescriptor.cs: Bind handlers to the actual event so that
	the delegates get invoked when the methods are.

2005-03-02  Jackson Harper  <jackson@ximian.com>

	* EventDescriptorCollection.cs: Handle null in the constructor properly.

2005-02-12  Geoff Norton  <gnorton@customerdna.com>

	* CharConverter.cs: Implement the ability to convert from "".
	
2005-02-10  Geoff Norton  <gnorton@customerdna.com>

	* CultureInfoConverter.cs: Implement converting from the 
	string "(default)" that MS will put in .resx files.

2005-02-10  Lluis Sanchez Gual  <lluis@novell.com>

	* BindableAttribute.cs: Implemented 2.0 api.

2005-02-05 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: fixed bug #71601.  GetConverter should handle
	TypeConverter derived classes that take a Type argument.

2005-01-27  LLuis Sanchez Gual  <lluis@novell.com>

	* DateTimeConverter.cs, CultureInfoConverter.cs, DecimalConverter.cs,
	TimeSpanConverter.cs, GuidConverter.cs, EnumConverter.cs: 
	Implemented support for InstanceDescriptor.

2005-01-25  LLuis Sanchez Gual  <lluis@novell.com>

	* Win32Exception.cs: Set the correct name for the serialized
	NativeErrorCode. This fixes bug #71572. Fix by Aleksandar Dezelin.

2005-01-24 Joerg Rosenkranz <joergr@voelcker.com>

	* TypeDescriptor.cs: Changed handling of interfaces and objects in
	GetConverter to reflect the behaviour of .NET. This fixes bug #71444.
    
2005-01-19  Jonathan Pryor  <jonpryor@vt.edu>

	* TypeDescriptor.cs: Fix Info.GetDefaultEvent() so that it filters events
	  properly.  This matches .NET 1.1 and fixes a test case.

2005-01-19  Jonathan Pryor  <jonpryor@vt.edu>

	* TypeDescriptor.cs: Fix GetComponentName() so that it returns the type
	  name if no Site is present.  This matches .NET 1.1 and fixes a test case.

2005-01-12 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseNumberConverter.cs: when the culture we get is null, set it to the
	default. Fixes bug #67033. Thanks to Sander Rijken.

2005-01-10  LLuis Sanchez Gual  <lluis@novell.com>

	* BindingDirection.cs: New enum.

2004-12-09  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Add another socket error, fix the message of
	some old ones.

2004-10-01 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs: support attributes inherited from the one
	we want. Fixes bug #67088. Thanks to Sander Rijken.

2004-08-14  Jackson Harper  <jackson@ximian.com>

	* Container.cs: Release all when we are supposed to release all.

2004-07-14  Atsushi Enomoto  <atsushi@ximian.com>

	* Added IChangeTracking.cs and IRevertibleChangeTracking.cs.

2004-07-09  LLuis Sanchez Gual  <lluis@novell.com>

	* AsyncCompletedEventArgs.cs: Implemented.
	* AsyncCompletedEventHandler.cs: Implemented.

2004-06-12 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: when a component in componentTable is Disposed,
	remove it from the table.

Fri Jun 11 11:58:22 CEST 2004 Paolo Molaro <lupus@ximian.com>

	* LocalizableAttribute.cs, DesignerSerializationVisibilityAttribute.cs,
	DesignOnlyAttribute.cs: fix targets for attributes.

2004-05-05  Lluis Sanchez Gual <lluis@ximian.com>

	* BooleanConverter.cs: Improved ConverFrom method.

2004-04-28  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeDescriptor.cs: Do not return attributes that have the same TypeID.
	This fixes bug #57655.

2004-04-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: fixed ComponentInfo.GetAttributes(). Now it returns
	all the attributes, not just DesignerAttribute instances. nGallery
	complained.

2004-04-21  Lluis Sanchez Gual <lluis@ximian.com>

	* BooleanConverter.cs: GetStandardValues must return an array of
	booleans, not an array of strings.

2004-04-16  Lluis Sanchez Gual <lluis@ximian.com>

	* ReflectionPropertyDescriptor.cs: Access internal PropertyInfo
	through GetPropertyInfo(). Take into account that a component may not
	be sited or not have some services.
	* TypeDescriptor.cs: GetTypeFromName():  Added null check for Site
	property.  Other minor fixes.

2004-04-16	Joerg Rosenkranz <joergr@voelcker.com>

	* TypeDescriptor.cs: Fixed implementation of GetConverter.
	  This fixes #57137.

2004-04-14  Lluis Sanchez Gual <lluis@ximian.com>

	* AttributeCollection.cs: Added new internal constructor.
	* DesignerAttribute.cs: Fixed property TypeId.
	* EventDescriptorCollection.cs: Added internal constructor. Added new
	  method Filter that removes events that do not have the specified
	  attributes.
	* MemberDescriptor.cs: Minor fixes.
	* PropertyDescriptor.cs: Implemented some missing methods.
	* PropertyDescriptorCollection.cs: Added internal constructor. Implemented
	  Sort methods.
	* ReferenceConverter.cs: Removed some TODOs.
	* SyntaxCheck.cs: Implemented CheckMachineName and CheckPath.
	* TypeDescriptor.cs: Implemented most of missing methods.
	
2004-04-08  Lluis Sanchez Gual  <lluis@ximian.com>

	* AmbientValueAttribute.cs, EnumConverter.cs, ListChangedEventArgs.cs: 
	  Removed unneded TODOs.
	* ComponentResourceManager.cs: Implemented ApplyResources.
	* EventDescriptorCollection.cs: Implemented several missing methods.
	* LicFileLicenseProvider.cs: Implemented.
	* MemberDescriptor.cs: Implemented some missing methods. Handle correctly
	  the creation of the Attribute list.
	* TypeConverter.cs: Use null as default value for attribute array parameter.

2004-04-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: added 10024 (WSAEMFILE).

2004-04-05  Lluis Sanchez Gual  <lluis@ximian.com>

	* AttributeCollection.cs: Don't try to create a default attribute if the
	attribute type does not have a default constructor. Fix by Jon Wagner.
	This fixes #53898.

2004-03-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: added ERROR_PATH_NOT_FOUND that reports the same
	message as ERROR_FILE_NOT_FOUND.

2004-03-17  Ivan Hamilton <ivan@chimerical.com.au>

	* LicenseManager.cs: Completed TODO.

2003-12-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: use a switch instead of creating a hashtable when
	mapping from an error code to a message.

2003-11-22  Miguel de Icaza  <miguel@ximian.com>

	* PropertyDescriptorCollection.cs (Insert): Another one.

	* PropertyTabAttribute.cs (Equals): Avoid recurssion

2003-11-13  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* IComponent.cs: Added missing attribute

2003-11-12  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* ComponentResourceManager.cs: Added and partially implemented

2003-09-13  Duncan Mak  <duncan@ximian.com>

	Patch from Jrg Rosenkranz <joergr@voelcker.com>, this fixes the
	bugs described in bug #48351.

	* EnumConverter.cs (ConvertFrom): Removed the special handling for
	multiple values. This is done in Enum.Parse already.

	* TypeDescriptor.cs (GetConverter): Does not work for enumeration
	types because EnumConverter does not have a default
	constructor. Fixed by changing the special handling for
	enumeration types.

2003-08-31  Jerome Laban <jlaban@wanadoo.fr>
        * Container.cs: A site without name cannot be duplicate.

2003-07-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: added message for 10054.

2003-07-17  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* CategoryAttribute.cs: Added localization support

2003-07-17  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* IComponent.cs:
	* MarshalByValueComponent.cs: Reworked attributes based on the new Consts scheme

2003-07-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: fixed GetConverter (type) for enumerations that
	have a TypeConverter. Fixes bug #46397.

2003-07-14 Jerome Laban <jlaban@wanadoo.fr>

	* IComponent.cs: Removed duplicate Designer attribute.

2003-07-13  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* Component.cs: Implementation added
	* Container.cs: Implementation added
	* MarshalByValueComponent.cs: Implementation added
	* ReferenceConverter.cs: Small addition for future implementation

2003-07-10  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* TypeConverter.cs: Implemented missing methods
	* TypeDescriptor.cs: Redirections added

2003-07-05  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* EnumConverter.cs: Fixed signature
	* EventDescriptorCollection.cs: Fixed signature
	* InheritanceLevel.cs: Fixed enum values; little restyling
	* License.cs: Removed undefined member
	* LicenseManager.cs: Fixed signature, little implementation added
	* PropertyDescriptorCollection.cs: Removed unused field (fixes last remaining compiler warning in this namespace)
	* WarningException.cs: Removed wrong attribute
	* Win32Exception.cs: Added missing attribute

2003-07-02  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* AttributeCollection.cs: Fixed public members
	* BaseNumberConverter.cs: Changed InnerType to internal to match public assembly signature
	* BrowsableAttribute.cs: Removed wrong constructor, Restyle according to guidelines
	* CategoryAttribute.cs: Changed public fields to properties
	* EnumConverter.cs: Added and implemented missing properties, improved implementation
	* EventDescriptorCollection.cs: Fixed wrong signatures, added implementation, fixed potential bug
	* PropertyDescriptorCollection.cs: Fixed public members
	* ReferenceConverter.cs: Implementation added
	* SyntaxCheck.cs: Improved string checks, added MonoTODO descriptions
	* TypeDescriptor.cs: Implementations added
	
2003-07-02  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* ISite.cs: Fixed attributes, fixed header
	* ITypeDescriptorContext.cs: Fixed attributes, formatting corrections
	* WarningException.cs: Fixed attributes, formatting corrections
	* AttributeCollection.cs: Fixed attributes
	* DesignerSerializationVisibility.cs: Fixed attributes
	* TypeConverter.cs: Fixed attributes
	
	* MarshalByValueComponent.cs:
	* IComponent.cs: Fixed attributes, supports .Net 1.0 and 1.1
	
	* DescriptionAttribute.cs: 
	* DesignerCategoryAttribute.cs:
	* DoubleConverter.cs:
	* EditorBrowsableAttribute.cs:
	* EventDescriptorCollection.cs:
	* PropertyChangedEventHandler.cs:
	* RefreshEventArgs.cs:
	* StringConverter.cs:
	* DefaultValueAttribute.cs: Reformatted following style guidelines
	
	* License.cs: Removed unused MonoTODOs
	* LicenseContext.cs: Implemented
	* LicenseException.cs: Implemented
	* LicenseProvider.cs: Removed unused MonoTODOs and unneccesary Finalizer
	* LicenseUsageMode.cs: Fixed enum
	* RefreshProperties.cs: Fixed enum
	* LicFileLicenseProvider.cs: Implementation added
	* ExtenderProvidedPropertyAttribute.cs: Implementation added, formatting corrections
	* ExpandableObjectConverter.cs: Implemented
	* ComponentConverter.cs: Implemented
	
2003-06-23  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* DesignerAttribute.cs: Fixed AttributeUsage, implementation errors,
	better Hashcode generation
	* EditorAttribute.cs: Fixed AttributeUsage, implementation errors,
	better Hashcode generation
	* LicenseContext.cs: Added and implemented missing property
	* ListBindableAttribute.cs: Simplified implementation, removed
	unneccessary data.
	* ReadOnlyAttribute.cs: Better Hashcode generation
	* RunInstallerAttribute.cs: Better Hashcode generation, more robust
	Equals check.

	* LicenseProviderAttribute.cs: Fixed AttributeUsage, indentation
	* ProvidePropertyAttribute.cs: Fixed AttributeUsage
	* ToolboxItemFilterAttribute.cs: Fixed AttributeUsage

	* MarshalByValueComponent.cs:
	* IContainer.cs:
	* IComponent.cs: Added missing attribute(s)

2003-06-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AmbientValueAttribute.cs:
	* ArrayConverter.cs:
	* BaseNumberConverter.cs:
	* BindableAttribute.cs:
	* BooleanConverter.cs:
	* BrowsableAttribute.cs:
	* ByteConverter.cs:
	* CategoryAttribute.cs:
	* CharConverter.cs:
	* CollectionConverter.cs:
	* Component.cs:
	* ComponentCollection.cs:
	* ComponentEditor.cs:
	* Container.cs:
	* CultureInfoConverter.cs:
	* DateTimeConverter.cs:
	* DecimalConverter.cs:
	* DefaultEventAttribute.cs:
	* DefaultPropertyAttribute.cs:
	* DefaultValueAttribute.cs:
	* DescriptionAttribute.cs:
	* DesignOnlyAttribute.cs:
	* DesignTimeVisibleAttribute.cs:
	* DesignerCategoryAttribute.cs:
	* DesignerSerializationVisibilityAttribute.cs:
	* DoubleConverter.cs:
	* EditorBrowsableAttribute.cs:
	* EventDescriptor.cs:
	* EventDescriptorCollection.cs:
	* ExpandableObjectConverter.cs:
	* ExtenderProvidedPropertyAttribute.cs: New file.
	* GuidConverter.cs:
	* IComNativeDescriptorHandler.cs:
	* IComponent.cs:
	* ImmutableObjectAttribute.cs:
	* InheritanceAttribute.cs:
	* InheritanceLevel.cs:
	* InstallerTypeAttribute.cs:
	* Int16Converter.cs:
	* Int32Converter.cs:
	* Int64Converter.cs:
	* InvalidEnumArgumentException.cs:
	* LicenseProviderAttribute.cs:
	* LocalizableAttribute.cs:
	* MarshalByValueComponent.cs:
	* MemberDescriptor.cs:
	* MergablePropertyAttribute.cs:
	* NotifyParentPropertyAttribute.cs:
	* ParenthesizePropertyNameAttribute.cs:
	* PropertyDescriptor.cs:
	* PropertyDescriptorCollection.cs:
	* PropertyTabAttribute.cs:
	* ProvidePropertyAttribute.cs:
	* RecommendedAsConfigurableAttribute.cs:
	* RefreshPropertiesAttribute.cs:
	* SByteConverter.cs:
	* SingleConverter.cs:
	* TimeSpanConverter.cs:
	* ToolboxItemFilterAttribute.cs:
	* TypeConverter.cs:
	* TypeConverterAttribute.cs:
	* TypeDescriptor.cs:
	* TypeListConverter.cs:
	* UInt16Converter.cs:
	* UInt32Converter.cs:
	* UInt64Converter.cs: implementation and fixes by Andreas Nahr
	(A-Soft@A-SoftTech.com).

2003-06-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* IExtenderProvider.cs: mono-stylized.
	* IComNativeDescriptorHandler.cs:
	* SyntaxCheck.cs: new files from Andreas Nahr.

2003-03-20  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Made the fallback error more useful by
	reporting the error number

2003-03-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* MarshalByValueComponent.cs: removed a monotodo.

2003-03-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: added error code 2.

2003-03-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: implemented GetObjectData ().

2003-03-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* RunInstallerAttribute.cs: New file.

2003-02-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: added 10065 (WSA_EHOSTUNREACH).

2003-02-05  Alan Tam <Tam@SiuLung.com>

 	* DesignedCategoryAttribute.cs: Implemented DesignerCategoryAttribute

2003-01-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BrowsableAttribute.cs: this attribute applies to All. Since the fix
	to bug #37380, mcs complained about this when compiling System.Data.

2003-01-08  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs (ComponentModel): Added EWOULDBLOCK

2003-01-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: use ICustomTypeDescriptor if the component
	implements it. It's done for GetProperties and should be done for the
	rest of methods present in ICustomTypeDescriptor.

2003-01-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeDescriptor.cs: moved code from GetProperties (object) to (Type).

2002-11-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DefaultValueAttribute.cs: the attribute applies to All.

2002-11-19  Duncan Mak  <duncan@ximian.com>

	* DesignerAttribute.cs:
	* EditorAttribute: Style changes. Gonzalo committed the build
	fixes before I did. 

2002-11-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DesignerAttribute.cs:
	* EditorAttribute.cs: fixed the build.

2002-11-19  Alejandro Snchez Acosta <raciel@es.gnu.org>

	* EditorAttribute: implemented.
	* DesignerAttribute: implemented.

2002-11-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Win32Exception.cs: added 10107 -> WASSYSCALLFAILURE.

2002-11-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ListBindableAttribute.cs: implemented.

2002-11-02  Duncan Mak  <duncan@ximian.com>

	* InvalidEnumArgumentException.cs: Added.

2002-10-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* EventHandlerList.cs: fixed bug #29535.

2002-10-03  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Added ETIMEDOUT

2002-09-30  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: Sorted the errors, added EINPROGRESS

2002-09-17  Asier Llano Palacios <asierllano@infonegocio.com>

	* CancelEventArgs.cs
	* WarningException.cs
	* CancelEventHandler.cs
	* PropertyChangedEventHandler.cs
	* IExtenderProvider.cs: Implemented

2002-08-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Component.cs:
	* ComponentCollection.cs:
	* Container.cs:
	* MarshalByValueComponent.cs: IDisposable fixes.

2002-08-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BindableSupport.cs:
	* Component.cs:
	* EventDescriptorCollection.cs:
	* ITypeDescriptorContext.cs:
	* TypeConverter.cs:
	* TypeDescriptor.cs: class status based fixes.
	
	* StringConverter.cs: implemented a couple of methods.

2002-07-29  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* EnumConverter.cs: new file.
	
	* TypeConverter.cs: implemented a few simple methods.

	* TypeDescriptor.cs:
	(GetConverter): initial support for converters of well-known types.

2002-07-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DerivedPropertyDescriptor.cs: New file. Internal class.

	* PropertyDescriptorCollection.cs: almost fully implemented.

	* TypeDescriptor.cs: implemented a couple of GetProperties ().

Wed Jul 24 13:14:30 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* Component.cs: don't die if Disposed is null.

2002-07-22  Tim Coleman <tim@timcoleman.com>
	* RecommendedAsConfigurableAttribute.cs: new file added
		for System.Web.Services build

2002-07-22  Tim Coleman <tim@timcoleman.com>
	* ExpandableObjectConverter.cs: Fix error with constructor

2002-07-22  Tim Coleman <tim@timcoleman.com>
	* TypeConverter.cs: Fixed bad stubb function
		GetConvertToException ()

2002-07-22  Tim Coleman <tim@timcoleman.com>
	* ComponentCollection.cs: Added reference to
		ReadOnlyCollectionBase to make sure
		that we inherit the appropriate methods.
		Not sure why the Dispose() method is
		required, but left for now.

2002-07-22  Tim Coleman <tim@timcoleman.com>
	* TypeConverter.cs: Added new stubbs
	* BindableAttribute.cs: Added
	* BindableSupport.cs: Added
	* NotifyParentPropertyAttribute.cs: Added
	* ExpandableObjectConverter.cs: Added

2002-07-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* MemberDescriptor.cs: implemented Attributes and Category.

	* PropertyDescriptor.cs: implemented Converter. Declared GetValue ().

	* PropertyDescriptorCollection.cs: fixed indexers declaration.

	* ReadOnlyAttribute.cs: GetHashCoder (), Equals (), IsDefault () and
	fixed value for Yes.

	* ToolboxItemAttribute.cs: fixed declaration of IsDefaultAttribute.

	* TypeConverter.cs: added SimplePropertyDescriptor class.

2002-07-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ToolboxItemAttribute.cs: New file.

2002-07-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DefaultEventAttribute.cs: new file.

2002-07-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs: fixlet.

2002-07-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs: finished implementation.
	* TypeDescriptor.cs: implemented GetAttributes (object).

2002-07-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs: initialize member variables.

	* RefreshEventArgs.cs: implemented.
	* RefreshEventHandler.cs: New file.

	* TypeDescriptor.cs: fully stubbed out the remaining method.

2002-07-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DefaultPropertyAttribute.cs: New file.

2002-06-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeConverter.cs: flushed local changes.

2002-06-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* StringConverter.cs: stubbed out.
	* TypeConverter.cs: stubbed the rest out and added some implementation.

	Five errors left when compiling System.Web in linux.

2002-06-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeConverterAttribute.cs: attribute used by 
	TypeDescriptor.Getconverter ().

	* TypeDescriptor.cs:  implemented GetConverter in the right way.

2002-06-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeConverter.cs:
	* ITypeDescriptorContext.cs:
	* TypeDescriptor.cs: implemented minimal set of features needed by xsp,
	which uses ColorConverter.

2002-05-12  Daniel Morgan <danmorg@sc.rr.com>

	* IComponent.cs
	* ISite.cs: added using System
	 
	* MarshalByValueComponent.cs: changed all throwing of Not ImplementedException
	to // TODOs and added using System.  The throwing of the exceptions prevented
	System.Data from running.

2002-05-10  Rodrigo Moya <rodrigo@ximian.com>

	* EventDescriptorCollection.cs (this[index]): call eventList[index],
	not this[index], which issues an 'ambigous call' error on Linux.

2002-05-07  Rodrigo Moya <rodrigo@ximian.com>

	* EventDescriptor.cs: added missing constructors.

	* EventDescriptorCollection.cs: fixed interface methods implementation

	* IDataErrorInfo.cs:
	* IEditableObject.cs: new interfaces.

2002-05-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.ComponentModel/AttributeCollection.cs: added a cast to make
	it compile.

2002-05-03  Rodrigo Moya <rodrigo@ximian.com>

	* AttributeCollection.cs:
	* EventDescriptor.cs:
	* EventDescriptorCollection.cs:
	* ICustomTypeDescriptor.cs: new files.

2002-05-01  Duncan Mak  <duncan@ximian.com>

	* ListChangedType.cs: 
	* ListChangedEventHandler.cs: 
	* ListChangedEventArgs.cs: Added to fix build.

2002-05-01  Miguel de Icaza  <miguel@ximian.com>

	* PropertyDescriptorCollection.cs: Added the IList explicit
	implementation methods. 

	lots of bug fixes to get the build to compile again.

2002-05-01  Duncan Mak  <duncan@ximian.com>

	* ListSortDirection.cs: EnumChecked.

2002-05-01  Rodrigo Moya <rodrigo@ximian.com>

	* ListSortDirection.cs: new enumeration. Please, somebody run
	EnumCheck on it, as I don't have a windows machine.

	* PropertyDescriptorCollection.cs: new class.

	* ITypedList.cs:
	* IBindingList.cs: new interfaces.

2002-04-28  Duncan Mak  <duncan@ximian.com>

	* CollectionChangeAction.cs: Changed enum layout to fit the MS
	implementation. Please use EnumCheck!

2002-04-28  Rodrigo Moya <rodrigo@ximian.com>

	* CollectionChangeAction.cs: new enumeration.

	* CategoryAttribute.cs: moved the 'return' keyword to the
	end of the method, to avoid compilation errors on Linux for
	all CategoryAttribute properties.

2002-04-28  Rodrigo Moya <rodrigo@ximian.com>

	* IListSource.cs:
	* ISupportInitialize.cs:
	* MarshalByValueComponent.cs: new stubs, needed for System.Data
	compilation.

	* PropertyChangedEventArgs.cs:
	* CollectionChangeEventHandler.cs:
	* CollectionChangeEventArgs.cs: implemented.

2002-04-28  Lawrence Pit <loz@cable.a2000.nl>

	* Added error code 11001 to Win32Exception, used by Dns.c

2002-04-04  Dick Porter  <dick@ximian.com>

	* ISynchronizeInvoke.cs: Needed by Process

2002-01-23  Dick Porter  <dick@ximian.com>

	* Win32Exception.cs: implement, with support for looking up
	runtime errors.

2002-01-17  Miguel de Icaza  <miguel@ximian.com>

	* Win32Exception.cs: Add.

2002-01-05  Ravi Pratap  <ravi@ximian.com>

	* CategoryAttribute.cs, Component.cs, ComponentCollection.cs: MonoTODO.

	* Container.cs, MemberDescriptor.cs, PropertyDescriptor.cs : Ditto.

2001-10-27  Miguel de Icaza  <miguel@ximian.com>

	* DesignerSerializationVisibilityAttribute.cs: Implemented.

	* DesignerSerializationVisibility.cs: New enumeration.

	* LocalizableAttribute.cs: Implemented.

	* BrowsableAttribute.cs: Implemented.

	* DesignOnlyAttribute.cs: Implemented.

	* DescriptionAttribute.cs: Implement.

	* MemberDescriptor.cs: Implemented.

	* CategoryAttribute.cs: implemented.

2001-08-21  Nick Drochak <ndrochak@gol.com>

	* Component.cs: Eliminated compile errors by removing redundant fields and
	using the ISite member instead.  Also raised the Disposed event, but not
	sure if it's correct now.  Look for FIXME in the comments.

2001-08-02  Miguel de Icaza  <miguel@ximian.com>

	* EventHandlerList.cs: New file.

	* Container.cs, Component.cs, IContainer.cs, IComponent.cs,
	ComponentCollection.cs, ISite.cs: New classes

