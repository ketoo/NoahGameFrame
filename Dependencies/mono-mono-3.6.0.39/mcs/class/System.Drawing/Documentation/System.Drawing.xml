<?xml version="1.0" encoding="utf-8"?>
<masterdoc assembly="System.Drawing">
    <class name="Brush" namespace="System.Drawing">
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Brushes" namespace="System.Drawing">
        <property name="Transparent" propertytype="System.Drawing.Brush" />
        <property name="AliceBlue" propertytype="System.Drawing.Brush" />
        <property name="AntiqueWhite" propertytype="System.Drawing.Brush" />
        <property name="Aqua" propertytype="System.Drawing.Brush" />
        <property name="Aquamarine" propertytype="System.Drawing.Brush" />
        <property name="Azure" propertytype="System.Drawing.Brush" />
        <property name="Beige" propertytype="System.Drawing.Brush" />
        <property name="Bisque" propertytype="System.Drawing.Brush" />
        <property name="Black" propertytype="System.Drawing.Brush" />
        <property name="BlanchedAlmond" propertytype="System.Drawing.Brush" />
        <property name="Blue" propertytype="System.Drawing.Brush" />
        <property name="BlueViolet" propertytype="System.Drawing.Brush" />
        <property name="Brown" propertytype="System.Drawing.Brush" />
        <property name="BurlyWood" propertytype="System.Drawing.Brush" />
        <property name="CadetBlue" propertytype="System.Drawing.Brush" />
        <property name="Chartreuse" propertytype="System.Drawing.Brush" />
        <property name="Chocolate" propertytype="System.Drawing.Brush" />
        <property name="Coral" propertytype="System.Drawing.Brush" />
        <property name="CornflowerBlue" propertytype="System.Drawing.Brush" />
        <property name="Cornsilk" propertytype="System.Drawing.Brush" />
        <property name="Crimson" propertytype="System.Drawing.Brush" />
        <property name="Cyan" propertytype="System.Drawing.Brush" />
        <property name="DarkBlue" propertytype="System.Drawing.Brush" />
        <property name="DarkCyan" propertytype="System.Drawing.Brush" />
        <property name="DarkGoldenrod" propertytype="System.Drawing.Brush" />
        <property name="DarkGray" propertytype="System.Drawing.Brush" />
        <property name="DarkGreen" propertytype="System.Drawing.Brush" />
        <property name="DarkKhaki" propertytype="System.Drawing.Brush" />
        <property name="DarkMagenta" propertytype="System.Drawing.Brush" />
        <property name="DarkOliveGreen" propertytype="System.Drawing.Brush" />
        <property name="DarkOrange" propertytype="System.Drawing.Brush" />
        <property name="DarkOrchid" propertytype="System.Drawing.Brush" />
        <property name="DarkRed" propertytype="System.Drawing.Brush" />
        <property name="DarkSalmon" propertytype="System.Drawing.Brush" />
        <property name="DarkSeaGreen" propertytype="System.Drawing.Brush" />
        <property name="DarkSlateBlue" propertytype="System.Drawing.Brush" />
        <property name="DarkSlateGray" propertytype="System.Drawing.Brush" />
        <property name="DarkTurquoise" propertytype="System.Drawing.Brush" />
        <property name="DarkViolet" propertytype="System.Drawing.Brush" />
        <property name="DeepPink" propertytype="System.Drawing.Brush" />
        <property name="DeepSkyBlue" propertytype="System.Drawing.Brush" />
        <property name="DimGray" propertytype="System.Drawing.Brush" />
        <property name="DodgerBlue" propertytype="System.Drawing.Brush" />
        <property name="Firebrick" propertytype="System.Drawing.Brush" />
        <property name="FloralWhite" propertytype="System.Drawing.Brush" />
        <property name="ForestGreen" propertytype="System.Drawing.Brush" />
        <property name="Fuchsia" propertytype="System.Drawing.Brush" />
        <property name="Gainsboro" propertytype="System.Drawing.Brush" />
        <property name="GhostWhite" propertytype="System.Drawing.Brush" />
        <property name="Gold" propertytype="System.Drawing.Brush" />
        <property name="Goldenrod" propertytype="System.Drawing.Brush" />
        <property name="Gray" propertytype="System.Drawing.Brush" />
        <property name="Green" propertytype="System.Drawing.Brush" />
        <property name="GreenYellow" propertytype="System.Drawing.Brush" />
        <property name="Honeydew" propertytype="System.Drawing.Brush" />
        <property name="HotPink" propertytype="System.Drawing.Brush" />
        <property name="IndianRed" propertytype="System.Drawing.Brush" />
        <property name="Indigo" propertytype="System.Drawing.Brush" />
        <property name="Ivory" propertytype="System.Drawing.Brush" />
        <property name="Khaki" propertytype="System.Drawing.Brush" />
        <property name="Lavender" propertytype="System.Drawing.Brush" />
        <property name="LavenderBlush" propertytype="System.Drawing.Brush" />
        <property name="LawnGreen" propertytype="System.Drawing.Brush" />
        <property name="LemonChiffon" propertytype="System.Drawing.Brush" />
        <property name="LightBlue" propertytype="System.Drawing.Brush" />
        <property name="LightCoral" propertytype="System.Drawing.Brush" />
        <property name="LightCyan" propertytype="System.Drawing.Brush" />
        <property name="LightGoldenrodYellow" propertytype="System.Drawing.Brush" />
        <property name="LightGreen" propertytype="System.Drawing.Brush" />
        <property name="LightGray" propertytype="System.Drawing.Brush" />
        <property name="LightPink" propertytype="System.Drawing.Brush" />
        <property name="LightSalmon" propertytype="System.Drawing.Brush" />
        <property name="LightSeaGreen" propertytype="System.Drawing.Brush" />
        <property name="LightSkyBlue" propertytype="System.Drawing.Brush" />
        <property name="LightSlateGray" propertytype="System.Drawing.Brush" />
        <property name="LightSteelBlue" propertytype="System.Drawing.Brush" />
        <property name="LightYellow" propertytype="System.Drawing.Brush" />
        <property name="Lime" propertytype="System.Drawing.Brush" />
        <property name="LimeGreen" propertytype="System.Drawing.Brush" />
        <property name="Linen" propertytype="System.Drawing.Brush" />
        <property name="Magenta" propertytype="System.Drawing.Brush" />
        <property name="Maroon" propertytype="System.Drawing.Brush" />
        <property name="MediumAquamarine" propertytype="System.Drawing.Brush" />
        <property name="MediumBlue" propertytype="System.Drawing.Brush" />
        <property name="MediumOrchid" propertytype="System.Drawing.Brush" />
        <property name="MediumPurple" propertytype="System.Drawing.Brush" />
        <property name="MediumSeaGreen" propertytype="System.Drawing.Brush" />
        <property name="MediumSlateBlue" propertytype="System.Drawing.Brush" />
        <property name="MediumSpringGreen" propertytype="System.Drawing.Brush" />
        <property name="MediumTurquoise" propertytype="System.Drawing.Brush" />
        <property name="MediumVioletRed" propertytype="System.Drawing.Brush" />
        <property name="MidnightBlue" propertytype="System.Drawing.Brush" />
        <property name="MintCream" propertytype="System.Drawing.Brush" />
        <property name="MistyRose" propertytype="System.Drawing.Brush" />
        <property name="Moccasin" propertytype="System.Drawing.Brush" />
        <property name="NavajoWhite" propertytype="System.Drawing.Brush" />
        <property name="Navy" propertytype="System.Drawing.Brush" />
        <property name="OldLace" propertytype="System.Drawing.Brush" />
        <property name="Olive" propertytype="System.Drawing.Brush" />
        <property name="OliveDrab" propertytype="System.Drawing.Brush" />
        <property name="Orange" propertytype="System.Drawing.Brush" />
        <property name="OrangeRed" propertytype="System.Drawing.Brush" />
        <property name="Orchid" propertytype="System.Drawing.Brush" />
        <property name="PaleGoldenrod" propertytype="System.Drawing.Brush" />
        <property name="PaleGreen" propertytype="System.Drawing.Brush" />
        <property name="PaleTurquoise" propertytype="System.Drawing.Brush" />
        <property name="PaleVioletRed" propertytype="System.Drawing.Brush" />
        <property name="PapayaWhip" propertytype="System.Drawing.Brush" />
        <property name="PeachPuff" propertytype="System.Drawing.Brush" />
        <property name="Peru" propertytype="System.Drawing.Brush" />
        <property name="Pink" propertytype="System.Drawing.Brush" />
        <property name="Plum" propertytype="System.Drawing.Brush" />
        <property name="PowderBlue" propertytype="System.Drawing.Brush" />
        <property name="Purple" propertytype="System.Drawing.Brush" />
        <property name="Red" propertytype="System.Drawing.Brush" />
        <property name="RosyBrown" propertytype="System.Drawing.Brush" />
        <property name="RoyalBlue" propertytype="System.Drawing.Brush" />
        <property name="SaddleBrown" propertytype="System.Drawing.Brush" />
        <property name="Salmon" propertytype="System.Drawing.Brush" />
        <property name="SandyBrown" propertytype="System.Drawing.Brush" />
        <property name="SeaGreen" propertytype="System.Drawing.Brush" />
        <property name="SeaShell" propertytype="System.Drawing.Brush" />
        <property name="Sienna" propertytype="System.Drawing.Brush" />
        <property name="Silver" propertytype="System.Drawing.Brush" />
        <property name="SkyBlue" propertytype="System.Drawing.Brush" />
        <property name="SlateBlue" propertytype="System.Drawing.Brush" />
        <property name="SlateGray" propertytype="System.Drawing.Brush" />
        <property name="Snow" propertytype="System.Drawing.Brush" />
        <property name="SpringGreen" propertytype="System.Drawing.Brush" />
        <property name="SteelBlue" propertytype="System.Drawing.Brush" />
        <property name="Tan" propertytype="System.Drawing.Brush" />
        <property name="Teal" propertytype="System.Drawing.Brush" />
        <property name="Thistle" propertytype="System.Drawing.Brush" />
        <property name="Tomato" propertytype="System.Drawing.Brush" />
        <property name="Turquoise" propertytype="System.Drawing.Brush" />
        <property name="Violet" propertytype="System.Drawing.Brush" />
        <property name="Wheat" propertytype="System.Drawing.Brush" />
        <property name="White" propertytype="System.Drawing.Brush" />
        <property name="WhiteSmoke" propertytype="System.Drawing.Brush" />
        <property name="Yellow" propertytype="System.Drawing.Brush" />
        <property name="YellowGreen" propertytype="System.Drawing.Brush" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ColorConverter" namespace="System.Drawing">
        <constructor name="ColorConverter" argnames="" />
        <property name="Colors" propertytype="System.Collections.Hashtable" />
        <property name="SystemColors" propertytype="System.Collections.Hashtable" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="FontConverter" namespace="System.Drawing">
        <class name="FontNameConverter" namespace="System.Drawing">
            <constructor name="FontNameConverter" argnames="" />
            <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
            <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
            <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
            <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
            <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
            <method name="Finalize" argnames="" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
            <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
            <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
            <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </class>
        <class name="FontUnitConverter" namespace="System.Drawing">
            <constructor name="FontUnitConverter" argnames="" />
            <property name="EnumType" inherited="System.ComponentModel.EnumConverter" propertytype="System.Type" />
            <property name="Values" inherited="System.ComponentModel.EnumConverter" propertytype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
            <property name="Comparer" inherited="System.ComponentModel.EnumConverter" propertytype="System.Collections.IComparer" />
            <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
            <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
            <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
            <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
            <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" inherited="System.ComponentModel.EnumConverter" returntype="System.Object" />
            <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.EnumConverter" returntype="System.Object" />
            <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
            <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
            <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
            <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
            <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
            <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
            <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
            <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </class>
        <constructor name="FontUnitConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="FontNameConverter" namespace="System.Drawing">
        <constructor name="FontNameConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="FontUnitConverter" namespace="System.Drawing">
        <constructor name="FontUnitConverter" argnames="" />
        <property name="EnumType" inherited="System.ComponentModel.EnumConverter" propertytype="System.Type" />
        <property name="Values" inherited="System.ComponentModel.EnumConverter" propertytype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <property name="Comparer" inherited="System.ComponentModel.EnumConverter" propertytype="System.Collections.IComparer" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" inherited="System.ComponentModel.EnumConverter" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.EnumConverter" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" inherited="System.ComponentModel.EnumConverter" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="IconConverter" namespace="System.Drawing">
        <constructor name="IconConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.ExpandableObjectConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.ExpandableObjectConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ImageAnimator" namespace="System.Drawing">
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="UpdateFrames(System.Drawing.Image)" argnames="image" returntype="System.Void" />
        <method name="UpdateFrames" argnames="" returntype="System.Void" />
        <method name="Animate(System.Drawing.Image, System.EventHandler)" argnames="image, onFrameChangedHandler" returntype="System.Void" />
        <method name="CanAnimate(System.Drawing.Image)" argnames="image" returntype="System.Boolean" />
        <method name="StopAnimate(System.Drawing.Image, System.EventHandler)" argnames="image, onFrameChangedHandler" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ImageConverter" namespace="System.Drawing">
        <constructor name="ImageConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Pens" namespace="System.Drawing">
        <property name="Transparent" propertytype="System.Drawing.Pen" />
        <property name="AliceBlue" propertytype="System.Drawing.Pen" />
        <property name="AntiqueWhite" propertytype="System.Drawing.Pen" />
        <property name="Aqua" propertytype="System.Drawing.Pen" />
        <property name="Aquamarine" propertytype="System.Drawing.Pen" />
        <property name="Azure" propertytype="System.Drawing.Pen" />
        <property name="Beige" propertytype="System.Drawing.Pen" />
        <property name="Bisque" propertytype="System.Drawing.Pen" />
        <property name="Black" propertytype="System.Drawing.Pen" />
        <property name="BlanchedAlmond" propertytype="System.Drawing.Pen" />
        <property name="Blue" propertytype="System.Drawing.Pen" />
        <property name="BlueViolet" propertytype="System.Drawing.Pen" />
        <property name="Brown" propertytype="System.Drawing.Pen" />
        <property name="BurlyWood" propertytype="System.Drawing.Pen" />
        <property name="CadetBlue" propertytype="System.Drawing.Pen" />
        <property name="Chartreuse" propertytype="System.Drawing.Pen" />
        <property name="Chocolate" propertytype="System.Drawing.Pen" />
        <property name="Coral" propertytype="System.Drawing.Pen" />
        <property name="CornflowerBlue" propertytype="System.Drawing.Pen" />
        <property name="Cornsilk" propertytype="System.Drawing.Pen" />
        <property name="Crimson" propertytype="System.Drawing.Pen" />
        <property name="Cyan" propertytype="System.Drawing.Pen" />
        <property name="DarkBlue" propertytype="System.Drawing.Pen" />
        <property name="DarkCyan" propertytype="System.Drawing.Pen" />
        <property name="DarkGoldenrod" propertytype="System.Drawing.Pen" />
        <property name="DarkGray" propertytype="System.Drawing.Pen" />
        <property name="DarkGreen" propertytype="System.Drawing.Pen" />
        <property name="DarkKhaki" propertytype="System.Drawing.Pen" />
        <property name="DarkMagenta" propertytype="System.Drawing.Pen" />
        <property name="DarkOliveGreen" propertytype="System.Drawing.Pen" />
        <property name="DarkOrange" propertytype="System.Drawing.Pen" />
        <property name="DarkOrchid" propertytype="System.Drawing.Pen" />
        <property name="DarkRed" propertytype="System.Drawing.Pen" />
        <property name="DarkSalmon" propertytype="System.Drawing.Pen" />
        <property name="DarkSeaGreen" propertytype="System.Drawing.Pen" />
        <property name="DarkSlateBlue" propertytype="System.Drawing.Pen" />
        <property name="DarkSlateGray" propertytype="System.Drawing.Pen" />
        <property name="DarkTurquoise" propertytype="System.Drawing.Pen" />
        <property name="DarkViolet" propertytype="System.Drawing.Pen" />
        <property name="DeepPink" propertytype="System.Drawing.Pen" />
        <property name="DeepSkyBlue" propertytype="System.Drawing.Pen" />
        <property name="DimGray" propertytype="System.Drawing.Pen" />
        <property name="DodgerBlue" propertytype="System.Drawing.Pen" />
        <property name="Firebrick" propertytype="System.Drawing.Pen" />
        <property name="FloralWhite" propertytype="System.Drawing.Pen" />
        <property name="ForestGreen" propertytype="System.Drawing.Pen" />
        <property name="Fuchsia" propertytype="System.Drawing.Pen" />
        <property name="Gainsboro" propertytype="System.Drawing.Pen" />
        <property name="GhostWhite" propertytype="System.Drawing.Pen" />
        <property name="Gold" propertytype="System.Drawing.Pen" />
        <property name="Goldenrod" propertytype="System.Drawing.Pen" />
        <property name="Gray" propertytype="System.Drawing.Pen" />
        <property name="Green" propertytype="System.Drawing.Pen" />
        <property name="GreenYellow" propertytype="System.Drawing.Pen" />
        <property name="Honeydew" propertytype="System.Drawing.Pen" />
        <property name="HotPink" propertytype="System.Drawing.Pen" />
        <property name="IndianRed" propertytype="System.Drawing.Pen" />
        <property name="Indigo" propertytype="System.Drawing.Pen" />
        <property name="Ivory" propertytype="System.Drawing.Pen" />
        <property name="Khaki" propertytype="System.Drawing.Pen" />
        <property name="Lavender" propertytype="System.Drawing.Pen" />
        <property name="LavenderBlush" propertytype="System.Drawing.Pen" />
        <property name="LawnGreen" propertytype="System.Drawing.Pen" />
        <property name="LemonChiffon" propertytype="System.Drawing.Pen" />
        <property name="LightBlue" propertytype="System.Drawing.Pen" />
        <property name="LightCoral" propertytype="System.Drawing.Pen" />
        <property name="LightCyan" propertytype="System.Drawing.Pen" />
        <property name="LightGoldenrodYellow" propertytype="System.Drawing.Pen" />
        <property name="LightGreen" propertytype="System.Drawing.Pen" />
        <property name="LightGray" propertytype="System.Drawing.Pen" />
        <property name="LightPink" propertytype="System.Drawing.Pen" />
        <property name="LightSalmon" propertytype="System.Drawing.Pen" />
        <property name="LightSeaGreen" propertytype="System.Drawing.Pen" />
        <property name="LightSkyBlue" propertytype="System.Drawing.Pen" />
        <property name="LightSlateGray" propertytype="System.Drawing.Pen" />
        <property name="LightSteelBlue" propertytype="System.Drawing.Pen" />
        <property name="LightYellow" propertytype="System.Drawing.Pen" />
        <property name="Lime" propertytype="System.Drawing.Pen" />
        <property name="LimeGreen" propertytype="System.Drawing.Pen" />
        <property name="Linen" propertytype="System.Drawing.Pen" />
        <property name="Magenta" propertytype="System.Drawing.Pen" />
        <property name="Maroon" propertytype="System.Drawing.Pen" />
        <property name="MediumAquamarine" propertytype="System.Drawing.Pen" />
        <property name="MediumBlue" propertytype="System.Drawing.Pen" />
        <property name="MediumOrchid" propertytype="System.Drawing.Pen" />
        <property name="MediumPurple" propertytype="System.Drawing.Pen" />
        <property name="MediumSeaGreen" propertytype="System.Drawing.Pen" />
        <property name="MediumSlateBlue" propertytype="System.Drawing.Pen" />
        <property name="MediumSpringGreen" propertytype="System.Drawing.Pen" />
        <property name="MediumTurquoise" propertytype="System.Drawing.Pen" />
        <property name="MediumVioletRed" propertytype="System.Drawing.Pen" />
        <property name="MidnightBlue" propertytype="System.Drawing.Pen" />
        <property name="MintCream" propertytype="System.Drawing.Pen" />
        <property name="MistyRose" propertytype="System.Drawing.Pen" />
        <property name="Moccasin" propertytype="System.Drawing.Pen" />
        <property name="NavajoWhite" propertytype="System.Drawing.Pen" />
        <property name="Navy" propertytype="System.Drawing.Pen" />
        <property name="OldLace" propertytype="System.Drawing.Pen" />
        <property name="Olive" propertytype="System.Drawing.Pen" />
        <property name="OliveDrab" propertytype="System.Drawing.Pen" />
        <property name="Orange" propertytype="System.Drawing.Pen" />
        <property name="OrangeRed" propertytype="System.Drawing.Pen" />
        <property name="Orchid" propertytype="System.Drawing.Pen" />
        <property name="PaleGoldenrod" propertytype="System.Drawing.Pen" />
        <property name="PaleGreen" propertytype="System.Drawing.Pen" />
        <property name="PaleTurquoise" propertytype="System.Drawing.Pen" />
        <property name="PaleVioletRed" propertytype="System.Drawing.Pen" />
        <property name="PapayaWhip" propertytype="System.Drawing.Pen" />
        <property name="PeachPuff" propertytype="System.Drawing.Pen" />
        <property name="Peru" propertytype="System.Drawing.Pen" />
        <property name="Pink" propertytype="System.Drawing.Pen" />
        <property name="Plum" propertytype="System.Drawing.Pen" />
        <property name="PowderBlue" propertytype="System.Drawing.Pen" />
        <property name="Purple" propertytype="System.Drawing.Pen" />
        <property name="Red" propertytype="System.Drawing.Pen" />
        <property name="RosyBrown" propertytype="System.Drawing.Pen" />
        <property name="RoyalBlue" propertytype="System.Drawing.Pen" />
        <property name="SaddleBrown" propertytype="System.Drawing.Pen" />
        <property name="Salmon" propertytype="System.Drawing.Pen" />
        <property name="SandyBrown" propertytype="System.Drawing.Pen" />
        <property name="SeaGreen" propertytype="System.Drawing.Pen" />
        <property name="SeaShell" propertytype="System.Drawing.Pen" />
        <property name="Sienna" propertytype="System.Drawing.Pen" />
        <property name="Silver" propertytype="System.Drawing.Pen" />
        <property name="SkyBlue" propertytype="System.Drawing.Pen" />
        <property name="SlateBlue" propertytype="System.Drawing.Pen" />
        <property name="SlateGray" propertytype="System.Drawing.Pen" />
        <property name="Snow" propertytype="System.Drawing.Pen" />
        <property name="SpringGreen" propertytype="System.Drawing.Pen" />
        <property name="SteelBlue" propertytype="System.Drawing.Pen" />
        <property name="Tan" propertytype="System.Drawing.Pen" />
        <property name="Teal" propertytype="System.Drawing.Pen" />
        <property name="Thistle" propertytype="System.Drawing.Pen" />
        <property name="Tomato" propertytype="System.Drawing.Pen" />
        <property name="Turquoise" propertytype="System.Drawing.Pen" />
        <property name="Violet" propertytype="System.Drawing.Pen" />
        <property name="Wheat" propertytype="System.Drawing.Pen" />
        <property name="White" propertytype="System.Drawing.Pen" />
        <property name="WhiteSmoke" propertytype="System.Drawing.Pen" />
        <property name="Yellow" propertytype="System.Drawing.Pen" />
        <property name="YellowGreen" propertytype="System.Drawing.Pen" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PointConverter" namespace="System.Drawing">
        <constructor name="PointConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="RectangleConverter" namespace="System.Drawing">
        <constructor name="RectangleConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Region" namespace="System.Drawing">
        <constructor name="Region" argnames="" />
        <constructor name="Region(System.Drawing.RectangleF)" argnames="rect" />
        <constructor name="Region(System.Drawing.Rectangle)" argnames="rect" />
        <constructor name="Region(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" />
        <constructor name="Region(System.Drawing.Drawing2D.RegionData)" argnames="rgnData" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromHrgn(System.IntPtr)" argnames="hrgn" returntype="System.Drawing.Region" />
        <method name="Clone" argnames="" returntype="System.Drawing.Region" />
        <method name="MakeInfinite" argnames="" returntype="System.Void" />
        <method name="MakeEmpty" argnames="" returntype="System.Void" />
        <method name="Intersect(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="Intersect(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="Intersect(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Void" />
        <method name="Intersect(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="Union(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="Union(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="Union(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Void" />
        <method name="Union(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="Xor(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="Xor(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="Xor(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Void" />
        <method name="Xor(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="Exclude(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="Exclude(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="Exclude(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Void" />
        <method name="Exclude(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="Complement(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="Complement(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="Complement(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Void" />
        <method name="Complement(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="Translate(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="Translate(System.Int32, System.Int32)" argnames="dx, dy" returntype="System.Void" />
        <method name="Transform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="GetBounds(System.Drawing.Graphics)" argnames="g" returntype="System.Drawing.RectangleF" />
        <method name="GetHrgn(System.Drawing.Graphics)" argnames="g" returntype="System.IntPtr" />
        <method name="IsEmpty(System.Drawing.Graphics)" argnames="g" returntype="System.Boolean" />
        <method name="IsInfinite(System.Drawing.Graphics)" argnames="g" returntype="System.Boolean" />
        <method name="Equals(System.Drawing.Region, System.Drawing.Graphics)" argnames="region, g" returntype="System.Boolean" />
        <method name="GetRegionData" argnames="" returntype="System.Drawing.Drawing2D.RegionData" />
        <method name="IsVisible(System.Single, System.Single)" argnames="x, y" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.PointF)" argnames="point" returntype="System.Boolean" />
        <method name="IsVisible(System.Single, System.Single, System.Drawing.Graphics)" argnames="x, y, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.PointF, System.Drawing.Graphics)" argnames="point, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Single, System.Single, System.Single, System.Single)" argnames="x, y, width, height" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.RectangleF)" argnames="rect" returntype="System.Boolean" />
        <method name="IsVisible(System.Single, System.Single, System.Single, System.Single, System.Drawing.Graphics)" argnames="x, y, width, height, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.RectangleF, System.Drawing.Graphics)" argnames="rect, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Int32, System.Int32, System.Drawing.Graphics)" argnames="x, y, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Point)" argnames="point" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Point, System.Drawing.Graphics)" argnames="point, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x, y, width, height" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Rectangle)" argnames="rect" returntype="System.Boolean" />
        <method name="IsVisible(System.Int32, System.Int32, System.Int32, System.Int32, System.Drawing.Graphics)" argnames="x, y, width, height, g" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Rectangle, System.Drawing.Graphics)" argnames="rect, g" returntype="System.Boolean" />
        <method name="GetRegionScans(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Drawing.RectangleF[]" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="SizeConverter" namespace="System.Drawing">
        <constructor name="SizeConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="SystemBrushes" namespace="System.Drawing">
        <property name="ActiveBorder" propertytype="System.Drawing.Brush" />
        <property name="ActiveCaption" propertytype="System.Drawing.Brush" />
        <property name="ActiveCaptionText" propertytype="System.Drawing.Brush" />
        <property name="AppWorkspace" propertytype="System.Drawing.Brush" />
        <property name="Desktop" propertytype="System.Drawing.Brush" />
        <property name="Control" propertytype="System.Drawing.Brush" />
        <property name="ControlLightLight" propertytype="System.Drawing.Brush" />
        <property name="ControlLight" propertytype="System.Drawing.Brush" />
        <property name="ControlDark" propertytype="System.Drawing.Brush" />
        <property name="ControlDarkDark" propertytype="System.Drawing.Brush" />
        <property name="ControlText" propertytype="System.Drawing.Brush" />
        <property name="Highlight" propertytype="System.Drawing.Brush" />
        <property name="HighlightText" propertytype="System.Drawing.Brush" />
        <property name="HotTrack" propertytype="System.Drawing.Brush" />
        <property name="InactiveCaption" propertytype="System.Drawing.Brush" />
        <property name="InactiveBorder" propertytype="System.Drawing.Brush" />
        <property name="Info" propertytype="System.Drawing.Brush" />
        <property name="Menu" propertytype="System.Drawing.Brush" />
        <property name="ScrollBar" propertytype="System.Drawing.Brush" />
        <property name="Window" propertytype="System.Drawing.Brush" />
        <property name="WindowText" propertytype="System.Drawing.Brush" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromSystemColor(System.Drawing.Color)" argnames="c" returntype="System.Drawing.Brush" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="SystemColors" namespace="System.Drawing">
        <property name="ActiveBorder" propertytype="System.Drawing.Color" />
        <property name="ActiveCaption" propertytype="System.Drawing.Color" />
        <property name="ActiveCaptionText" propertytype="System.Drawing.Color" />
        <property name="AppWorkspace" propertytype="System.Drawing.Color" />
        <property name="Control" propertytype="System.Drawing.Color" />
        <property name="ControlDark" propertytype="System.Drawing.Color" />
        <property name="ControlDarkDark" propertytype="System.Drawing.Color" />
        <property name="ControlLight" propertytype="System.Drawing.Color" />
        <property name="ControlLightLight" propertytype="System.Drawing.Color" />
        <property name="ControlText" propertytype="System.Drawing.Color" />
        <property name="Desktop" propertytype="System.Drawing.Color" />
        <property name="GrayText" propertytype="System.Drawing.Color" />
        <property name="Highlight" propertytype="System.Drawing.Color" />
        <property name="HighlightText" propertytype="System.Drawing.Color" />
        <property name="HotTrack" propertytype="System.Drawing.Color" />
        <property name="InactiveBorder" propertytype="System.Drawing.Color" />
        <property name="InactiveCaption" propertytype="System.Drawing.Color" />
        <property name="InactiveCaptionText" propertytype="System.Drawing.Color" />
        <property name="Info" propertytype="System.Drawing.Color" />
        <property name="InfoText" propertytype="System.Drawing.Color" />
        <property name="Menu" propertytype="System.Drawing.Color" />
        <property name="MenuText" propertytype="System.Drawing.Color" />
        <property name="ScrollBar" propertytype="System.Drawing.Color" />
        <property name="Window" propertytype="System.Drawing.Color" />
        <property name="WindowFrame" propertytype="System.Drawing.Color" />
        <property name="WindowText" propertytype="System.Drawing.Color" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="SystemIcons" namespace="System.Drawing">
        <property name="Application" propertytype="System.Drawing.Icon" />
        <property name="Asterisk" propertytype="System.Drawing.Icon" />
        <property name="Error" propertytype="System.Drawing.Icon" />
        <property name="Exclamation" propertytype="System.Drawing.Icon" />
        <property name="Hand" propertytype="System.Drawing.Icon" />
        <property name="Information" propertytype="System.Drawing.Icon" />
        <property name="Question" propertytype="System.Drawing.Icon" />
        <property name="Warning" propertytype="System.Drawing.Icon" />
        <property name="WinLogo" propertytype="System.Drawing.Icon" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="SystemPens" namespace="System.Drawing">
        <property name="ActiveCaptionText" propertytype="System.Drawing.Pen" />
        <property name="Control" propertytype="System.Drawing.Pen" />
        <property name="ControlText" propertytype="System.Drawing.Pen" />
        <property name="ControlDark" propertytype="System.Drawing.Pen" />
        <property name="ControlDarkDark" propertytype="System.Drawing.Pen" />
        <property name="ControlLight" propertytype="System.Drawing.Pen" />
        <property name="ControlLightLight" propertytype="System.Drawing.Pen" />
        <property name="GrayText" propertytype="System.Drawing.Pen" />
        <property name="Highlight" propertytype="System.Drawing.Pen" />
        <property name="HighlightText" propertytype="System.Drawing.Pen" />
        <property name="InactiveCaptionText" propertytype="System.Drawing.Pen" />
        <property name="InfoText" propertytype="System.Drawing.Pen" />
        <property name="MenuText" propertytype="System.Drawing.Pen" />
        <property name="WindowFrame" propertytype="System.Drawing.Pen" />
        <property name="WindowText" propertytype="System.Drawing.Pen" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromSystemColor(System.Drawing.Color)" argnames="c" returntype="System.Drawing.Pen" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ToolboxBitmapAttribute" namespace="System.Drawing">
        <constructor name="ToolboxBitmapAttribute(System.String)" argnames="imageFile" />
        <constructor name="ToolboxBitmapAttribute(System.Type)" argnames="t" />
        <constructor name="ToolboxBitmapAttribute(System.Type, System.String)" argnames="t, name" />
        <field name="Default" />
        <property name="TypeId" inherited="System.Attribute" propertytype="System.Object" />
        <method name="IsDefaultAttribute" argnames="" inherited="System.Attribute" returntype="System.Boolean" />
        <method name="Match(System.Object)" argnames="obj" inherited="System.Attribute" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="value" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetImage(System.Object)" argnames="component" returntype="System.Drawing.Image" />
        <method name="GetImage(System.Object, System.Boolean)" argnames="component, large" returntype="System.Drawing.Image" />
        <method name="GetImage(System.Type)" argnames="type" returntype="System.Drawing.Image" />
        <method name="GetImage(System.Type, System.Boolean)" argnames="type, large" returntype="System.Drawing.Image" />
        <method name="GetImage(System.Type, System.String, System.Boolean)" argnames="type, imgName, large" returntype="System.Drawing.Image" />
        <method name="GetImageFromResource(System.Type, System.String, System.Boolean)" argnames="t, imageName, large" returntype="System.Drawing.Image" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Image" namespace="System.Drawing">
        <delegate name="GetThumbnailImageAbort" namespace="System.Drawing">
            <constructor name="GetThumbnailImageAbort(System.Object, System.IntPtr)" argnames="object, method" />
            <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
            <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
            <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Boolean" />
            <method name="BeginInvoke(System.AsyncCallback, System.Object)" argnames="callback, object" returntype="System.IAsyncResult" />
            <method name="Invoke" argnames="" returntype="System.Boolean" />
            <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
            <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
            <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
            <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
            <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
            <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
            <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </delegate>
        <property name="ImageType" propertytype="System.Drawing.Image+ImageTypeEnum" />
        <property name="PhysicalDimension" propertytype="System.Drawing.SizeF" />
        <property name="Size" propertytype="System.Drawing.Size" />
        <property name="Width" propertytype="System.Int32" />
        <property name="Height" propertytype="System.Int32" />
        <property name="HorizontalResolution" propertytype="System.Single" />
        <property name="VerticalResolution" propertytype="System.Single" />
        <property name="Flags" propertytype="System.Int32" />
        <property name="RawFormat" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="PixelFormat" propertytype="System.Drawing.Imaging.PixelFormat" />
        <property name="Palette" propertytype="System.Drawing.Imaging.ColorPalette" />
        <property name="FrameDimensionsList" propertytype="System.Guid[]" />
        <property name="PropertyIdList" propertytype="System.Int32[]" />
        <property name="PropertyItems" propertytype="System.Drawing.Imaging.PropertyItem[]" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromFile(System.String)" argnames="filename" returntype="System.Drawing.Image" />
        <method name="FromFile(System.String, System.Boolean)" argnames="filename, useEmbeddedColorManagement" returntype="System.Drawing.Image" />
        <method name="FromStream(System.IO.Stream)" argnames="stream" returntype="System.Drawing.Image" />
        <method name="FromStream(System.IO.Stream, System.Boolean)" argnames="stream, useEmbeddedColorManagement" returntype="System.Drawing.Image" />
        <method name="GetEncoderParameterList(System.Guid)" argnames="encoder" returntype="System.Drawing.Imaging.EncoderParameters" />
        <method name="Save(System.String)" argnames="filename" returntype="System.Void" />
        <method name="Save(System.String, System.Drawing.Imaging.ImageFormat)" argnames="filename, format" returntype="System.Void" />
        <method name="Save(System.String, System.Drawing.Imaging.ImageCodecInfo, System.Drawing.Imaging.EncoderParameters)" argnames="filename, encoder, encoderParams" returntype="System.Void" />
        <method name="Save(System.IO.Stream, System.Drawing.Imaging.ImageFormat)" argnames="stream, format" returntype="System.Void" />
        <method name="Save(System.IO.Stream, System.Drawing.Imaging.ImageCodecInfo, System.Drawing.Imaging.EncoderParameters)" argnames="stream, encoder, encoderParams" returntype="System.Void" />
        <method name="SaveAdd(System.Drawing.Imaging.EncoderParameters)" argnames="encoderParams" returntype="System.Void" />
        <method name="SaveAdd(System.Drawing.Image, System.Drawing.Imaging.EncoderParameters)" argnames="image, encoderParams" returntype="System.Void" />
        <method name="GetBounds(System.Drawing.GraphicsUnit&amp;)" argnames="pageUnit" returntype="System.Drawing.RectangleF" />
        <method name="GetThumbnailImage(System.Int32, System.Int32, System.Drawing.Image.GetThumbnailImageAbort, System.IntPtr)" argnames="thumbWidth, thumbHeight, callback, callbackData" returntype="System.Drawing.Image" />
        <method name="GetFrameCount(System.Drawing.Imaging.FrameDimension)" argnames="dimension" returntype="System.Int32" />
        <method name="SelectActiveFrame(System.Drawing.Imaging.FrameDimension, System.Int32)" argnames="dimension, frameIndex" returntype="System.Int32" />
        <method name="RotateFlip(System.Drawing.RotateFlipType)" argnames="rotateFlipType" returntype="System.Void" />
        <method name="GetPropertyItem(System.Int32)" argnames="propid" returntype="System.Drawing.Imaging.PropertyItem" />
        <method name="RemovePropertyItem(System.Int32)" argnames="propid" returntype="System.Void" />
        <method name="SetPropertyItem(System.Drawing.Imaging.PropertyItem)" argnames="propitem" returntype="System.Void" />
        <method name="FromHbitmap(System.IntPtr)" argnames="hbitmap" returntype="System.Drawing.Bitmap" />
        <method name="FromHbitmap(System.IntPtr, System.IntPtr)" argnames="hbitmap, hpalette" returntype="System.Drawing.Bitmap" />
        <method name="GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)" argnames="pixfmt" returntype="System.Int32" />
        <method name="IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)" argnames="pixfmt" returntype="System.Boolean" />
        <method name="IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)" argnames="pixfmt" returntype="System.Boolean" />
        <method name="IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)" argnames="pixfmt" returntype="System.Boolean" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Bitmap" namespace="System.Drawing">
        <constructor name="Bitmap(System.String)" argnames="filename" />
        <constructor name="Bitmap(System.String, System.Boolean)" argnames="filename, useIcm" />
        <constructor name="Bitmap(System.Type, System.String)" argnames="type, resource" />
        <constructor name="Bitmap(System.IO.Stream)" argnames="stream" />
        <constructor name="Bitmap(System.IO.Stream, System.Boolean)" argnames="stream, useIcm" />
        <constructor name="Bitmap(System.Int32, System.Int32, System.Int32, System.Drawing.Imaging.PixelFormat, System.IntPtr)" argnames="width, height, stride, format, scan0" />
        <constructor name="Bitmap(System.Int32, System.Int32, System.Drawing.Imaging.PixelFormat)" argnames="width, height, format" />
        <constructor name="Bitmap(System.Int32, System.Int32)" argnames="width, height" />
        <constructor name="Bitmap(System.Int32, System.Int32, System.Drawing.Graphics)" argnames="width, height, g" />
        <constructor name="Bitmap(System.Drawing.Image)" argnames="original" />
        <constructor name="Bitmap(System.Drawing.Image, System.Int32, System.Int32)" argnames="original, width, height" />
        <constructor name="Bitmap(System.Drawing.Image, System.Drawing.Size)" argnames="original, newSize" />
        <property name="PhysicalDimension" inherited="System.Drawing.Image" propertytype="System.Drawing.SizeF" />
        <property name="Size" inherited="System.Drawing.Image" propertytype="System.Drawing.Size" />
        <property name="Width" inherited="System.Drawing.Image" propertytype="System.Int32" />
        <property name="Height" inherited="System.Drawing.Image" propertytype="System.Int32" />
        <property name="HorizontalResolution" inherited="System.Drawing.Image" propertytype="System.Single" />
        <property name="VerticalResolution" inherited="System.Drawing.Image" propertytype="System.Single" />
        <property name="Flags" inherited="System.Drawing.Image" propertytype="System.Int32" />
        <property name="RawFormat" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="PixelFormat" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.PixelFormat" />
        <property name="Palette" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.ColorPalette" />
        <property name="FrameDimensionsList" inherited="System.Drawing.Image" propertytype="System.Guid[]" />
        <property name="PropertyIdList" inherited="System.Drawing.Image" propertytype="System.Int32[]" />
        <property name="PropertyItems" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.PropertyItem[]" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Drawing.Image" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromHicon(System.IntPtr)" argnames="hicon" returntype="System.Drawing.Bitmap" />
        <method name="FromResource(System.IntPtr, System.String)" argnames="hinstance, bitmapName" returntype="System.Drawing.Bitmap" />
        <method name="GetHbitmap" argnames="" returntype="System.IntPtr" />
        <method name="GetHbitmap(System.Drawing.Color)" argnames="background" returntype="System.IntPtr" />
        <method name="GetHicon" argnames="" returntype="System.IntPtr" />
        <method name="Clone(System.Drawing.Rectangle, System.Drawing.Imaging.PixelFormat)" argnames="rect, format" returntype="System.Drawing.Bitmap" />
        <method name="Clone(System.Drawing.RectangleF, System.Drawing.Imaging.PixelFormat)" argnames="rect, format" returntype="System.Drawing.Bitmap" />
        <method name="MakeTransparent" argnames="" returntype="System.Void" />
        <method name="MakeTransparent(System.Drawing.Color)" argnames="transparentColor" returntype="System.Void" />
        <method name="LockBits(System.Drawing.Rectangle, System.Drawing.Imaging.ImageLockMode, System.Drawing.Imaging.PixelFormat)" argnames="rect, flags, format" returntype="System.Drawing.Imaging.BitmapData" />
        <method name="UnlockBits(System.Drawing.Imaging.BitmapData)" argnames="bitmapdata" returntype="System.Void" />
        <method name="GetPixel(System.Int32, System.Int32)" argnames="x, y" returntype="System.Drawing.Color" />
        <method name="SetPixel(System.Int32, System.Int32, System.Drawing.Color)" argnames="x, y, color" returntype="System.Void" />
        <method name="SetResolution(System.Single, System.Single)" argnames="xDpi, yDpi" returntype="System.Void" />
        <method name="GetEncoderParameterList(System.Guid)" argnames="encoder" inherited="System.Drawing.Image" returntype="System.Drawing.Imaging.EncoderParameters" />
        <method name="Save(System.String)" argnames="filename" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.String, System.Drawing.Imaging.ImageFormat)" argnames="filename, format" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.String, System.Drawing.Imaging.ImageCodecInfo, System.Drawing.Imaging.EncoderParameters)" argnames="filename, encoder, encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.IO.Stream, System.Drawing.Imaging.ImageFormat)" argnames="stream, format" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.IO.Stream, System.Drawing.Imaging.ImageCodecInfo, System.Drawing.Imaging.EncoderParameters)" argnames="stream, encoder, encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="SaveAdd(System.Drawing.Imaging.EncoderParameters)" argnames="encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="SaveAdd(System.Drawing.Image, System.Drawing.Imaging.EncoderParameters)" argnames="image, encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetBounds(System.Drawing.GraphicsUnit&amp;)" argnames="pageUnit" inherited="System.Drawing.Image" returntype="System.Drawing.RectangleF" />
        <method name="GetThumbnailImage(System.Int32, System.Int32, System.Drawing.Image.GetThumbnailImageAbort, System.IntPtr)" argnames="thumbWidth, thumbHeight, callback, callbackData" inherited="System.Drawing.Image" returntype="System.Drawing.Image" />
        <method name="GetFrameCount(System.Drawing.Imaging.FrameDimension)" argnames="dimension" inherited="System.Drawing.Image" returntype="System.Int32" />
        <method name="SelectActiveFrame(System.Drawing.Imaging.FrameDimension, System.Int32)" argnames="dimension, frameIndex" inherited="System.Drawing.Image" returntype="System.Int32" />
        <method name="RotateFlip(System.Drawing.RotateFlipType)" argnames="rotateFlipType" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetPropertyItem(System.Int32)" argnames="propid" inherited="System.Drawing.Image" returntype="System.Drawing.Imaging.PropertyItem" />
        <method name="RemovePropertyItem(System.Int32)" argnames="propid" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="SetPropertyItem(System.Drawing.Imaging.PropertyItem)" argnames="propitem" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Graphics" namespace="System.Drawing">
        <delegate name="DrawImageAbort" namespace="System.Drawing">
            <constructor name="DrawImageAbort(System.Object, System.IntPtr)" argnames="object, method" />
            <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
            <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
            <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Boolean" />
            <method name="BeginInvoke(System.IntPtr, System.AsyncCallback, System.Object)" argnames="callbackdata, callback, object" returntype="System.IAsyncResult" />
            <method name="Invoke(System.IntPtr)" argnames="callbackdata" returntype="System.Boolean" />
            <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
            <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
            <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
            <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
            <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
            <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
            <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </delegate>
        <delegate name="EnumerateMetafileProc" namespace="System.Drawing">
            <constructor name="EnumerateMetafileProc(System.Object, System.IntPtr)" argnames="object, method" />
            <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
            <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
            <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Boolean" />
            <method name="BeginInvoke(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.IntPtr, System.Drawing.Imaging.PlayRecordCallback, System.AsyncCallback, System.Object)" argnames="recordType, flags, dataSize, data, callbackData, callback, object" returntype="System.IAsyncResult" />
            <method name="Invoke(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.IntPtr, System.Drawing.Imaging.PlayRecordCallback)" argnames="recordType, flags, dataSize, data, callbackData" returntype="System.Boolean" />
            <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
            <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
            <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
            <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
            <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
            <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
            <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </delegate>
        <property name="CompositingMode" propertytype="System.Drawing.Drawing2D.CompositingMode" />
        <property name="RenderingOrigin" propertytype="System.Drawing.Point" />
        <property name="CompositingQuality" propertytype="System.Drawing.Drawing2D.CompositingQuality" />
        <property name="TextRenderingHint" propertytype="System.Drawing.Text.TextRenderingHint" />
        <property name="TextContrast" propertytype="System.Int32" />
        <property name="SmoothingMode" propertytype="System.Drawing.Drawing2D.SmoothingMode" />
        <property name="PixelOffsetMode" propertytype="System.Drawing.Drawing2D.PixelOffsetMode" />
        <property name="InterpolationMode" propertytype="System.Drawing.Drawing2D.InterpolationMode" />
        <property name="Transform" propertytype="System.Drawing.Drawing2D.Matrix" />
        <property name="PageUnit" propertytype="System.Drawing.GraphicsUnit" />
        <property name="PageScale" propertytype="System.Single" />
        <property name="DpiX" propertytype="System.Single" />
        <property name="DpiY" propertytype="System.Single" />
        <property name="Clip" propertytype="System.Drawing.Region" />
        <property name="ClipBounds" propertytype="System.Drawing.RectangleF" />
        <property name="IsClipEmpty" propertytype="System.Boolean" />
        <property name="VisibleClipBounds" propertytype="System.Drawing.RectangleF" />
        <property name="IsVisibleClipEmpty" propertytype="System.Boolean" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromHdc(System.IntPtr)" argnames="hdc" returntype="System.Drawing.Graphics" />
        <method name="FromHdcInternal(System.IntPtr)" argnames="hdc" returntype="System.Drawing.Graphics" />
        <method name="FromHdc(System.IntPtr, System.IntPtr)" argnames="hdc, hdevice" returntype="System.Drawing.Graphics" />
        <method name="FromHwnd(System.IntPtr)" argnames="hwnd" returntype="System.Drawing.Graphics" />
        <method name="FromHwndInternal(System.IntPtr)" argnames="hwnd" returntype="System.Drawing.Graphics" />
        <method name="FromImage(System.Drawing.Image)" argnames="image" returntype="System.Drawing.Graphics" />
        <method name="GetHdc" argnames="" returntype="System.IntPtr" />
        <method name="ReleaseHdc(System.IntPtr)" argnames="hdc" returntype="System.Void" />
        <method name="ReleaseHdcInternal(System.IntPtr)" argnames="hdc" returntype="System.Void" />
        <method name="Flush" argnames="" returntype="System.Void" />
        <method name="Flush(System.Drawing.Drawing2D.FlushIntention)" argnames="intention" returntype="System.Void" />
        <method name="ResetTransform" argnames="" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.MatrixOrder)" argnames="matrix, order" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="dx, dy, order" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single)" argnames="sx, sy" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="sx, sy, order" returntype="System.Void" />
        <method name="RotateTransform(System.Single)" argnames="angle" returntype="System.Void" />
        <method name="RotateTransform(System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, order" returntype="System.Void" />
        <method name="TransformPoints(System.Drawing.Drawing2D.CoordinateSpace, System.Drawing.Drawing2D.CoordinateSpace, System.Drawing.PointF[])" argnames="destSpace, srcSpace, pts" returntype="System.Void" />
        <method name="TransformPoints(System.Drawing.Drawing2D.CoordinateSpace, System.Drawing.Drawing2D.CoordinateSpace, System.Drawing.Point[])" argnames="destSpace, srcSpace, pts" returntype="System.Void" />
        <method name="GetNearestColor(System.Drawing.Color)" argnames="color" returntype="System.Drawing.Color" />
        <method name="DrawLine(System.Drawing.Pen, System.Single, System.Single, System.Single, System.Single)" argnames="pen, x1, y1, x2, y2" returntype="System.Void" />
        <method name="DrawLine(System.Drawing.Pen, System.Drawing.PointF, System.Drawing.PointF)" argnames="pen, pt1, pt2" returntype="System.Void" />
        <method name="DrawLines(System.Drawing.Pen, System.Drawing.PointF[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawLine(System.Drawing.Pen, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="pen, x1, y1, x2, y2" returntype="System.Void" />
        <method name="DrawLine(System.Drawing.Pen, System.Drawing.Point, System.Drawing.Point)" argnames="pen, pt1, pt2" returntype="System.Void" />
        <method name="DrawLines(System.Drawing.Pen, System.Drawing.Point[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawArc(System.Drawing.Pen, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="pen, x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawArc(System.Drawing.Pen, System.Drawing.RectangleF, System.Single, System.Single)" argnames="pen, rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawArc(System.Drawing.Pen, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="pen, x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawArc(System.Drawing.Pen, System.Drawing.Rectangle, System.Single, System.Single)" argnames="pen, rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawBezier(System.Drawing.Pen, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="pen, x1, y1, x2, y2, x3, y3, x4, y4" returntype="System.Void" />
        <method name="DrawBezier(System.Drawing.Pen, System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF)" argnames="pen, pt1, pt2, pt3, pt4" returntype="System.Void" />
        <method name="DrawBeziers(System.Drawing.Pen, System.Drawing.PointF[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawBezier(System.Drawing.Pen, System.Drawing.Point, System.Drawing.Point, System.Drawing.Point, System.Drawing.Point)" argnames="pen, pt1, pt2, pt3, pt4" returntype="System.Void" />
        <method name="DrawBeziers(System.Drawing.Pen, System.Drawing.Point[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawRectangle(System.Drawing.Pen, System.Drawing.Rectangle)" argnames="pen, rect" returntype="System.Void" />
        <method name="DrawRectangle(System.Drawing.Pen, System.Single, System.Single, System.Single, System.Single)" argnames="pen, x, y, width, height" returntype="System.Void" />
        <method name="DrawRectangles(System.Drawing.Pen, System.Drawing.RectangleF[])" argnames="pen, rects" returntype="System.Void" />
        <method name="DrawRectangle(System.Drawing.Pen, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="pen, x, y, width, height" returntype="System.Void" />
        <method name="DrawRectangles(System.Drawing.Pen, System.Drawing.Rectangle[])" argnames="pen, rects" returntype="System.Void" />
        <method name="DrawEllipse(System.Drawing.Pen, System.Drawing.RectangleF)" argnames="pen, rect" returntype="System.Void" />
        <method name="DrawEllipse(System.Drawing.Pen, System.Single, System.Single, System.Single, System.Single)" argnames="pen, x, y, width, height" returntype="System.Void" />
        <method name="DrawEllipse(System.Drawing.Pen, System.Drawing.Rectangle)" argnames="pen, rect" returntype="System.Void" />
        <method name="DrawEllipse(System.Drawing.Pen, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="pen, x, y, width, height" returntype="System.Void" />
        <method name="DrawPie(System.Drawing.Pen, System.Drawing.RectangleF, System.Single, System.Single)" argnames="pen, rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawPie(System.Drawing.Pen, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="pen, x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawPie(System.Drawing.Pen, System.Drawing.Rectangle, System.Single, System.Single)" argnames="pen, rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawPie(System.Drawing.Pen, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="pen, x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="DrawPolygon(System.Drawing.Pen, System.Drawing.PointF[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawPolygon(System.Drawing.Pen, System.Drawing.Point[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawPath(System.Drawing.Pen, System.Drawing.Drawing2D.GraphicsPath)" argnames="pen, path" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.PointF[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.PointF[], System.Single)" argnames="pen, points, tension" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.PointF[], System.Int32, System.Int32)" argnames="pen, points, offset, numberOfSegments" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.PointF[], System.Int32, System.Int32, System.Single)" argnames="pen, points, offset, numberOfSegments, tension" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.Point[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.Point[], System.Single)" argnames="pen, points, tension" returntype="System.Void" />
        <method name="DrawCurve(System.Drawing.Pen, System.Drawing.Point[], System.Int32, System.Int32, System.Single)" argnames="pen, points, offset, numberOfSegments, tension" returntype="System.Void" />
        <method name="DrawClosedCurve(System.Drawing.Pen, System.Drawing.PointF[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawClosedCurve(System.Drawing.Pen, System.Drawing.PointF[], System.Single, System.Drawing.Drawing2D.FillMode)" argnames="pen, points, tension, fillmode" returntype="System.Void" />
        <method name="DrawClosedCurve(System.Drawing.Pen, System.Drawing.Point[])" argnames="pen, points" returntype="System.Void" />
        <method name="DrawClosedCurve(System.Drawing.Pen, System.Drawing.Point[], System.Single, System.Drawing.Drawing2D.FillMode)" argnames="pen, points, tension, fillmode" returntype="System.Void" />
        <method name="Clear(System.Drawing.Color)" argnames="color" returntype="System.Void" />
        <method name="FillRectangle(System.Drawing.Brush, System.Drawing.RectangleF)" argnames="brush, rect" returntype="System.Void" />
        <method name="FillRectangle(System.Drawing.Brush, System.Single, System.Single, System.Single, System.Single)" argnames="brush, x, y, width, height" returntype="System.Void" />
        <method name="FillRectangles(System.Drawing.Brush, System.Drawing.RectangleF[])" argnames="brush, rects" returntype="System.Void" />
        <method name="FillRectangle(System.Drawing.Brush, System.Drawing.Rectangle)" argnames="brush, rect" returntype="System.Void" />
        <method name="FillRectangle(System.Drawing.Brush, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="brush, x, y, width, height" returntype="System.Void" />
        <method name="FillRectangles(System.Drawing.Brush, System.Drawing.Rectangle[])" argnames="brush, rects" returntype="System.Void" />
        <method name="FillPolygon(System.Drawing.Brush, System.Drawing.PointF[])" argnames="brush, points" returntype="System.Void" />
        <method name="FillPolygon(System.Drawing.Brush, System.Drawing.PointF[], System.Drawing.Drawing2D.FillMode)" argnames="brush, points, fillMode" returntype="System.Void" />
        <method name="FillPolygon(System.Drawing.Brush, System.Drawing.Point[])" argnames="brush, points" returntype="System.Void" />
        <method name="FillPolygon(System.Drawing.Brush, System.Drawing.Point[], System.Drawing.Drawing2D.FillMode)" argnames="brush, points, fillMode" returntype="System.Void" />
        <method name="FillEllipse(System.Drawing.Brush, System.Drawing.RectangleF)" argnames="brush, rect" returntype="System.Void" />
        <method name="FillEllipse(System.Drawing.Brush, System.Single, System.Single, System.Single, System.Single)" argnames="brush, x, y, width, height" returntype="System.Void" />
        <method name="FillEllipse(System.Drawing.Brush, System.Drawing.Rectangle)" argnames="brush, rect" returntype="System.Void" />
        <method name="FillEllipse(System.Drawing.Brush, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="brush, x, y, width, height" returntype="System.Void" />
        <method name="FillPie(System.Drawing.Brush, System.Drawing.Rectangle, System.Single, System.Single)" argnames="brush, rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="FillPie(System.Drawing.Brush, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="brush, x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="FillPie(System.Drawing.Brush, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="brush, x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="FillPath(System.Drawing.Brush, System.Drawing.Drawing2D.GraphicsPath)" argnames="brush, path" returntype="System.Void" />
        <method name="FillClosedCurve(System.Drawing.Brush, System.Drawing.PointF[])" argnames="brush, points" returntype="System.Void" />
        <method name="FillClosedCurve(System.Drawing.Brush, System.Drawing.PointF[], System.Drawing.Drawing2D.FillMode)" argnames="brush, points, fillmode" returntype="System.Void" />
        <method name="FillClosedCurve(System.Drawing.Brush, System.Drawing.PointF[], System.Drawing.Drawing2D.FillMode, System.Single)" argnames="brush, points, fillmode, tension" returntype="System.Void" />
        <method name="FillClosedCurve(System.Drawing.Brush, System.Drawing.Point[])" argnames="brush, points" returntype="System.Void" />
        <method name="FillClosedCurve(System.Drawing.Brush, System.Drawing.Point[], System.Drawing.Drawing2D.FillMode)" argnames="brush, points, fillmode" returntype="System.Void" />
        <method name="FillClosedCurve(System.Drawing.Brush, System.Drawing.Point[], System.Drawing.Drawing2D.FillMode, System.Single)" argnames="brush, points, fillmode, tension" returntype="System.Void" />
        <method name="FillRegion(System.Drawing.Brush, System.Drawing.Region)" argnames="brush, region" returntype="System.Void" />
        <method name="DrawString(System.String, System.Drawing.Font, System.Drawing.Brush, System.Single, System.Single)" argnames="s, font, brush, x, y" returntype="System.Void" />
        <method name="DrawString(System.String, System.Drawing.Font, System.Drawing.Brush, System.Drawing.PointF)" argnames="s, font, brush, point" returntype="System.Void" />
        <method name="DrawString(System.String, System.Drawing.Font, System.Drawing.Brush, System.Single, System.Single, System.Drawing.StringFormat)" argnames="s, font, brush, x, y, format" returntype="System.Void" />
        <method name="DrawString(System.String, System.Drawing.Font, System.Drawing.Brush, System.Drawing.PointF, System.Drawing.StringFormat)" argnames="s, font, brush, point, format" returntype="System.Void" />
        <method name="DrawString(System.String, System.Drawing.Font, System.Drawing.Brush, System.Drawing.RectangleF)" argnames="s, font, brush, layoutRectangle" returntype="System.Void" />
        <method name="DrawString(System.String, System.Drawing.Font, System.Drawing.Brush, System.Drawing.RectangleF, System.Drawing.StringFormat)" argnames="s, font, brush, layoutRectangle, format" returntype="System.Void" />
        <method name="MeasureString(System.String, System.Drawing.Font, System.Drawing.SizeF, System.Drawing.StringFormat, System.Int32&amp;, System.Int32&amp;)" argnames="text, font, layoutArea, stringFormat, charactersFitted, linesFilled" returntype="System.Drawing.SizeF" />
        <method name="MeasureString(System.String, System.Drawing.Font, System.Drawing.PointF, System.Drawing.StringFormat)" argnames="text, font, origin, stringFormat" returntype="System.Drawing.SizeF" />
        <method name="MeasureString(System.String, System.Drawing.Font, System.Drawing.SizeF)" argnames="text, font, layoutArea" returntype="System.Drawing.SizeF" />
        <method name="MeasureString(System.String, System.Drawing.Font, System.Drawing.SizeF, System.Drawing.StringFormat)" argnames="text, font, layoutArea, stringFormat" returntype="System.Drawing.SizeF" />
        <method name="MeasureString(System.String, System.Drawing.Font)" argnames="text, font" returntype="System.Drawing.SizeF" />
        <method name="MeasureString(System.String, System.Drawing.Font, System.Int32)" argnames="text, font, width" returntype="System.Drawing.SizeF" />
        <method name="MeasureString(System.String, System.Drawing.Font, System.Int32, System.Drawing.StringFormat)" argnames="text, font, width, format" returntype="System.Drawing.SizeF" />
        <method name="MeasureCharacterRanges(System.String, System.Drawing.Font, System.Drawing.RectangleF, System.Drawing.StringFormat)" argnames="text, font, layoutRect, stringFormat" returntype="System.Drawing.Region[]" />
        <method name="DrawIcon(System.Drawing.Icon, System.Int32, System.Int32)" argnames="icon, x, y" returntype="System.Void" />
        <method name="DrawIcon(System.Drawing.Icon, System.Drawing.Rectangle)" argnames="icon, targetRect" returntype="System.Void" />
        <method name="DrawIconUnstretched(System.Drawing.Icon, System.Drawing.Rectangle)" argnames="icon, targetRect" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.PointF)" argnames="image, point" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Single, System.Single)" argnames="image, x, y" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.RectangleF)" argnames="image, rect" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Single, System.Single, System.Single, System.Single)" argnames="image, x, y, width, height" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Point)" argnames="image, point" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Int32, System.Int32)" argnames="image, x, y" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle)" argnames="image, rect" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="image, x, y, width, height" returntype="System.Void" />
        <method name="DrawImageUnscaled(System.Drawing.Image, System.Drawing.Point)" argnames="image, point" returntype="System.Void" />
        <method name="DrawImageUnscaled(System.Drawing.Image, System.Int32, System.Int32)" argnames="image, x, y" returntype="System.Void" />
        <method name="DrawImageUnscaled(System.Drawing.Image, System.Drawing.Rectangle)" argnames="image, rect" returntype="System.Void" />
        <method name="DrawImageUnscaled(System.Drawing.Image, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="image, x, y, width, height" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.PointF[])" argnames="image, destPoints" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Point[])" argnames="image, destPoints" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Single, System.Single, System.Drawing.RectangleF, System.Drawing.GraphicsUnit)" argnames="image, x, y, srcRect, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Int32, System.Int32, System.Drawing.Rectangle, System.Drawing.GraphicsUnit)" argnames="image, x, y, srcRect, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.RectangleF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit)" argnames="image, destRect, srcRect, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Drawing.Rectangle, System.Drawing.GraphicsUnit)" argnames="image, destRect, srcRect, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit)" argnames="image, destPoints, srcRect, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes)" argnames="image, destPoints, srcRect, srcUnit, imageAttr" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort)" argnames="image, destPoints, srcRect, srcUnit, imageAttr, callback" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort, System.Int32)" argnames="image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit)" argnames="image, destPoints, srcRect, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes)" argnames="image, destPoints, srcRect, srcUnit, imageAttr" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort)" argnames="image, destPoints, srcRect, srcUnit, imageAttr, callback" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort, System.Int32)" argnames="image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Single, System.Single, System.Single, System.Single, System.Drawing.GraphicsUnit)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Single, System.Single, System.Single, System.Single, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Single, System.Single, System.Single, System.Single, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Single, System.Single, System.Single, System.Single, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort, System.IntPtr)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Int32, System.Int32, System.Int32, System.Int32, System.Drawing.GraphicsUnit)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Int32, System.Int32, System.Int32, System.Int32, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Int32, System.Int32, System.Int32, System.Int32, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr, callback" returntype="System.Void" />
        <method name="DrawImage(System.Drawing.Image, System.Drawing.Rectangle, System.Int32, System.Int32, System.Int32, System.Int32, System.Drawing.GraphicsUnit, System.Drawing.Imaging.ImageAttributes, System.Drawing.Graphics.DrawImageAbort, System.IntPtr)" argnames="image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoint, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoint, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoint, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoint, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoint, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoint, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.RectangleF, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destRect, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.RectangleF, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destRect, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.RectangleF, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destRect, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Rectangle, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destRect, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Rectangle, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destRect, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Rectangle, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destRect, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF[], System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoints, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF[], System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoints, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF[], System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoints, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point[], System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoints, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point[], System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoints, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point[], System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoints, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoint, srcRect, srcUnit, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoint, srcRect, srcUnit, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point, System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoint, srcRect, srcUnit, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point, System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoint, srcRect, srcUnit, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point, System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.RectangleF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destRect, srcRect, srcUnit, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.RectangleF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destRect, srcRect, srcUnit, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.RectangleF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destRect, srcRect, unit, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Rectangle, System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destRect, srcRect, srcUnit, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Rectangle, System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destRect, srcRect, srcUnit, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Rectangle, System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destRect, srcRect, unit, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoints, srcRect, srcUnit, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoints, srcRect, srcUnit, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc)" argnames="metafile, destPoints, srcRect, srcUnit, callback" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr)" argnames="metafile, destPoints, srcRect, srcUnit, callback, callbackData" returntype="System.Void" />
        <method name="EnumerateMetafile(System.Drawing.Imaging.Metafile, System.Drawing.Point[], System.Drawing.Rectangle, System.Drawing.GraphicsUnit, System.Drawing.Graphics.EnumerateMetafileProc, System.IntPtr, System.Drawing.Imaging.ImageAttributes)" argnames="metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Graphics)" argnames="g" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Graphics, System.Drawing.Drawing2D.CombineMode)" argnames="g, combineMode" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Rectangle, System.Drawing.Drawing2D.CombineMode)" argnames="rect, combineMode" returntype="System.Void" />
        <method name="SetClip(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="SetClip(System.Drawing.RectangleF, System.Drawing.Drawing2D.CombineMode)" argnames="rect, combineMode" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Drawing2D.GraphicsPath, System.Drawing.Drawing2D.CombineMode)" argnames="path, combineMode" returntype="System.Void" />
        <method name="SetClip(System.Drawing.Region, System.Drawing.Drawing2D.CombineMode)" argnames="region, combineMode" returntype="System.Void" />
        <method name="IntersectClip(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="IntersectClip(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="IntersectClip(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="ExcludeClip(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="ExcludeClip(System.Drawing.Region)" argnames="region" returntype="System.Void" />
        <method name="ResetClip" argnames="" returntype="System.Void" />
        <method name="TranslateClip(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="TranslateClip(System.Int32, System.Int32)" argnames="dx, dy" returntype="System.Void" />
        <method name="IsVisible(System.Int32, System.Int32)" argnames="x, y" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Point)" argnames="point" returntype="System.Boolean" />
        <method name="IsVisible(System.Single, System.Single)" argnames="x, y" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.PointF)" argnames="point" returntype="System.Boolean" />
        <method name="IsVisible(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x, y, width, height" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Rectangle)" argnames="rect" returntype="System.Boolean" />
        <method name="IsVisible(System.Single, System.Single, System.Single, System.Single)" argnames="x, y, width, height" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.RectangleF)" argnames="rect" returntype="System.Boolean" />
        <method name="Save" argnames="" returntype="System.Drawing.Drawing2D.GraphicsState" />
        <method name="Restore(System.Drawing.Drawing2D.GraphicsState)" argnames="gstate" returntype="System.Void" />
        <method name="BeginContainer(System.Drawing.RectangleF, System.Drawing.RectangleF, System.Drawing.GraphicsUnit)" argnames="dstrect, srcrect, unit" returntype="System.Drawing.Drawing2D.GraphicsContainer" />
        <method name="BeginContainer" argnames="" returntype="System.Drawing.Drawing2D.GraphicsContainer" />
        <method name="EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" argnames="container" returntype="System.Void" />
        <method name="BeginContainer(System.Drawing.Rectangle, System.Drawing.Rectangle, System.Drawing.GraphicsUnit)" argnames="dstrect, srcrect, unit" returntype="System.Drawing.Drawing2D.GraphicsContainer" />
        <method name="AddMetafileComment(System.Byte[])" argnames="data" returntype="System.Void" />
        <method name="GetHalftonePalette" argnames="" returntype="System.IntPtr" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Icon" namespace="System.Drawing">
        <constructor name="Icon(System.String)" argnames="fileName" />
        <constructor name="Icon(System.Drawing.Icon, System.Drawing.Size)" argnames="original, size" />
        <constructor name="Icon(System.Drawing.Icon, System.Int32, System.Int32)" argnames="original, width, height" />
        <constructor name="Icon(System.Type, System.String)" argnames="type, resource" />
        <constructor name="Icon(System.IO.Stream)" argnames="stream" />
        <constructor name="Icon(System.IO.Stream, System.Int32, System.Int32)" argnames="stream, width, height" />
        <property name="Handle" propertytype="System.IntPtr" />
        <property name="Height" propertytype="System.Int32" />
        <property name="Size" propertytype="System.Drawing.Size" />
        <property name="Width" propertytype="System.Int32" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="FromHandle(System.IntPtr)" argnames="handle" returntype="System.Drawing.Icon" />
        <method name="Save(System.IO.Stream)" argnames="outputStream" returntype="System.Void" />
        <method name="ToBitmap" argnames="" returntype="System.Drawing.Bitmap" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Pen" namespace="System.Drawing">
        <constructor name="Pen(System.Drawing.Color)" argnames="color" />
        <constructor name="Pen(System.Drawing.Color, System.Single)" argnames="color, width" />
        <constructor name="Pen(System.Drawing.Brush)" argnames="brush" />
        <constructor name="Pen(System.Drawing.Brush, System.Single)" argnames="brush, width" />
        <property name="Width" propertytype="System.Single" />
        <property name="StartCap" propertytype="System.Drawing.Drawing2D.LineCap" />
        <property name="EndCap" propertytype="System.Drawing.Drawing2D.LineCap" />
        <property name="DashCap" propertytype="System.Drawing.Drawing2D.DashCap" />
        <property name="LineJoin" propertytype="System.Drawing.Drawing2D.LineJoin" />
        <property name="CustomStartCap" propertytype="System.Drawing.Drawing2D.CustomLineCap" />
        <property name="CustomEndCap" propertytype="System.Drawing.Drawing2D.CustomLineCap" />
        <property name="MiterLimit" propertytype="System.Single" />
        <property name="Alignment" propertytype="System.Drawing.Drawing2D.PenAlignment" />
        <property name="Transform" propertytype="System.Drawing.Drawing2D.Matrix" />
        <property name="PenType" propertytype="System.Drawing.Drawing2D.PenType" />
        <property name="Color" propertytype="System.Drawing.Color" />
        <property name="Brush" propertytype="System.Drawing.Brush" />
        <property name="DashStyle" propertytype="System.Drawing.Drawing2D.DashStyle" />
        <property name="DashOffset" propertytype="System.Single" />
        <property name="DashPattern" propertytype="System.Single[]" />
        <property name="CompoundArray" propertytype="System.Single[]" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="SetLineCap(System.Drawing.Drawing2D.LineCap, System.Drawing.Drawing2D.LineCap, System.Drawing.Drawing2D.DashCap)" argnames="startCap, endCap, dashCap" returntype="System.Void" />
        <method name="ResetTransform" argnames="" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.MatrixOrder)" argnames="matrix, order" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="dx, dy, order" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single)" argnames="sx, sy" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="sx, sy, order" returntype="System.Void" />
        <method name="RotateTransform(System.Single)" argnames="angle" returntype="System.Void" />
        <method name="RotateTransform(System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, order" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="SolidBrush" namespace="System.Drawing">
        <constructor name="SolidBrush(System.Drawing.Color)" argnames="color" />
        <property name="Color" propertytype="System.Drawing.Color" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ColorTranslator" namespace="System.Drawing">
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="ToWin32(System.Drawing.Color)" argnames="c" returntype="System.Int32" />
        <method name="ToOle(System.Drawing.Color)" argnames="c" returntype="System.Int32" />
        <method name="FromOle(System.Int32)" argnames="oleColor" returntype="System.Drawing.Color" />
        <method name="FromWin32(System.Int32)" argnames="win32Color" returntype="System.Drawing.Color" />
        <method name="FromHtml(System.String)" argnames="htmlColor" returntype="System.Drawing.Color" />
        <method name="ToHtml(System.Drawing.Color)" argnames="c" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="USEROBJECTFLAGS" namespace="System.Drawing">
        <constructor name="USEROBJECTFLAGS" argnames="" />
        <field name="fInherit" />
        <field name="fReserved" />
        <field name="dwFlags" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ENHMETAHEADER" namespace="System.Drawing">
        <constructor name="ENHMETAHEADER" argnames="" />
        <field name="iType" />
        <field name="nSize" />
        <field name="rclBounds_left" />
        <field name="rclBounds_top" />
        <field name="rclBounds_right" />
        <field name="rclBounds_bottom" />
        <field name="rclFrame_left" />
        <field name="rclFrame_top" />
        <field name="rclFrame_right" />
        <field name="rclFrame_bottom" />
        <field name="dSignature" />
        <field name="nVersion" />
        <field name="nBytes" />
        <field name="nRecords" />
        <field name="nHandles" />
        <field name="sReserved" />
        <field name="nDescription" />
        <field name="offDescription" />
        <field name="nPalEntries" />
        <field name="szlDevice_cx" />
        <field name="szlDevice_cy" />
        <field name="szlMillimeters_cx" />
        <field name="szlMillimeters_cy" />
        <field name="cbPixelFormat" />
        <field name="offPixelFormat" />
        <field name="bOpenGL" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="DOCINFO" namespace="System.Drawing">
        <constructor name="DOCINFO" argnames="" />
        <field name="cbSize" />
        <field name="lpszDocName" />
        <field name="lpszOutput" />
        <field name="lpszDatatype" />
        <field name="fwType" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PRINTDLG" namespace="System.Drawing">
        <constructor name="PRINTDLG" argnames="" />
        <field name="lStructSize" />
        <field name="hwndOwner" />
        <field name="hDevMode" />
        <field name="hDevNames" />
        <field name="hDC" />
        <field name="Flags" />
        <field name="nFromPage" />
        <field name="nToPage" />
        <field name="nMinPage" />
        <field name="nMaxPage" />
        <field name="nCopies" />
        <field name="hInstance" />
        <field name="lCustData" />
        <field name="lpfnPrintHook" />
        <field name="lpfnSetupHook" />
        <field name="lpPrintTemplateName" />
        <field name="lpSetupTemplateName" />
        <field name="hPrintTemplate" />
        <field name="hSetupTemplate" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PAGESETUPDLG" namespace="System.Drawing">
        <constructor name="PAGESETUPDLG" argnames="" />
        <field name="lStructSize" />
        <field name="hwndOwner" />
        <field name="hDevMode" />
        <field name="hDevNames" />
        <field name="Flags" />
        <field name="paperSizeX" />
        <field name="paperSizeY" />
        <field name="minMarginLeft" />
        <field name="minMarginTop" />
        <field name="minMarginRight" />
        <field name="minMarginBottom" />
        <field name="marginLeft" />
        <field name="marginTop" />
        <field name="marginRight" />
        <field name="marginBottom" />
        <field name="hInstance" />
        <field name="lCustData" />
        <field name="lpfnPageSetupHook" />
        <field name="lpfnPagePaintHook" />
        <field name="lpPageSetupTemplateName" />
        <field name="hPageSetupTemplate" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="COMRECT" namespace="System.Drawing">
        <constructor name="COMRECT" argnames="" />
        <constructor name="COMRECT(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="left, top, right, bottom" />
        <field name="left" />
        <field name="top" />
        <field name="right" />
        <field name="bottom" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="FromXYWH(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x, y, width, height" returntype="System.Drawing.SafeNativeMethods+COMRECT" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="POINT" namespace="System.Drawing">
        <constructor name="POINT" argnames="" />
        <constructor name="POINT(System.Int32, System.Int32)" argnames="x, y" />
        <field name="x" />
        <field name="y" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ICONINFO" namespace="System.Drawing">
        <constructor name="ICONINFO" argnames="" />
        <field name="fIcon" />
        <field name="xHotspot" />
        <field name="yHotspot" />
        <field name="hbmMask" />
        <field name="hbmColor" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="BITMAP" namespace="System.Drawing">
        <constructor name="BITMAP" argnames="" />
        <field name="bmType" />
        <field name="bmWidth" />
        <field name="bmHeight" />
        <field name="bmWidthBytes" />
        <field name="bmPlanes" />
        <field name="bmBitsPixel" />
        <field name="bmBits" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="DIBSECTION" namespace="System.Drawing">
        <constructor name="DIBSECTION" argnames="" />
        <field name="dsBm" />
        <field name="dsBmih" />
        <field name="dsBitfields" />
        <field name="dshSection" />
        <field name="dsOffset" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="BITMAPINFOHEADER" namespace="System.Drawing">
        <constructor name="BITMAPINFOHEADER" argnames="" />
        <field name="biSize" />
        <field name="biWidth" />
        <field name="biHeight" />
        <field name="biPlanes" />
        <field name="biBitCount" />
        <field name="biCompression" />
        <field name="biSizeImage" />
        <field name="biXPelsPerMeter" />
        <field name="biYPelsPerMeter" />
        <field name="biClrUsed" />
        <field name="biClrImportant" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="LOGPEN" namespace="System.Drawing">
        <constructor name="LOGPEN" argnames="" />
        <field name="lopnStyle" />
        <field name="lopnWidth_x" />
        <field name="lopnWidth_y" />
        <field name="lopnColor" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="LOGBRUSH" namespace="System.Drawing">
        <constructor name="LOGBRUSH" argnames="" />
        <field name="lbStyle" />
        <field name="lbColor" />
        <field name="lbHatch" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="LOGFONT" namespace="System.Drawing">
        <constructor name="LOGFONT" argnames="" />
        <field name="lfHeight" />
        <field name="lfWidth" />
        <field name="lfEscapement" />
        <field name="lfOrientation" />
        <field name="lfWeight" />
        <field name="lfItalic" />
        <field name="lfUnderline" />
        <field name="lfStrikeOut" />
        <field name="lfCharSet" />
        <field name="lfOutPrecision" />
        <field name="lfClipPrecision" />
        <field name="lfQuality" />
        <field name="lfPitchAndFamily" />
        <field name="lfFaceName" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PICTDESC" namespace="System.Drawing">
        <constructor name="PICTDESC" argnames="" />
        <field name="picType" />
        <method name="GetHPal" argnames="" returntype="System.IntPtr" />
        <method name="GetHandle" argnames="" returntype="System.IntPtr" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CreateBitmapPICTDESC(System.IntPtr, System.IntPtr)" argnames="hbitmap, hpal" returntype="System.Drawing.SafeNativeMethods+PICTDESC" />
        <method name="CreateIconPICTDESC(System.IntPtr)" argnames="hicon" returntype="System.Drawing.SafeNativeMethods+PICTDESC" />
        <method name="CreateEnhMetafilePICTDESC(System.IntPtr)" argnames="hEMF" returntype="System.Drawing.SafeNativeMethods+PICTDESC" />
        <method name="CreateWinMetafilePICTDESC(System.IntPtr, System.Int32, System.Int32)" argnames="hmetafile, x, y" returntype="System.Drawing.SafeNativeMethods+PICTDESC" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Ole" namespace="System.Drawing">
        <constructor name="Ole" argnames="" />
        <field name="PICTYPE_UNINITIALIZED" />
        <field name="PICTYPE_NONE" />
        <field name="PICTYPE_BITMAP" />
        <field name="PICTYPE_METAFILE" />
        <field name="PICTYPE_ICON" />
        <field name="PICTYPE_ENHMETAFILE" />
        <field name="STATFLAG_DEFAULT" />
        <field name="STATFLAG_NONAME" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="DEVMODE" namespace="System.Drawing">
        <constructor name="DEVMODE" argnames="" />
        <field name="dmDeviceName" />
        <field name="dmSpecVersion" />
        <field name="dmDriverVersion" />
        <field name="dmSize" />
        <field name="dmDriverExtra" />
        <field name="dmFields" />
        <field name="dmOrientation" />
        <field name="dmPaperSize" />
        <field name="dmPaperLength" />
        <field name="dmPaperWidth" />
        <field name="dmScale" />
        <field name="dmCopies" />
        <field name="dmDefaultSource" />
        <field name="dmPrintQuality" />
        <field name="dmColor" />
        <field name="dmDuplex" />
        <field name="dmYResolution" />
        <field name="dmTTOption" />
        <field name="dmCollate" />
        <field name="dmFormName" />
        <field name="dmLogPixels" />
        <field name="dmBitsPerPel" />
        <field name="dmPelsWidth" />
        <field name="dmPelsHeight" />
        <field name="dmDisplayFlags" />
        <field name="dmDisplayFrequency" />
        <field name="dmICMMethod" />
        <field name="dmICMIntent" />
        <field name="dmMediaType" />
        <field name="dmDitherType" />
        <field name="dmICCManufacturer" />
        <field name="dmICCModel" />
        <field name="dmPanningWidth" />
        <field name="dmPanningHeight" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="CommonHandles" namespace="System.Drawing">
        <constructor name="CommonHandles" argnames="" />
        <field name="Accelerator" />
        <field name="Cursor" />
        <field name="EMF" />
        <field name="Find" />
        <field name="GDI" />
        <field name="HDC" />
        <field name="Icon" />
        <field name="Kernel" />
        <field name="Menu" />
        <field name="Window" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="HandleCollector" namespace="System.Drawing">
        <constructor name="HandleCollector" argnames="" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="Add(System.IntPtr, System.Int32)" argnames="handle, type" returntype="System.IntPtr" />
        <method name="RegisterType(System.String, System.Int32, System.Int32)" argnames="typeName, expense, initialThreshold" returntype="System.Int32" />
        <method name="Remove(System.IntPtr, System.Int32)" argnames="handle, type" returntype="System.IntPtr" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <event name="HandleAdded" />
        <event name="HandleRemoved" />
    </class>
    <class name="StreamConsts" namespace="System.Drawing">
        <constructor name="StreamConsts" argnames="" />
        <field name="LOCK_WRITE" />
        <field name="LOCK_EXCLUSIVE" />
        <field name="LOCK_ONLYONCE" />
        <field name="STATFLAG_DEFAULT" />
        <field name="STATFLAG_NONAME" />
        <field name="STATFLAG_NOOPEN" />
        <field name="STGC_DEFAULT" />
        <field name="STGC_OVERWRITE" />
        <field name="STGC_ONLYIFCURRENT" />
        <field name="STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE" />
        <field name="STREAM_SEEK_SET" />
        <field name="STREAM_SEEK_CUR" />
        <field name="STREAM_SEEK_END" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ImageFormatConverter" namespace="System.Drawing">
        <constructor name="ImageFormatConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="TextureBrush" namespace="System.Drawing">
        <constructor name="TextureBrush(System.Drawing.Image)" argnames="bitmap" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.Drawing2D.WrapMode)" argnames="image, wrapMode" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.Drawing2D.WrapMode, System.Drawing.RectangleF)" argnames="image, wrapMode, dstRect" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.Drawing2D.WrapMode, System.Drawing.Rectangle)" argnames="image, wrapMode, dstRect" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.RectangleF)" argnames="image, dstRect" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.RectangleF, System.Drawing.Imaging.ImageAttributes)" argnames="image, dstRect, imageAttr" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.Rectangle)" argnames="image, dstRect" />
        <constructor name="TextureBrush(System.Drawing.Image, System.Drawing.Rectangle, System.Drawing.Imaging.ImageAttributes)" argnames="image, dstRect, imageAttr" />
        <property name="Transform" propertytype="System.Drawing.Drawing2D.Matrix" />
        <property name="WrapMode" propertytype="System.Drawing.Drawing2D.WrapMode" />
        <property name="Image" propertytype="System.Drawing.Image" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="ResetTransform" argnames="" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.MatrixOrder)" argnames="matrix, order" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="dx, dy, order" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single)" argnames="sx, sy" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="sx, sy, order" returntype="System.Void" />
        <method name="RotateTransform(System.Single)" argnames="angle" returntype="System.Void" />
        <method name="RotateTransform(System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, order" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Font" namespace="System.Drawing">
        <constructor name="Font(System.Drawing.Font, System.Drawing.FontStyle)" argnames="prototype, newStyle" />
        <constructor name="Font(System.Drawing.FontFamily, System.Single, System.Drawing.FontStyle, System.Drawing.GraphicsUnit)" argnames="family, emSize, style, unit" />
        <constructor name="Font(System.Drawing.FontFamily, System.Single, System.Drawing.FontStyle, System.Drawing.GraphicsUnit, System.Byte)" argnames="family, emSize, style, unit, gdiCharSet" />
        <constructor name="Font(System.Drawing.FontFamily, System.Single, System.Drawing.FontStyle, System.Drawing.GraphicsUnit, System.Byte, System.Boolean)" argnames="family, emSize, style, unit, gdiCharSet, gdiVerticalFont" />
        <constructor name="Font(System.String, System.Single, System.Drawing.FontStyle, System.Drawing.GraphicsUnit, System.Byte)" argnames="familyName, emSize, style, unit, gdiCharSet" />
        <constructor name="Font(System.String, System.Single, System.Drawing.FontStyle, System.Drawing.GraphicsUnit, System.Byte, System.Boolean)" argnames="familyName, emSize, style, unit, gdiCharSet, gdiVerticalFont" />
        <constructor name="Font(System.Drawing.FontFamily, System.Single, System.Drawing.FontStyle)" argnames="family, emSize, style" />
        <constructor name="Font(System.Drawing.FontFamily, System.Single, System.Drawing.GraphicsUnit)" argnames="family, emSize, unit" />
        <constructor name="Font(System.Drawing.FontFamily, System.Single)" argnames="family, emSize" />
        <constructor name="Font(System.String, System.Single, System.Drawing.FontStyle, System.Drawing.GraphicsUnit)" argnames="familyName, emSize, style, unit" />
        <constructor name="Font(System.String, System.Single, System.Drawing.FontStyle)" argnames="familyName, emSize, style" />
        <constructor name="Font(System.String, System.Single, System.Drawing.GraphicsUnit)" argnames="familyName, emSize, unit" />
        <constructor name="Font(System.String, System.Single)" argnames="familyName, emSize" />
        <property name="Bold" propertytype="System.Boolean" />
        <property name="GdiCharSet" propertytype="System.Byte" />
        <property name="GdiVerticalFont" propertytype="System.Boolean" />
        <property name="Italic" propertytype="System.Boolean" />
        <property name="Name" propertytype="System.String" />
        <property name="NativeFont" propertytype="System.IntPtr" />
        <property name="Strikeout" propertytype="System.Boolean" />
        <property name="Underline" propertytype="System.Boolean" />
        <property name="FontFamily" propertytype="System.Drawing.FontFamily" />
        <property name="Style" propertytype="System.Drawing.FontStyle" />
        <property name="Size" propertytype="System.Single" />
        <property name="SizeInPoints" propertytype="System.Single" />
        <property name="Unit" propertytype="System.Drawing.GraphicsUnit" />
        <property name="Height" propertytype="System.Int32" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="FromHfont(System.IntPtr)" argnames="hfont" returntype="System.Drawing.Font" />
        <method name="FromLogFont(System.Object)" argnames="lf" returntype="System.Drawing.Font" />
        <method name="FromLogFont(System.Object, System.IntPtr)" argnames="lf, hdc" returntype="System.Drawing.Font" />
        <method name="FromHdc(System.IntPtr)" argnames="hdc" returntype="System.Drawing.Font" />
        <method name="ToLogFont(System.Object)" argnames="logFont" returntype="System.Void" />
        <method name="ToLogFont(System.Object, System.Drawing.Graphics)" argnames="logFont, graphics" returntype="System.Void" />
        <method name="ToHfont" argnames="" returntype="System.IntPtr" />
        <method name="GetHeight(System.Drawing.Graphics)" argnames="graphics" returntype="System.Single" />
        <method name="GetHeight" argnames="" returntype="System.Single" />
        <method name="GetHeight(System.Single)" argnames="dpi" returntype="System.Single" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="FontFamily" namespace="System.Drawing">
        <constructor name="FontFamily(System.String)" argnames="name" />
        <constructor name="FontFamily(System.String, System.Drawing.Text.FontCollection)" argnames="name, fontCollection" />
        <constructor name="FontFamily(System.Drawing.Text.GenericFontFamilies)" argnames="genericFamily" />
        <property name="CurrentLanguage" propertytype="System.Int32" />
        <property name="Name" propertytype="System.String" />
        <property name="Families" propertytype="System.Drawing.FontFamily[]" />
        <property name="GenericSansSerif" propertytype="System.Drawing.FontFamily" />
        <property name="GenericSerif" propertytype="System.Drawing.FontFamily" />
        <property name="GenericMonospace" propertytype="System.Drawing.FontFamily" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetName(System.Int32)" argnames="language" returntype="System.String" />
        <method name="GetFamilies(System.Drawing.Graphics)" argnames="graphics" returntype="System.Drawing.FontFamily[]" />
        <method name="IsStyleAvailable(System.Drawing.FontStyle)" argnames="style" returntype="System.Boolean" />
        <method name="GetEmHeight(System.Drawing.FontStyle)" argnames="style" returntype="System.Int32" />
        <method name="GetCellAscent(System.Drawing.FontStyle)" argnames="style" returntype="System.Int32" />
        <method name="GetCellDescent(System.Drawing.FontStyle)" argnames="style" returntype="System.Int32" />
        <method name="GetLineSpacing(System.Drawing.FontStyle)" argnames="style" returntype="System.Int32" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="StringFormat" namespace="System.Drawing">
        <constructor name="StringFormat" argnames="" />
        <constructor name="StringFormat(System.Drawing.StringFormatFlags)" argnames="options" />
        <constructor name="StringFormat(System.Drawing.StringFormatFlags, System.Int32)" argnames="options, language" />
        <constructor name="StringFormat(System.Drawing.StringFormat)" argnames="format" />
        <property name="FormatFlags" propertytype="System.Drawing.StringFormatFlags" />
        <property name="Alignment" propertytype="System.Drawing.StringAlignment" />
        <property name="LineAlignment" propertytype="System.Drawing.StringAlignment" />
        <property name="HotkeyPrefix" propertytype="System.Drawing.Text.HotkeyPrefix" />
        <property name="Trimming" propertytype="System.Drawing.StringTrimming" />
        <property name="GenericDefault" propertytype="System.Drawing.StringFormat" />
        <property name="GenericTypographic" propertytype="System.Drawing.StringFormat" />
        <property name="DigitSubstitutionMethod" propertytype="System.Drawing.StringDigitSubstitute" />
        <property name="DigitSubstitutionLanguage" propertytype="System.Int32" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])" argnames="ranges" returntype="System.Void" />
        <method name="SetTabStops(System.Single, System.Single[])" argnames="firstTabOffset, tabStops" returntype="System.Void" />
        <method name="GetTabStops(System.Single&amp;)" argnames="firstTabOffset" returntype="System.Single[]" />
        <method name="SetDigitSubstitution(System.Int32, System.Drawing.StringDigitSubstitute)" argnames="language, substitute" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <interface name="IStream" namespace="System.Drawing">
        <method name="Clone" argnames="" returntype="System.Drawing.UnsafeNativeMethods+IStream" />
        <method name="Stat(System.IntPtr, System.Int32)" argnames="pStatstg, grfStatFlag" returntype="System.Void" />
        <method name="UnlockRegion(System.Int64, System.Int64, System.Int32)" argnames="libOffset, cb, dwLockType" returntype="System.Void" />
        <method name="LockRegion(System.Int64, System.Int64, System.Int32)" argnames="libOffset, cb, dwLockType" returntype="System.Void" />
        <method name="Revert" argnames="" returntype="System.Void" />
        <method name="Commit(System.Int32)" argnames="grfCommitFlags" returntype="System.Void" />
        <method name="CopyTo(System.Drawing.UnsafeNativeMethods.IStream, System.Int64, System.Int64[])" argnames="pstm, cb, pcbRead" returntype="System.Int64" />
        <method name="SetSize(System.Int64)" argnames="libNewSize" returntype="System.Void" />
        <method name="Seek(System.Int64, System.Int32)" argnames="dlibMove, dwOrigin" returntype="System.Int64" />
        <method name="Write(System.IntPtr, System.Int32)" argnames="buf, len" returntype="System.Int32" />
        <method name="Read(System.IntPtr, System.Int32)" argnames="buf, len" returntype="System.Int32" />
    </interface>
    <interface name="IPicture" namespace="System.Drawing">
        <method name="SetHdc(System.IntPtr)" argnames="hdc" returntype="System.Void" />
        <method name="GetAttributes" argnames="" returntype="System.Int32" />
        <method name="SaveAsFile(System.Drawing.UnsafeNativeMethods.IStream, System.Int32, System.Int32&amp;)" argnames="pstm, fSaveMemCopy, pcbSize" returntype="System.Int32" />
        <method name="PictureChanged" argnames="" returntype="System.Void" />
        <method name="SetKeepOriginalFormat(System.Boolean)" argnames="pfkeep" returntype="System.Void" />
        <method name="GetKeepOriginalFormat" argnames="" returntype="System.Boolean" />
        <method name="SelectPicture(System.IntPtr, System.Int32[], System.Int32[])" argnames="hdcIn, phdcOut, phbmpOut" returntype="System.Void" />
        <method name="GetCurDC" argnames="" returntype="System.IntPtr" />
        <method name="SetHPal(System.IntPtr)" argnames="phpal" returntype="System.Void" />
        <method name="Render" argnames="" returntype="System.Void" />
        <method name="GetHeight" argnames="" returntype="System.Int32" />
        <method name="GetWidth" argnames="" returntype="System.Int32" />
        <method name="GetPictureType" argnames="" returntype="System.Int16" />
        <method name="GetHPal" argnames="" returntype="System.IntPtr" />
        <method name="GetHandle" argnames="" returntype="System.IntPtr" />
    </interface>
    <struct name="Color" namespace="System.Drawing">
        <field name="Empty" />
        <property name="Transparent" propertytype="System.Drawing.Color" />
        <property name="AliceBlue" propertytype="System.Drawing.Color" />
        <property name="AntiqueWhite" propertytype="System.Drawing.Color" />
        <property name="Aqua" propertytype="System.Drawing.Color" />
        <property name="Aquamarine" propertytype="System.Drawing.Color" />
        <property name="Azure" propertytype="System.Drawing.Color" />
        <property name="Beige" propertytype="System.Drawing.Color" />
        <property name="Bisque" propertytype="System.Drawing.Color" />
        <property name="Black" propertytype="System.Drawing.Color" />
        <property name="BlanchedAlmond" propertytype="System.Drawing.Color" />
        <property name="Blue" propertytype="System.Drawing.Color" />
        <property name="BlueViolet" propertytype="System.Drawing.Color" />
        <property name="Brown" propertytype="System.Drawing.Color" />
        <property name="BurlyWood" propertytype="System.Drawing.Color" />
        <property name="CadetBlue" propertytype="System.Drawing.Color" />
        <property name="Chartreuse" propertytype="System.Drawing.Color" />
        <property name="Chocolate" propertytype="System.Drawing.Color" />
        <property name="Coral" propertytype="System.Drawing.Color" />
        <property name="CornflowerBlue" propertytype="System.Drawing.Color" />
        <property name="Cornsilk" propertytype="System.Drawing.Color" />
        <property name="Crimson" propertytype="System.Drawing.Color" />
        <property name="Cyan" propertytype="System.Drawing.Color" />
        <property name="DarkBlue" propertytype="System.Drawing.Color" />
        <property name="DarkCyan" propertytype="System.Drawing.Color" />
        <property name="DarkGoldenrod" propertytype="System.Drawing.Color" />
        <property name="DarkGray" propertytype="System.Drawing.Color" />
        <property name="DarkGreen" propertytype="System.Drawing.Color" />
        <property name="DarkKhaki" propertytype="System.Drawing.Color" />
        <property name="DarkMagenta" propertytype="System.Drawing.Color" />
        <property name="DarkOliveGreen" propertytype="System.Drawing.Color" />
        <property name="DarkOrange" propertytype="System.Drawing.Color" />
        <property name="DarkOrchid" propertytype="System.Drawing.Color" />
        <property name="DarkRed" propertytype="System.Drawing.Color" />
        <property name="DarkSalmon" propertytype="System.Drawing.Color" />
        <property name="DarkSeaGreen" propertytype="System.Drawing.Color" />
        <property name="DarkSlateBlue" propertytype="System.Drawing.Color" />
        <property name="DarkSlateGray" propertytype="System.Drawing.Color" />
        <property name="DarkTurquoise" propertytype="System.Drawing.Color" />
        <property name="DarkViolet" propertytype="System.Drawing.Color" />
        <property name="DeepPink" propertytype="System.Drawing.Color" />
        <property name="DeepSkyBlue" propertytype="System.Drawing.Color" />
        <property name="DimGray" propertytype="System.Drawing.Color" />
        <property name="DodgerBlue" propertytype="System.Drawing.Color" />
        <property name="Firebrick" propertytype="System.Drawing.Color" />
        <property name="FloralWhite" propertytype="System.Drawing.Color" />
        <property name="ForestGreen" propertytype="System.Drawing.Color" />
        <property name="Fuchsia" propertytype="System.Drawing.Color" />
        <property name="Gainsboro" propertytype="System.Drawing.Color" />
        <property name="GhostWhite" propertytype="System.Drawing.Color" />
        <property name="Gold" propertytype="System.Drawing.Color" />
        <property name="Goldenrod" propertytype="System.Drawing.Color" />
        <property name="Gray" propertytype="System.Drawing.Color" />
        <property name="Green" propertytype="System.Drawing.Color" />
        <property name="GreenYellow" propertytype="System.Drawing.Color" />
        <property name="Honeydew" propertytype="System.Drawing.Color" />
        <property name="HotPink" propertytype="System.Drawing.Color" />
        <property name="IndianRed" propertytype="System.Drawing.Color" />
        <property name="Indigo" propertytype="System.Drawing.Color" />
        <property name="Ivory" propertytype="System.Drawing.Color" />
        <property name="Khaki" propertytype="System.Drawing.Color" />
        <property name="Lavender" propertytype="System.Drawing.Color" />
        <property name="LavenderBlush" propertytype="System.Drawing.Color" />
        <property name="LawnGreen" propertytype="System.Drawing.Color" />
        <property name="LemonChiffon" propertytype="System.Drawing.Color" />
        <property name="LightBlue" propertytype="System.Drawing.Color" />
        <property name="LightCoral" propertytype="System.Drawing.Color" />
        <property name="LightCyan" propertytype="System.Drawing.Color" />
        <property name="LightGoldenrodYellow" propertytype="System.Drawing.Color" />
        <property name="LightGreen" propertytype="System.Drawing.Color" />
        <property name="LightGray" propertytype="System.Drawing.Color" />
        <property name="LightPink" propertytype="System.Drawing.Color" />
        <property name="LightSalmon" propertytype="System.Drawing.Color" />
        <property name="LightSeaGreen" propertytype="System.Drawing.Color" />
        <property name="LightSkyBlue" propertytype="System.Drawing.Color" />
        <property name="LightSlateGray" propertytype="System.Drawing.Color" />
        <property name="LightSteelBlue" propertytype="System.Drawing.Color" />
        <property name="LightYellow" propertytype="System.Drawing.Color" />
        <property name="Lime" propertytype="System.Drawing.Color" />
        <property name="LimeGreen" propertytype="System.Drawing.Color" />
        <property name="Linen" propertytype="System.Drawing.Color" />
        <property name="Magenta" propertytype="System.Drawing.Color" />
        <property name="Maroon" propertytype="System.Drawing.Color" />
        <property name="MediumAquamarine" propertytype="System.Drawing.Color" />
        <property name="MediumBlue" propertytype="System.Drawing.Color" />
        <property name="MediumOrchid" propertytype="System.Drawing.Color" />
        <property name="MediumPurple" propertytype="System.Drawing.Color" />
        <property name="MediumSeaGreen" propertytype="System.Drawing.Color" />
        <property name="MediumSlateBlue" propertytype="System.Drawing.Color" />
        <property name="MediumSpringGreen" propertytype="System.Drawing.Color" />
        <property name="MediumTurquoise" propertytype="System.Drawing.Color" />
        <property name="MediumVioletRed" propertytype="System.Drawing.Color" />
        <property name="MidnightBlue" propertytype="System.Drawing.Color" />
        <property name="MintCream" propertytype="System.Drawing.Color" />
        <property name="MistyRose" propertytype="System.Drawing.Color" />
        <property name="Moccasin" propertytype="System.Drawing.Color" />
        <property name="NavajoWhite" propertytype="System.Drawing.Color" />
        <property name="Navy" propertytype="System.Drawing.Color" />
        <property name="OldLace" propertytype="System.Drawing.Color" />
        <property name="Olive" propertytype="System.Drawing.Color" />
        <property name="OliveDrab" propertytype="System.Drawing.Color" />
        <property name="Orange" propertytype="System.Drawing.Color" />
        <property name="OrangeRed" propertytype="System.Drawing.Color" />
        <property name="Orchid" propertytype="System.Drawing.Color" />
        <property name="PaleGoldenrod" propertytype="System.Drawing.Color" />
        <property name="PaleGreen" propertytype="System.Drawing.Color" />
        <property name="PaleTurquoise" propertytype="System.Drawing.Color" />
        <property name="PaleVioletRed" propertytype="System.Drawing.Color" />
        <property name="PapayaWhip" propertytype="System.Drawing.Color" />
        <property name="PeachPuff" propertytype="System.Drawing.Color" />
        <property name="Peru" propertytype="System.Drawing.Color" />
        <property name="Pink" propertytype="System.Drawing.Color" />
        <property name="Plum" propertytype="System.Drawing.Color" />
        <property name="PowderBlue" propertytype="System.Drawing.Color" />
        <property name="Purple" propertytype="System.Drawing.Color" />
        <property name="Red" propertytype="System.Drawing.Color" />
        <property name="RosyBrown" propertytype="System.Drawing.Color" />
        <property name="RoyalBlue" propertytype="System.Drawing.Color" />
        <property name="SaddleBrown" propertytype="System.Drawing.Color" />
        <property name="Salmon" propertytype="System.Drawing.Color" />
        <property name="SandyBrown" propertytype="System.Drawing.Color" />
        <property name="SeaGreen" propertytype="System.Drawing.Color" />
        <property name="SeaShell" propertytype="System.Drawing.Color" />
        <property name="Sienna" propertytype="System.Drawing.Color" />
        <property name="Silver" propertytype="System.Drawing.Color" />
        <property name="SkyBlue" propertytype="System.Drawing.Color" />
        <property name="SlateBlue" propertytype="System.Drawing.Color" />
        <property name="SlateGray" propertytype="System.Drawing.Color" />
        <property name="Snow" propertytype="System.Drawing.Color" />
        <property name="SpringGreen" propertytype="System.Drawing.Color" />
        <property name="SteelBlue" propertytype="System.Drawing.Color" />
        <property name="Tan" propertytype="System.Drawing.Color" />
        <property name="Teal" propertytype="System.Drawing.Color" />
        <property name="Thistle" propertytype="System.Drawing.Color" />
        <property name="Tomato" propertytype="System.Drawing.Color" />
        <property name="Turquoise" propertytype="System.Drawing.Color" />
        <property name="Violet" propertytype="System.Drawing.Color" />
        <property name="Wheat" propertytype="System.Drawing.Color" />
        <property name="White" propertytype="System.Drawing.Color" />
        <property name="WhiteSmoke" propertytype="System.Drawing.Color" />
        <property name="Yellow" propertytype="System.Drawing.Color" />
        <property name="YellowGreen" propertytype="System.Drawing.Color" />
        <property name="R" propertytype="System.Byte" />
        <property name="G" propertytype="System.Byte" />
        <property name="B" propertytype="System.Byte" />
        <property name="A" propertytype="System.Byte" />
        <property name="IsKnownColor" propertytype="System.Boolean" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <property name="IsNamedColor" propertytype="System.Boolean" />
        <property name="IsSystemColor" propertytype="System.Boolean" />
        <property name="Name" propertytype="System.String" />
        <property name="Value" propertytype="System.Int64" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="FromArgb(System.Int32)" argnames="argb" returntype="System.Drawing.Color" />
        <method name="FromArgb(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="alpha, red, green, blue" returntype="System.Drawing.Color" />
        <method name="FromArgb(System.Int32, System.Drawing.Color)" argnames="alpha, baseColor" returntype="System.Drawing.Color" />
        <method name="FromArgb(System.Int32, System.Int32, System.Int32)" argnames="red, green, blue" returntype="System.Drawing.Color" />
        <method name="FromKnownColor(System.Drawing.KnownColor)" argnames="color" returntype="System.Drawing.Color" />
        <method name="FromName(System.String)" argnames="name" returntype="System.Drawing.Color" />
        <method name="GetBrightness" argnames="" returntype="System.Single" />
        <method name="GetHue" argnames="" returntype="System.Single" />
        <method name="GetSaturation" argnames="" returntype="System.Single" />
        <method name="ToArgb" argnames="" returntype="System.Int32" />
        <method name="ToKnownColor" argnames="" returntype="System.Drawing.KnownColor" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Equality(System.Drawing.Color, System.Drawing.Color)" argnames="left, right" />
        <operator name="op_Inequality(System.Drawing.Color, System.Drawing.Color)" argnames="left, right" />
    </struct>
    <struct name="Point" namespace="System.Drawing">
        <constructor name="Point(System.Int32, System.Int32)" argnames="x, y" />
        <constructor name="Point(System.Drawing.Size)" argnames="sz" />
        <constructor name="Point(System.Int32)" argnames="dw" />
        <field name="Empty" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <property name="X" propertytype="System.Int32" />
        <property name="Y" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="Ceiling(System.Drawing.PointF)" argnames="value" returntype="System.Drawing.Point" />
        <method name="Truncate(System.Drawing.PointF)" argnames="value" returntype="System.Drawing.Point" />
        <method name="Round(System.Drawing.PointF)" argnames="value" returntype="System.Drawing.Point" />
        <method name="Offset(System.Int32, System.Int32)" argnames="dx, dy" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Implicit(System.Drawing.Point)" argnames="p" />
        <operator name="op_Explicit(System.Drawing.Point)" argnames="p" />
        <operator name="op_Addition(System.Drawing.Point, System.Drawing.Size)" argnames="pt, sz" />
        <operator name="op_Subtraction(System.Drawing.Point, System.Drawing.Size)" argnames="pt, sz" />
        <operator name="op_Equality(System.Drawing.Point, System.Drawing.Point)" argnames="left, right" />
        <operator name="op_Inequality(System.Drawing.Point, System.Drawing.Point)" argnames="left, right" />
    </struct>
    <struct name="Rectangle" namespace="System.Drawing">
        <constructor name="Rectangle(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x, y, width, height" />
        <constructor name="Rectangle(System.Drawing.Point, System.Drawing.Size)" argnames="location, size" />
        <field name="Empty" />
        <property name="Location" propertytype="System.Drawing.Point" />
        <property name="Size" propertytype="System.Drawing.Size" />
        <property name="X" propertytype="System.Int32" />
        <property name="Y" propertytype="System.Int32" />
        <property name="Width" propertytype="System.Int32" />
        <property name="Height" propertytype="System.Int32" />
        <property name="Left" propertytype="System.Int32" />
        <property name="Top" propertytype="System.Int32" />
        <property name="Right" propertytype="System.Int32" />
        <property name="Bottom" propertytype="System.Int32" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="FromLTRB(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="left, top, right, bottom" returntype="System.Drawing.Rectangle" />
        <method name="Ceiling(System.Drawing.RectangleF)" argnames="value" returntype="System.Drawing.Rectangle" />
        <method name="Truncate(System.Drawing.RectangleF)" argnames="value" returntype="System.Drawing.Rectangle" />
        <method name="Round(System.Drawing.RectangleF)" argnames="value" returntype="System.Drawing.Rectangle" />
        <method name="Contains(System.Int32, System.Int32)" argnames="x, y" returntype="System.Boolean" />
        <method name="Contains(System.Drawing.Point)" argnames="pt" returntype="System.Boolean" />
        <method name="Contains(System.Drawing.Rectangle)" argnames="rect" returntype="System.Boolean" />
        <method name="Inflate(System.Int32, System.Int32)" argnames="width, height" returntype="System.Void" />
        <method name="Inflate(System.Drawing.Size)" argnames="size" returntype="System.Void" />
        <method name="Inflate(System.Drawing.Rectangle, System.Int32, System.Int32)" argnames="rect, x, y" returntype="System.Drawing.Rectangle" />
        <method name="Intersect(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="Intersect(System.Drawing.Rectangle, System.Drawing.Rectangle)" argnames="a, b" returntype="System.Drawing.Rectangle" />
        <method name="IntersectsWith(System.Drawing.Rectangle)" argnames="rect" returntype="System.Boolean" />
        <method name="Union(System.Drawing.Rectangle, System.Drawing.Rectangle)" argnames="a, b" returntype="System.Drawing.Rectangle" />
        <method name="Offset(System.Drawing.Point)" argnames="pos" returntype="System.Void" />
        <method name="Offset(System.Int32, System.Int32)" argnames="x, y" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Equality(System.Drawing.Rectangle, System.Drawing.Rectangle)" argnames="left, right" />
        <operator name="op_Inequality(System.Drawing.Rectangle, System.Drawing.Rectangle)" argnames="left, right" />
    </struct>
    <struct name="Size" namespace="System.Drawing">
        <constructor name="Size(System.Drawing.Point)" argnames="pt" />
        <constructor name="Size(System.Int32, System.Int32)" argnames="width, height" />
        <field name="Empty" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <property name="Width" propertytype="System.Int32" />
        <property name="Height" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="Ceiling(System.Drawing.SizeF)" argnames="value" returntype="System.Drawing.Size" />
        <method name="Truncate(System.Drawing.SizeF)" argnames="value" returntype="System.Drawing.Size" />
        <method name="Round(System.Drawing.SizeF)" argnames="value" returntype="System.Drawing.Size" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Implicit(System.Drawing.Size)" argnames="p" />
        <operator name="op_Addition(System.Drawing.Size, System.Drawing.Size)" argnames="sz1, sz2" />
        <operator name="op_Subtraction(System.Drawing.Size, System.Drawing.Size)" argnames="sz1, sz2" />
        <operator name="op_Equality(System.Drawing.Size, System.Drawing.Size)" argnames="sz1, sz2" />
        <operator name="op_Inequality(System.Drawing.Size, System.Drawing.Size)" argnames="sz1, sz2" />
        <operator name="op_Explicit(System.Drawing.Size)" argnames="size" />
    </struct>
    <struct name="RECT" namespace="System.Drawing">
        <constructor name="RECT(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="left, top, right, bottom" />
        <field name="left" />
        <field name="top" />
        <field name="right" />
        <field name="bottom" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.ValueType" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.ValueType" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.ValueType" returntype="System.String" />
        <method name="FromXYWH(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x, y, width, height" returntype="System.Drawing.SafeNativeMethods+RECT" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </struct>
    <struct name="MSG" namespace="System.Drawing">
        <field name="hwnd" />
        <field name="message" />
        <field name="wParam" />
        <field name="lParam" />
        <field name="time" />
        <field name="pt_x" />
        <field name="pt_y" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.ValueType" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.ValueType" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.ValueType" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </struct>
    <struct name="ICONDIR" namespace="System.Drawing">
        <field name="idReserved" />
        <field name="idType" />
        <field name="idCount" />
        <field name="idEntries" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.ValueType" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.ValueType" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.ValueType" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </struct>
    <struct name="ICONDIRENTRY" namespace="System.Drawing">
        <field name="bWidth" />
        <field name="bHeight" />
        <field name="bColorCount" />
        <field name="bReserved" />
        <field name="wPlanes" />
        <field name="wBitCount" />
        <field name="dwBytesInRes" />
        <field name="dwImageOffset" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.ValueType" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.ValueType" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.ValueType" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </struct>
    <struct name="PointF" namespace="System.Drawing">
        <constructor name="PointF(System.Single, System.Single)" argnames="x, y" />
        <field name="Empty" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <property name="X" propertytype="System.Single" />
        <property name="Y" propertytype="System.Single" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Addition(System.Drawing.PointF, System.Drawing.Size)" argnames="pt, sz" />
        <operator name="op_Subtraction(System.Drawing.PointF, System.Drawing.Size)" argnames="pt, sz" />
        <operator name="op_Equality(System.Drawing.PointF, System.Drawing.PointF)" argnames="left, right" />
        <operator name="op_Inequality(System.Drawing.PointF, System.Drawing.PointF)" argnames="left, right" />
    </struct>
    <struct name="RectangleF" namespace="System.Drawing">
        <constructor name="RectangleF(System.Single, System.Single, System.Single, System.Single)" argnames="x, y, width, height" />
        <constructor name="RectangleF(System.Drawing.PointF, System.Drawing.SizeF)" argnames="location, size" />
        <field name="Empty" />
        <property name="Location" propertytype="System.Drawing.PointF" />
        <property name="Size" propertytype="System.Drawing.SizeF" />
        <property name="X" propertytype="System.Single" />
        <property name="Y" propertytype="System.Single" />
        <property name="Width" propertytype="System.Single" />
        <property name="Height" propertytype="System.Single" />
        <property name="Left" propertytype="System.Single" />
        <property name="Top" propertytype="System.Single" />
        <property name="Right" propertytype="System.Single" />
        <property name="Bottom" propertytype="System.Single" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="FromLTRB(System.Single, System.Single, System.Single, System.Single)" argnames="left, top, right, bottom" returntype="System.Drawing.RectangleF" />
        <method name="Contains(System.Single, System.Single)" argnames="x, y" returntype="System.Boolean" />
        <method name="Contains(System.Drawing.PointF)" argnames="pt" returntype="System.Boolean" />
        <method name="Contains(System.Drawing.RectangleF)" argnames="rect" returntype="System.Boolean" />
        <method name="Inflate(System.Single, System.Single)" argnames="x, y" returntype="System.Void" />
        <method name="Inflate(System.Drawing.SizeF)" argnames="size" returntype="System.Void" />
        <method name="Inflate(System.Drawing.RectangleF, System.Single, System.Single)" argnames="rect, x, y" returntype="System.Drawing.RectangleF" />
        <method name="Intersect(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="Intersect(System.Drawing.RectangleF, System.Drawing.RectangleF)" argnames="a, b" returntype="System.Drawing.RectangleF" />
        <method name="IntersectsWith(System.Drawing.RectangleF)" argnames="rect" returntype="System.Boolean" />
        <method name="Union(System.Drawing.RectangleF, System.Drawing.RectangleF)" argnames="a, b" returntype="System.Drawing.RectangleF" />
        <method name="Offset(System.Drawing.PointF)" argnames="pos" returntype="System.Void" />
        <method name="Offset(System.Single, System.Single)" argnames="x, y" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Equality(System.Drawing.RectangleF, System.Drawing.RectangleF)" argnames="left, right" />
        <operator name="op_Inequality(System.Drawing.RectangleF, System.Drawing.RectangleF)" argnames="left, right" />
        <operator name="op_Implicit(System.Drawing.Rectangle)" argnames="r" />
    </struct>
    <struct name="SizeF" namespace="System.Drawing">
        <constructor name="SizeF(System.Drawing.SizeF)" argnames="size" />
        <constructor name="SizeF(System.Drawing.PointF)" argnames="pt" />
        <constructor name="SizeF(System.Single, System.Single)" argnames="width, height" />
        <field name="Empty" />
        <property name="IsEmpty" propertytype="System.Boolean" />
        <property name="Width" propertytype="System.Single" />
        <property name="Height" propertytype="System.Single" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="ToPointF" argnames="" returntype="System.Drawing.PointF" />
        <method name="ToSize" argnames="" returntype="System.Drawing.Size" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <operator name="op_Addition(System.Drawing.SizeF, System.Drawing.SizeF)" argnames="sz1, sz2" />
        <operator name="op_Subtraction(System.Drawing.SizeF, System.Drawing.SizeF)" argnames="sz1, sz2" />
        <operator name="op_Equality(System.Drawing.SizeF, System.Drawing.SizeF)" argnames="sz1, sz2" />
        <operator name="op_Inequality(System.Drawing.SizeF, System.Drawing.SizeF)" argnames="sz1, sz2" />
        <operator name="op_Explicit(System.Drawing.SizeF)" argnames="size" />
    </struct>
    <struct name="CharacterRange" namespace="System.Drawing">
        <constructor name="CharacterRange(System.Int32, System.Int32)" argnames="First, Length" />
        <property name="First" propertytype="System.Int32" />
        <property name="Length" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.ValueType" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.ValueType" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.ValueType" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </struct>
    <delegate name="GetThumbnailImageAbort" namespace="System.Drawing">
        <constructor name="GetThumbnailImageAbort(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Boolean" />
        <method name="BeginInvoke(System.AsyncCallback, System.Object)" argnames="callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke" argnames="" returntype="System.Boolean" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="DrawImageAbort" namespace="System.Drawing">
        <constructor name="DrawImageAbort(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Boolean" />
        <method name="BeginInvoke(System.IntPtr, System.AsyncCallback, System.Object)" argnames="callbackdata, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.IntPtr)" argnames="callbackdata" returntype="System.Boolean" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="EnumerateMetafileProc" namespace="System.Drawing">
        <constructor name="EnumerateMetafileProc(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Boolean" />
        <method name="BeginInvoke(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.IntPtr, System.Drawing.Imaging.PlayRecordCallback, System.AsyncCallback, System.Object)" argnames="recordType, flags, dataSize, data, callbackData, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.IntPtr, System.Drawing.Imaging.PlayRecordCallback)" argnames="recordType, flags, dataSize, data, callbackData" returntype="System.Boolean" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="WndProc" namespace="System.Drawing">
        <constructor name="WndProc(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Int32" />
        <method name="BeginInvoke(System.Int32, System.Int32, System.Int32, System.Int32, System.AsyncCallback, System.Object)" argnames="hWnd, msg, wParam, lParam, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="hWnd, msg, wParam, lParam" returntype="System.Int32" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="HandleChangeEventHandler" namespace="System.Drawing">
        <constructor name="HandleChangeEventHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.String, System.IntPtr, System.Int32, System.AsyncCallback, System.Object)" argnames="handleType, handleValue, currentHandleCount, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.String, System.IntPtr, System.Int32)" argnames="handleType, handleValue, currentHandleCount" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <enum name="ContentAlignment" namespace="System.Drawing">
        <field name="TopLeft" />
        <field name="TopCenter" />
        <field name="TopRight" />
        <field name="MiddleLeft" />
        <field name="MiddleCenter" />
        <field name="MiddleRight" />
        <field name="BottomLeft" />
        <field name="BottomCenter" />
        <field name="BottomRight" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="KnownColor" namespace="System.Drawing">
        <field name="ActiveBorder" />
        <field name="ActiveCaption" />
        <field name="ActiveCaptionText" />
        <field name="AppWorkspace" />
        <field name="Control" />
        <field name="ControlDark" />
        <field name="ControlDarkDark" />
        <field name="ControlLight" />
        <field name="ControlLightLight" />
        <field name="ControlText" />
        <field name="Desktop" />
        <field name="GrayText" />
        <field name="Highlight" />
        <field name="HighlightText" />
        <field name="HotTrack" />
        <field name="InactiveBorder" />
        <field name="InactiveCaption" />
        <field name="InactiveCaptionText" />
        <field name="Info" />
        <field name="InfoText" />
        <field name="Menu" />
        <field name="MenuText" />
        <field name="ScrollBar" />
        <field name="Window" />
        <field name="WindowFrame" />
        <field name="WindowText" />
        <field name="Transparent" />
        <field name="AliceBlue" />
        <field name="AntiqueWhite" />
        <field name="Aqua" />
        <field name="Aquamarine" />
        <field name="Azure" />
        <field name="Beige" />
        <field name="Bisque" />
        <field name="Black" />
        <field name="BlanchedAlmond" />
        <field name="Blue" />
        <field name="BlueViolet" />
        <field name="Brown" />
        <field name="BurlyWood" />
        <field name="CadetBlue" />
        <field name="Chartreuse" />
        <field name="Chocolate" />
        <field name="Coral" />
        <field name="CornflowerBlue" />
        <field name="Cornsilk" />
        <field name="Crimson" />
        <field name="Cyan" />
        <field name="DarkBlue" />
        <field name="DarkCyan" />
        <field name="DarkGoldenrod" />
        <field name="DarkGray" />
        <field name="DarkGreen" />
        <field name="DarkKhaki" />
        <field name="DarkMagenta" />
        <field name="DarkOliveGreen" />
        <field name="DarkOrange" />
        <field name="DarkOrchid" />
        <field name="DarkRed" />
        <field name="DarkSalmon" />
        <field name="DarkSeaGreen" />
        <field name="DarkSlateBlue" />
        <field name="DarkSlateGray" />
        <field name="DarkTurquoise" />
        <field name="DarkViolet" />
        <field name="DeepPink" />
        <field name="DeepSkyBlue" />
        <field name="DimGray" />
        <field name="DodgerBlue" />
        <field name="Firebrick" />
        <field name="FloralWhite" />
        <field name="ForestGreen" />
        <field name="Fuchsia" />
        <field name="Gainsboro" />
        <field name="GhostWhite" />
        <field name="Gold" />
        <field name="Goldenrod" />
        <field name="Gray" />
        <field name="Green" />
        <field name="GreenYellow" />
        <field name="Honeydew" />
        <field name="HotPink" />
        <field name="IndianRed" />
        <field name="Indigo" />
        <field name="Ivory" />
        <field name="Khaki" />
        <field name="Lavender" />
        <field name="LavenderBlush" />
        <field name="LawnGreen" />
        <field name="LemonChiffon" />
        <field name="LightBlue" />
        <field name="LightCoral" />
        <field name="LightCyan" />
        <field name="LightGoldenrodYellow" />
        <field name="LightGray" />
        <field name="LightGreen" />
        <field name="LightPink" />
        <field name="LightSalmon" />
        <field name="LightSeaGreen" />
        <field name="LightSkyBlue" />
        <field name="LightSlateGray" />
        <field name="LightSteelBlue" />
        <field name="LightYellow" />
        <field name="Lime" />
        <field name="LimeGreen" />
        <field name="Linen" />
        <field name="Magenta" />
        <field name="Maroon" />
        <field name="MediumAquamarine" />
        <field name="MediumBlue" />
        <field name="MediumOrchid" />
        <field name="MediumPurple" />
        <field name="MediumSeaGreen" />
        <field name="MediumSlateBlue" />
        <field name="MediumSpringGreen" />
        <field name="MediumTurquoise" />
        <field name="MediumVioletRed" />
        <field name="MidnightBlue" />
        <field name="MintCream" />
        <field name="MistyRose" />
        <field name="Moccasin" />
        <field name="NavajoWhite" />
        <field name="Navy" />
        <field name="OldLace" />
        <field name="Olive" />
        <field name="OliveDrab" />
        <field name="Orange" />
        <field name="OrangeRed" />
        <field name="Orchid" />
        <field name="PaleGoldenrod" />
        <field name="PaleGreen" />
        <field name="PaleTurquoise" />
        <field name="PaleVioletRed" />
        <field name="PapayaWhip" />
        <field name="PeachPuff" />
        <field name="Peru" />
        <field name="Pink" />
        <field name="Plum" />
        <field name="PowderBlue" />
        <field name="Purple" />
        <field name="Red" />
        <field name="RosyBrown" />
        <field name="RoyalBlue" />
        <field name="SaddleBrown" />
        <field name="Salmon" />
        <field name="SandyBrown" />
        <field name="SeaGreen" />
        <field name="SeaShell" />
        <field name="Sienna" />
        <field name="Silver" />
        <field name="SkyBlue" />
        <field name="SlateBlue" />
        <field name="SlateGray" />
        <field name="Snow" />
        <field name="SpringGreen" />
        <field name="SteelBlue" />
        <field name="Tan" />
        <field name="Teal" />
        <field name="Thistle" />
        <field name="Tomato" />
        <field name="Turquoise" />
        <field name="Violet" />
        <field name="Wheat" />
        <field name="White" />
        <field name="WhiteSmoke" />
        <field name="Yellow" />
        <field name="YellowGreen" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="RotateFlipType" namespace="System.Drawing">
        <field name="RotateNoneFlipNone" />
        <field name="Rotate90FlipNone" />
        <field name="Rotate180FlipNone" />
        <field name="Rotate270FlipNone" />
        <field name="RotateNoneFlipX" />
        <field name="Rotate90FlipX" />
        <field name="Rotate180FlipX" />
        <field name="Rotate270FlipX" />
        <field name="RotateNoneFlipY" />
        <field name="Rotate90FlipY" />
        <field name="Rotate180FlipY" />
        <field name="Rotate270FlipY" />
        <field name="RotateNoneFlipXY" />
        <field name="Rotate90FlipXY" />
        <field name="Rotate180FlipXY" />
        <field name="Rotate270FlipXY" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="FontStyle" namespace="System.Drawing">
        <field name="Regular" />
        <field name="Bold" />
        <field name="Italic" />
        <field name="Underline" />
        <field name="Strikeout" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="StructFormat" namespace="System.Drawing">
        <field name="Ansi" />
        <field name="Unicode" />
        <field name="Auto" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="StringAlignment" namespace="System.Drawing">
        <field name="Near" />
        <field name="Center" />
        <field name="Far" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="StringDigitSubstitute" namespace="System.Drawing">
        <field name="User" />
        <field name="None" />
        <field name="National" />
        <field name="Traditional" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="StringFormatFlags" namespace="System.Drawing">
        <field name="DirectionRightToLeft" />
        <field name="DirectionVertical" />
        <field name="FitBlackBox" />
        <field name="DisplayFormatControl" />
        <field name="NoFontFallback" />
        <field name="MeasureTrailingSpaces" />
        <field name="NoWrap" />
        <field name="LineLimit" />
        <field name="NoClip" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="StringTrimming" namespace="System.Drawing">
        <field name="None" />
        <field name="Character" />
        <field name="Word" />
        <field name="EllipsisCharacter" />
        <field name="EllipsisWord" />
        <field name="EllipsisPath" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="StringUnit" namespace="System.Drawing">
        <field name="World" />
        <field name="Display" />
        <field name="Pixel" />
        <field name="Point" />
        <field name="Inch" />
        <field name="Document" />
        <field name="Millimeter" />
        <field name="Em" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="GraphicsUnit" namespace="System.Drawing">
        <field name="World" />
        <field name="Display" />
        <field name="Pixel" />
        <field name="Point" />
        <field name="Inch" />
        <field name="Document" />
        <field name="Millimeter" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <class name="CustomLineCap" namespace="System.Drawing.Drawing2D">
        <constructor name="CustomLineCap(System.Drawing.Drawing2D.GraphicsPath, System.Drawing.Drawing2D.GraphicsPath)" argnames="fillPath, strokePath" />
        <constructor name="CustomLineCap(System.Drawing.Drawing2D.GraphicsPath, System.Drawing.Drawing2D.GraphicsPath, System.Drawing.Drawing2D.LineCap)" argnames="fillPath, strokePath, baseCap" />
        <constructor name="CustomLineCap(System.Drawing.Drawing2D.GraphicsPath, System.Drawing.Drawing2D.GraphicsPath, System.Drawing.Drawing2D.LineCap, System.Single)" argnames="fillPath, strokePath, baseCap, baseInset" />
        <property name="StrokeJoin" propertytype="System.Drawing.Drawing2D.LineJoin" />
        <property name="BaseCap" propertytype="System.Drawing.Drawing2D.LineCap" />
        <property name="BaseInset" propertytype="System.Single" />
        <property name="WidthScale" propertytype="System.Single" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="SetStrokeCaps(System.Drawing.Drawing2D.LineCap, System.Drawing.Drawing2D.LineCap)" argnames="startCap, endCap" returntype="System.Void" />
        <method name="GetStrokeCaps(System.Drawing.Drawing2D.LineCap&amp;, System.Drawing.Drawing2D.LineCap&amp;)" argnames="startCap, endCap" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="AdjustableArrowCap" namespace="System.Drawing.Drawing2D">
        <constructor name="AdjustableArrowCap(System.Single, System.Single)" argnames="width, height" />
        <constructor name="AdjustableArrowCap(System.Single, System.Single, System.Boolean)" argnames="width, height, isFilled" />
        <property name="Height" propertytype="System.Single" />
        <property name="Width" propertytype="System.Single" />
        <property name="MiddleInset" propertytype="System.Single" />
        <property name="Filled" propertytype="System.Boolean" />
        <property name="StrokeJoin" inherited="System.Drawing.Drawing2D.CustomLineCap" propertytype="System.Drawing.Drawing2D.LineJoin" />
        <property name="BaseCap" inherited="System.Drawing.Drawing2D.CustomLineCap" propertytype="System.Drawing.Drawing2D.LineCap" />
        <property name="BaseInset" inherited="System.Drawing.Drawing2D.CustomLineCap" propertytype="System.Single" />
        <property name="WidthScale" inherited="System.Drawing.Drawing2D.CustomLineCap" propertytype="System.Single" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Drawing2D.CustomLineCap" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Drawing.Drawing2D.CustomLineCap" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Drawing2D.CustomLineCap" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Drawing2D.CustomLineCap" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="SetStrokeCaps(System.Drawing.Drawing2D.LineCap, System.Drawing.Drawing2D.LineCap)" argnames="startCap, endCap" inherited="System.Drawing.Drawing2D.CustomLineCap" returntype="System.Void" />
        <method name="GetStrokeCaps(System.Drawing.Drawing2D.LineCap&amp;, System.Drawing.Drawing2D.LineCap&amp;)" argnames="startCap, endCap" inherited="System.Drawing.Drawing2D.CustomLineCap" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Blend" namespace="System.Drawing.Drawing2D">
        <constructor name="Blend" argnames="" />
        <constructor name="Blend(System.Int32)" argnames="count" />
        <property name="Factors" propertytype="System.Single[]" />
        <property name="Positions" propertytype="System.Single[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ColorBlend" namespace="System.Drawing.Drawing2D">
        <constructor name="ColorBlend" argnames="" />
        <constructor name="ColorBlend(System.Int32)" argnames="count" />
        <property name="Colors" propertytype="System.Drawing.Color[]" />
        <property name="Positions" propertytype="System.Single[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="GraphicsContainer" namespace="System.Drawing.Drawing2D">
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="GraphicsPathIterator" namespace="System.Drawing.Drawing2D">
        <constructor name="GraphicsPathIterator(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" />
        <property name="Count" propertytype="System.Int32" />
        <property name="SubpathCount" propertytype="System.Int32" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="NextSubpath(System.Int32&amp;, System.Int32&amp;, System.Boolean&amp;)" argnames="startIndex, endIndex, isClosed" returntype="System.Int32" />
        <method name="NextSubpath(System.Drawing.Drawing2D.GraphicsPath, System.Boolean&amp;)" argnames="path, isClosed" returntype="System.Int32" />
        <method name="NextPathType(System.Byte&amp;, System.Int32&amp;, System.Int32&amp;)" argnames="pathType, startIndex, endIndex" returntype="System.Int32" />
        <method name="NextMarker(System.Int32&amp;, System.Int32&amp;)" argnames="startIndex, endIndex" returntype="System.Int32" />
        <method name="NextMarker(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" returntype="System.Int32" />
        <method name="HasCurve" argnames="" returntype="System.Boolean" />
        <method name="Rewind" argnames="" returntype="System.Void" />
        <method name="Enumerate(System.Drawing.PointF[]&amp;, System.Byte[]&amp;)" argnames="points, types" returntype="System.Int32" />
        <method name="CopyData(System.Drawing.PointF[]&amp;, System.Byte[]&amp;, System.Int32, System.Int32)" argnames="points, types, startIndex, endIndex" returntype="System.Int32" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="GraphicsState" namespace="System.Drawing.Drawing2D">
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="HatchBrush" namespace="System.Drawing.Drawing2D">
        <constructor name="HatchBrush(System.Drawing.Drawing2D.HatchStyle, System.Drawing.Color)" argnames="hatchstyle, foreColor" />
        <constructor name="HatchBrush(System.Drawing.Drawing2D.HatchStyle, System.Drawing.Color, System.Drawing.Color)" argnames="hatchstyle, foreColor, backColor" />
        <property name="HatchStyle" propertytype="System.Drawing.Drawing2D.HatchStyle" />
        <property name="ForegroundColor" propertytype="System.Drawing.Color" />
        <property name="BackgroundColor" propertytype="System.Drawing.Color" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="LinearGradientBrush" namespace="System.Drawing.Drawing2D">
        <constructor name="LinearGradientBrush(System.Drawing.PointF, System.Drawing.PointF, System.Drawing.Color, System.Drawing.Color)" argnames="point1, point2, color1, color2" />
        <constructor name="LinearGradientBrush(System.Drawing.Point, System.Drawing.Point, System.Drawing.Color, System.Drawing.Color)" argnames="point1, point2, color1, color2" />
        <constructor name="LinearGradientBrush(System.Drawing.RectangleF, System.Drawing.Color, System.Drawing.Color, System.Drawing.Drawing2D.LinearGradientMode)" argnames="rect, color1, color2, linearGradientMode" />
        <constructor name="LinearGradientBrush(System.Drawing.Rectangle, System.Drawing.Color, System.Drawing.Color, System.Drawing.Drawing2D.LinearGradientMode)" argnames="rect, color1, color2, linearGradientMode" />
        <constructor name="LinearGradientBrush(System.Drawing.RectangleF, System.Drawing.Color, System.Drawing.Color, System.Single)" argnames="rect, color1, color2, angle" />
        <constructor name="LinearGradientBrush(System.Drawing.RectangleF, System.Drawing.Color, System.Drawing.Color, System.Single, System.Boolean)" argnames="rect, color1, color2, angle, isAngleScaleable" />
        <constructor name="LinearGradientBrush(System.Drawing.Rectangle, System.Drawing.Color, System.Drawing.Color, System.Single)" argnames="rect, color1, color2, angle" />
        <constructor name="LinearGradientBrush(System.Drawing.Rectangle, System.Drawing.Color, System.Drawing.Color, System.Single, System.Boolean)" argnames="rect, color1, color2, angle, isAngleScaleable" />
        <property name="LinearColors" propertytype="System.Drawing.Color[]" />
        <property name="Rectangle" propertytype="System.Drawing.RectangleF" />
        <property name="GammaCorrection" propertytype="System.Boolean" />
        <property name="Blend" propertytype="System.Drawing.Drawing2D.Blend" />
        <property name="InterpolationColors" propertytype="System.Drawing.Drawing2D.ColorBlend" />
        <property name="WrapMode" propertytype="System.Drawing.Drawing2D.WrapMode" />
        <property name="Transform" propertytype="System.Drawing.Drawing2D.Matrix" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="SetSigmaBellShape(System.Single)" argnames="focus" returntype="System.Void" />
        <method name="SetSigmaBellShape(System.Single, System.Single)" argnames="focus, scale" returntype="System.Void" />
        <method name="SetBlendTriangularShape(System.Single)" argnames="focus" returntype="System.Void" />
        <method name="SetBlendTriangularShape(System.Single, System.Single)" argnames="focus, scale" returntype="System.Void" />
        <method name="ResetTransform" argnames="" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.MatrixOrder)" argnames="matrix, order" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="dx, dy, order" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single)" argnames="sx, sy" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="sx, sy, order" returntype="System.Void" />
        <method name="RotateTransform(System.Single)" argnames="angle" returntype="System.Void" />
        <method name="RotateTransform(System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, order" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PathData" namespace="System.Drawing.Drawing2D">
        <constructor name="PathData" argnames="" />
        <property name="Points" propertytype="System.Drawing.PointF[]" />
        <property name="Types" propertytype="System.Byte[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PathGradientBrush" namespace="System.Drawing.Drawing2D">
        <constructor name="PathGradientBrush(System.Drawing.PointF[])" argnames="points" />
        <constructor name="PathGradientBrush(System.Drawing.PointF[], System.Drawing.Drawing2D.WrapMode)" argnames="points, wrapMode" />
        <constructor name="PathGradientBrush(System.Drawing.Point[])" argnames="points" />
        <constructor name="PathGradientBrush(System.Drawing.Point[], System.Drawing.Drawing2D.WrapMode)" argnames="points, wrapMode" />
        <constructor name="PathGradientBrush(System.Drawing.Drawing2D.GraphicsPath)" argnames="path" />
        <property name="CenterColor" propertytype="System.Drawing.Color" />
        <property name="SurroundColors" propertytype="System.Drawing.Color[]" />
        <property name="CenterPoint" propertytype="System.Drawing.PointF" />
        <property name="Rectangle" propertytype="System.Drawing.RectangleF" />
        <property name="Blend" propertytype="System.Drawing.Drawing2D.Blend" />
        <property name="InterpolationColors" propertytype="System.Drawing.Drawing2D.ColorBlend" />
        <property name="Transform" propertytype="System.Drawing.Drawing2D.Matrix" />
        <property name="FocusScales" propertytype="System.Drawing.PointF" />
        <property name="WrapMode" propertytype="System.Drawing.Drawing2D.WrapMode" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Brush" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="SetSigmaBellShape(System.Single)" argnames="focus" returntype="System.Void" />
        <method name="SetSigmaBellShape(System.Single, System.Single)" argnames="focus, scale" returntype="System.Void" />
        <method name="SetBlendTriangularShape(System.Single)" argnames="focus" returntype="System.Void" />
        <method name="SetBlendTriangularShape(System.Single, System.Single)" argnames="focus, scale" returntype="System.Void" />
        <method name="ResetTransform" argnames="" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="MultiplyTransform(System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.MatrixOrder)" argnames="matrix, order" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single)" argnames="dx, dy" returntype="System.Void" />
        <method name="TranslateTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="dx, dy, order" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single)" argnames="sx, sy" returntype="System.Void" />
        <method name="ScaleTransform(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="sx, sy, order" returntype="System.Void" />
        <method name="RotateTransform(System.Single)" argnames="angle" returntype="System.Void" />
        <method name="RotateTransform(System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, order" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="RegionData" namespace="System.Drawing.Drawing2D">
        <property name="Data" propertytype="System.Byte[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="GraphicsPath" namespace="System.Drawing.Drawing2D">
        <constructor name="GraphicsPath" argnames="" />
        <constructor name="GraphicsPath(System.Drawing.Drawing2D.FillMode)" argnames="fillMode" />
        <constructor name="GraphicsPath(System.Drawing.PointF[], System.Byte[])" argnames="pts, types" />
        <constructor name="GraphicsPath(System.Drawing.PointF[], System.Byte[], System.Drawing.Drawing2D.FillMode)" argnames="pts, types, fillMode" />
        <constructor name="GraphicsPath(System.Drawing.Point[], System.Byte[])" argnames="pts, types" />
        <constructor name="GraphicsPath(System.Drawing.Point[], System.Byte[], System.Drawing.Drawing2D.FillMode)" argnames="pts, types, fillMode" />
        <property name="FillMode" propertytype="System.Drawing.Drawing2D.FillMode" />
        <property name="PathData" propertytype="System.Drawing.Drawing2D.PathData" />
        <property name="PointCount" propertytype="System.Int32" />
        <property name="PathTypes" propertytype="System.Byte[]" />
        <property name="PathPoints" propertytype="System.Drawing.PointF[]" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="Reset" argnames="" returntype="System.Void" />
        <method name="StartFigure" argnames="" returntype="System.Void" />
        <method name="CloseFigure" argnames="" returntype="System.Void" />
        <method name="CloseAllFigures" argnames="" returntype="System.Void" />
        <method name="SetMarkers" argnames="" returntype="System.Void" />
        <method name="ClearMarkers" argnames="" returntype="System.Void" />
        <method name="Reverse" argnames="" returntype="System.Void" />
        <method name="GetLastPoint" argnames="" returntype="System.Drawing.PointF" />
        <method name="IsVisible(System.Single, System.Single)" argnames="x, y" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.PointF)" argnames="point" returntype="System.Boolean" />
        <method name="IsVisible(System.Single, System.Single, System.Drawing.Graphics)" argnames="x, y, graphics" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.PointF, System.Drawing.Graphics)" argnames="pt, graphics" returntype="System.Boolean" />
        <method name="IsVisible(System.Int32, System.Int32)" argnames="x, y" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Point)" argnames="point" returntype="System.Boolean" />
        <method name="IsVisible(System.Int32, System.Int32, System.Drawing.Graphics)" argnames="x, y, graphics" returntype="System.Boolean" />
        <method name="IsVisible(System.Drawing.Point, System.Drawing.Graphics)" argnames="pt, graphics" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Single, System.Single, System.Drawing.Pen)" argnames="x, y, pen" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Drawing.PointF, System.Drawing.Pen)" argnames="point, pen" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Single, System.Single, System.Drawing.Pen, System.Drawing.Graphics)" argnames="x, y, pen, graphics" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Drawing.PointF, System.Drawing.Pen, System.Drawing.Graphics)" argnames="pt, pen, graphics" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Int32, System.Int32, System.Drawing.Pen)" argnames="x, y, pen" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Drawing.Point, System.Drawing.Pen)" argnames="point, pen" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Int32, System.Int32, System.Drawing.Pen, System.Drawing.Graphics)" argnames="x, y, pen, graphics" returntype="System.Boolean" />
        <method name="IsOutlineVisible(System.Drawing.Point, System.Drawing.Pen, System.Drawing.Graphics)" argnames="pt, pen, graphics" returntype="System.Boolean" />
        <method name="AddLine(System.Drawing.PointF, System.Drawing.PointF)" argnames="pt1, pt2" returntype="System.Void" />
        <method name="AddLine(System.Single, System.Single, System.Single, System.Single)" argnames="x1, y1, x2, y2" returntype="System.Void" />
        <method name="AddLines(System.Drawing.PointF[])" argnames="points" returntype="System.Void" />
        <method name="AddLine(System.Drawing.Point, System.Drawing.Point)" argnames="pt1, pt2" returntype="System.Void" />
        <method name="AddLine(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x1, y1, x2, y2" returntype="System.Void" />
        <method name="AddLines(System.Drawing.Point[])" argnames="points" returntype="System.Void" />
        <method name="AddArc(System.Drawing.RectangleF, System.Single, System.Single)" argnames="rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddArc(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddArc(System.Drawing.Rectangle, System.Single, System.Single)" argnames="rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddArc(System.Int32, System.Int32, System.Int32, System.Int32, System.Single, System.Single)" argnames="x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddBezier(System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF)" argnames="pt1, pt2, pt3, pt4" returntype="System.Void" />
        <method name="AddBezier(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="x1, y1, x2, y2, x3, y3, x4, y4" returntype="System.Void" />
        <method name="AddBeziers(System.Drawing.PointF[])" argnames="points" returntype="System.Void" />
        <method name="AddBezier(System.Drawing.Point, System.Drawing.Point, System.Drawing.Point, System.Drawing.Point)" argnames="pt1, pt2, pt3, pt4" returntype="System.Void" />
        <method name="AddBezier(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x1, y1, x2, y2, x3, y3, x4, y4" returntype="System.Void" />
        <method name="AddBeziers(System.Drawing.Point[])" argnames="points" returntype="System.Void" />
        <method name="AddCurve(System.Drawing.PointF[])" argnames="points" returntype="System.Void" />
        <method name="AddCurve(System.Drawing.PointF[], System.Single)" argnames="points, tension" returntype="System.Void" />
        <method name="AddCurve(System.Drawing.PointF[], System.Int32, System.Int32, System.Single)" argnames="points, offset, numberOfSegments, tension" returntype="System.Void" />
        <method name="AddCurve(System.Drawing.Point[])" argnames="points" returntype="System.Void" />
        <method name="AddCurve(System.Drawing.Point[], System.Single)" argnames="points, tension" returntype="System.Void" />
        <method name="AddCurve(System.Drawing.Point[], System.Int32, System.Int32, System.Single)" argnames="points, offset, numberOfSegments, tension" returntype="System.Void" />
        <method name="AddClosedCurve(System.Drawing.PointF[])" argnames="points" returntype="System.Void" />
        <method name="AddClosedCurve(System.Drawing.PointF[], System.Single)" argnames="points, tension" returntype="System.Void" />
        <method name="AddClosedCurve(System.Drawing.Point[])" argnames="points" returntype="System.Void" />
        <method name="AddClosedCurve(System.Drawing.Point[], System.Single)" argnames="points, tension" returntype="System.Void" />
        <method name="AddRectangle(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="AddRectangles(System.Drawing.RectangleF[])" argnames="rects" returntype="System.Void" />
        <method name="AddRectangle(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="AddRectangles(System.Drawing.Rectangle[])" argnames="rects" returntype="System.Void" />
        <method name="AddEllipse(System.Drawing.RectangleF)" argnames="rect" returntype="System.Void" />
        <method name="AddEllipse(System.Single, System.Single, System.Single, System.Single)" argnames="x, y, width, height" returntype="System.Void" />
        <method name="AddEllipse(System.Drawing.Rectangle)" argnames="rect" returntype="System.Void" />
        <method name="AddEllipse(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="x, y, width, height" returntype="System.Void" />
        <method name="AddPie(System.Drawing.Rectangle, System.Single, System.Single)" argnames="rect, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddPie(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddPie(System.Int32, System.Int32, System.Int32, System.Int32, System.Single, System.Single)" argnames="x, y, width, height, startAngle, sweepAngle" returntype="System.Void" />
        <method name="AddPolygon(System.Drawing.PointF[])" argnames="points" returntype="System.Void" />
        <method name="AddPolygon(System.Drawing.Point[])" argnames="points" returntype="System.Void" />
        <method name="AddPath(System.Drawing.Drawing2D.GraphicsPath, System.Boolean)" argnames="addingPath, connect" returntype="System.Void" />
        <method name="AddString(System.String, System.Drawing.FontFamily, System.Int32, System.Single, System.Drawing.PointF, System.Drawing.StringFormat)" argnames="s, family, style, emSize, origin, format" returntype="System.Void" />
        <method name="AddString(System.String, System.Drawing.FontFamily, System.Int32, System.Single, System.Drawing.Point, System.Drawing.StringFormat)" argnames="s, family, style, emSize, origin, format" returntype="System.Void" />
        <method name="AddString(System.String, System.Drawing.FontFamily, System.Int32, System.Single, System.Drawing.RectangleF, System.Drawing.StringFormat)" argnames="s, family, style, emSize, layoutRect, format" returntype="System.Void" />
        <method name="AddString(System.String, System.Drawing.FontFamily, System.Int32, System.Single, System.Drawing.Rectangle, System.Drawing.StringFormat)" argnames="s, family, style, emSize, layoutRect, format" returntype="System.Void" />
        <method name="Transform(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="GetBounds" argnames="" returntype="System.Drawing.RectangleF" />
        <method name="GetBounds(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Drawing.RectangleF" />
        <method name="GetBounds(System.Drawing.Drawing2D.Matrix, System.Drawing.Pen)" argnames="matrix, pen" returntype="System.Drawing.RectangleF" />
        <method name="Flatten" argnames="" returntype="System.Void" />
        <method name="Flatten(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="Flatten(System.Drawing.Drawing2D.Matrix, System.Single)" argnames="matrix, flatness" returntype="System.Void" />
        <method name="Widen(System.Drawing.Pen)" argnames="pen" returntype="System.Void" />
        <method name="Widen(System.Drawing.Pen, System.Drawing.Drawing2D.Matrix)" argnames="pen, matrix" returntype="System.Void" />
        <method name="Widen(System.Drawing.Pen, System.Drawing.Drawing2D.Matrix, System.Single)" argnames="pen, matrix, flatness" returntype="System.Void" />
        <method name="Warp(System.Drawing.PointF[], System.Drawing.RectangleF)" argnames="destPoints, srcRect" returntype="System.Void" />
        <method name="Warp(System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.Drawing2D.Matrix)" argnames="destPoints, srcRect, matrix" returntype="System.Void" />
        <method name="Warp(System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.WarpMode)" argnames="destPoints, srcRect, matrix, warpMode" returntype="System.Void" />
        <method name="Warp(System.Drawing.PointF[], System.Drawing.RectangleF, System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.WarpMode, System.Single)" argnames="destPoints, srcRect, matrix, warpMode, flatness" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Matrix" namespace="System.Drawing.Drawing2D">
        <constructor name="Matrix" argnames="" />
        <constructor name="Matrix(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" argnames="m11, m12, m21, m22, dx, dy" />
        <constructor name="Matrix(System.Drawing.RectangleF, System.Drawing.PointF[])" argnames="rect, plgpts" />
        <constructor name="Matrix(System.Drawing.Rectangle, System.Drawing.Point[])" argnames="rect, plgpts" />
        <property name="Elements" propertytype="System.Single[]" />
        <property name="OffsetX" propertytype="System.Single" />
        <property name="OffsetY" propertytype="System.Single" />
        <property name="IsInvertible" propertytype="System.Boolean" />
        <property name="IsIdentity" propertytype="System.Boolean" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="Clone" argnames="" returntype="System.Drawing.Drawing2D.Matrix" />
        <method name="Reset" argnames="" returntype="System.Void" />
        <method name="Multiply(System.Drawing.Drawing2D.Matrix)" argnames="matrix" returntype="System.Void" />
        <method name="Multiply(System.Drawing.Drawing2D.Matrix, System.Drawing.Drawing2D.MatrixOrder)" argnames="matrix, order" returntype="System.Void" />
        <method name="Translate(System.Single, System.Single)" argnames="offsetX, offsetY" returntype="System.Void" />
        <method name="Translate(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="offsetX, offsetY, order" returntype="System.Void" />
        <method name="Scale(System.Single, System.Single)" argnames="scaleX, scaleY" returntype="System.Void" />
        <method name="Scale(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="scaleX, scaleY, order" returntype="System.Void" />
        <method name="Rotate(System.Single)" argnames="angle" returntype="System.Void" />
        <method name="Rotate(System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, order" returntype="System.Void" />
        <method name="RotateAt(System.Single, System.Drawing.PointF)" argnames="angle, point" returntype="System.Void" />
        <method name="RotateAt(System.Single, System.Drawing.PointF, System.Drawing.Drawing2D.MatrixOrder)" argnames="angle, point, order" returntype="System.Void" />
        <method name="Shear(System.Single, System.Single)" argnames="shearX, shearY" returntype="System.Void" />
        <method name="Shear(System.Single, System.Single, System.Drawing.Drawing2D.MatrixOrder)" argnames="shearX, shearY, order" returntype="System.Void" />
        <method name="Invert" argnames="" returntype="System.Void" />
        <method name="TransformPoints(System.Drawing.PointF[])" argnames="pts" returntype="System.Void" />
        <method name="TransformPoints(System.Drawing.Point[])" argnames="pts" returntype="System.Void" />
        <method name="TransformVectors(System.Drawing.PointF[])" argnames="pts" returntype="System.Void" />
        <method name="VectorTransformPoints(System.Drawing.Point[])" argnames="pts" returntype="System.Void" />
        <method name="TransformVectors(System.Drawing.Point[])" argnames="pts" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <enum name="DashCap" namespace="System.Drawing.Drawing2D">
        <field name="Flat" />
        <field name="Round" />
        <field name="Triangle" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="CombineMode" namespace="System.Drawing.Drawing2D">
        <field name="Replace" />
        <field name="Intersect" />
        <field name="Union" />
        <field name="Xor" />
        <field name="Exclude" />
        <field name="Complement" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="CompositingMode" namespace="System.Drawing.Drawing2D">
        <field name="SourceOver" />
        <field name="SourceCopy" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="CompositingQuality" namespace="System.Drawing.Drawing2D">
        <field name="Invalid" />
        <field name="Default" />
        <field name="HighSpeed" />
        <field name="HighQuality" />
        <field name="GammaCorrected" />
        <field name="AssumeLinear" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="CoordinateSpace" namespace="System.Drawing.Drawing2D">
        <field name="World" />
        <field name="Page" />
        <field name="Device" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="DashStyle" namespace="System.Drawing.Drawing2D">
        <field name="Solid" />
        <field name="Dash" />
        <field name="Dot" />
        <field name="DashDot" />
        <field name="DashDotDot" />
        <field name="Custom" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="FillMode" namespace="System.Drawing.Drawing2D">
        <field name="Alternate" />
        <field name="Winding" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="FlushIntention" namespace="System.Drawing.Drawing2D">
        <field name="Flush" />
        <field name="Sync" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="HatchStyle" namespace="System.Drawing.Drawing2D">
        <field name="Horizontal" />
        <field name="Vertical" />
        <field name="ForwardDiagonal" />
        <field name="BackwardDiagonal" />
        <field name="Cross" />
        <field name="DiagonalCross" />
        <field name="Percent05" />
        <field name="Percent10" />
        <field name="Percent20" />
        <field name="Percent25" />
        <field name="Percent30" />
        <field name="Percent40" />
        <field name="Percent50" />
        <field name="Percent60" />
        <field name="Percent70" />
        <field name="Percent75" />
        <field name="Percent80" />
        <field name="Percent90" />
        <field name="LightDownwardDiagonal" />
        <field name="LightUpwardDiagonal" />
        <field name="DarkDownwardDiagonal" />
        <field name="DarkUpwardDiagonal" />
        <field name="WideDownwardDiagonal" />
        <field name="WideUpwardDiagonal" />
        <field name="LightVertical" />
        <field name="LightHorizontal" />
        <field name="NarrowVertical" />
        <field name="NarrowHorizontal" />
        <field name="DarkVertical" />
        <field name="DarkHorizontal" />
        <field name="DashedDownwardDiagonal" />
        <field name="DashedUpwardDiagonal" />
        <field name="DashedHorizontal" />
        <field name="DashedVertical" />
        <field name="SmallConfetti" />
        <field name="LargeConfetti" />
        <field name="ZigZag" />
        <field name="Wave" />
        <field name="DiagonalBrick" />
        <field name="HorizontalBrick" />
        <field name="Weave" />
        <field name="Plaid" />
        <field name="Divot" />
        <field name="DottedGrid" />
        <field name="DottedDiamond" />
        <field name="Shingle" />
        <field name="Trellis" />
        <field name="Sphere" />
        <field name="SmallGrid" />
        <field name="SmallCheckerBoard" />
        <field name="LargeCheckerBoard" />
        <field name="OutlinedDiamond" />
        <field name="SolidDiamond" />
        <field name="LargeGrid" />
        <field name="Min" />
        <field name="Max" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="InterpolationMode" namespace="System.Drawing.Drawing2D">
        <field name="Invalid" />
        <field name="Default" />
        <field name="Low" />
        <field name="High" />
        <field name="Bilinear" />
        <field name="Bicubic" />
        <field name="NearestNeighbor" />
        <field name="HighQualityBilinear" />
        <field name="HighQualityBicubic" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="LinearGradientMode" namespace="System.Drawing.Drawing2D">
        <field name="Horizontal" />
        <field name="Vertical" />
        <field name="ForwardDiagonal" />
        <field name="BackwardDiagonal" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="LineCap" namespace="System.Drawing.Drawing2D">
        <field name="Flat" />
        <field name="Square" />
        <field name="Round" />
        <field name="Triangle" />
        <field name="NoAnchor" />
        <field name="SquareAnchor" />
        <field name="RoundAnchor" />
        <field name="DiamondAnchor" />
        <field name="ArrowAnchor" />
        <field name="Custom" />
        <field name="AnchorMask" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="LineJoin" namespace="System.Drawing.Drawing2D">
        <field name="Miter" />
        <field name="Bevel" />
        <field name="Round" />
        <field name="MiterClipped" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="MatrixOrder" namespace="System.Drawing.Drawing2D">
        <field name="Prepend" />
        <field name="Append" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PathPointType" namespace="System.Drawing.Drawing2D">
        <field name="Start" />
        <field name="Line" />
        <field name="Bezier" />
        <field name="PathTypeMask" />
        <field name="DashMode" />
        <field name="PathMarker" />
        <field name="CloseSubpath" />
        <field name="Bezier3" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PenAlignment" namespace="System.Drawing.Drawing2D">
        <field name="Center" />
        <field name="Inset" />
        <field name="Outset" />
        <field name="Left" />
        <field name="Right" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PenType" namespace="System.Drawing.Drawing2D">
        <field name="SolidColor" />
        <field name="HatchFill" />
        <field name="TextureFill" />
        <field name="PathGradient" />
        <field name="LinearGradient" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PixelOffsetMode" namespace="System.Drawing.Drawing2D">
        <field name="Invalid" />
        <field name="Default" />
        <field name="HighSpeed" />
        <field name="HighQuality" />
        <field name="None" />
        <field name="Half" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="QualityMode" namespace="System.Drawing.Drawing2D">
        <field name="Invalid" />
        <field name="Default" />
        <field name="Low" />
        <field name="High" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="SmoothingMode" namespace="System.Drawing.Drawing2D">
        <field name="Invalid" />
        <field name="Default" />
        <field name="HighSpeed" />
        <field name="HighQuality" />
        <field name="None" />
        <field name="AntiAlias" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="WarpMode" namespace="System.Drawing.Drawing2D">
        <field name="Perspective" />
        <field name="Bilinear" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="WrapMode" namespace="System.Drawing.Drawing2D">
        <field name="Tile" />
        <field name="TileFlipX" />
        <field name="TileFlipY" />
        <field name="TileFlipXY" />
        <field name="Clamp" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <class name="BitmapData" namespace="System.Drawing.Imaging">
        <constructor name="BitmapData" argnames="" />
        <property name="Width" propertytype="System.Int32" />
        <property name="Height" propertytype="System.Int32" />
        <property name="Stride" propertytype="System.Int32" />
        <property name="PixelFormat" propertytype="System.Drawing.Imaging.PixelFormat" />
        <property name="Scan0" propertytype="System.IntPtr" />
        <property name="Reserved" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ColorMap" namespace="System.Drawing.Imaging">
        <constructor name="ColorMap" argnames="" />
        <property name="OldColor" propertytype="System.Drawing.Color" />
        <property name="NewColor" propertytype="System.Drawing.Color" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ColorMatrix" namespace="System.Drawing.Imaging">
        <constructor name="ColorMatrix" argnames="" />
        <constructor name="ColorMatrix(System.Single[][])" argnames="newColorMatrix" />
        <property name="Matrix00" propertytype="System.Single" />
        <property name="Matrix01" propertytype="System.Single" />
        <property name="Matrix02" propertytype="System.Single" />
        <property name="Matrix03" propertytype="System.Single" />
        <property name="Matrix04" propertytype="System.Single" />
        <property name="Matrix10" propertytype="System.Single" />
        <property name="Matrix11" propertytype="System.Single" />
        <property name="Matrix12" propertytype="System.Single" />
        <property name="Matrix13" propertytype="System.Single" />
        <property name="Matrix14" propertytype="System.Single" />
        <property name="Matrix20" propertytype="System.Single" />
        <property name="Matrix21" propertytype="System.Single" />
        <property name="Matrix22" propertytype="System.Single" />
        <property name="Matrix23" propertytype="System.Single" />
        <property name="Matrix24" propertytype="System.Single" />
        <property name="Matrix30" propertytype="System.Single" />
        <property name="Matrix31" propertytype="System.Single" />
        <property name="Matrix32" propertytype="System.Single" />
        <property name="Matrix33" propertytype="System.Single" />
        <property name="Matrix34" propertytype="System.Single" />
        <property name="Matrix40" propertytype="System.Single" />
        <property name="Matrix41" propertytype="System.Single" />
        <property name="Matrix42" propertytype="System.Single" />
        <property name="Matrix43" propertytype="System.Single" />
        <property name="Matrix44" propertytype="System.Single" />
        <property name="Item" propertytype="System.Single" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ColorPalette" namespace="System.Drawing.Imaging">
        <property name="Flags" propertytype="System.Int32" />
        <property name="Entries" propertytype="System.Drawing.Color[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Encoder" namespace="System.Drawing.Imaging">
        <constructor name="Encoder(System.Guid)" argnames="guid" />
        <field name="Compression" />
        <field name="ColorDepth" />
        <field name="ScanMethod" />
        <field name="Version" />
        <field name="RenderMethod" />
        <field name="Quality" />
        <field name="Transformation" />
        <field name="LuminanceTable" />
        <field name="ChrominanceTable" />
        <field name="SaveFlag" />
        <property name="Guid" propertytype="System.Guid" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="EncoderParameters" namespace="System.Drawing.Imaging">
        <constructor name="EncoderParameters(System.Int32)" argnames="count" />
        <constructor name="EncoderParameters" argnames="" />
        <property name="Param" propertytype="System.Drawing.Imaging.EncoderParameter[]" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="FrameDimension" namespace="System.Drawing.Imaging">
        <constructor name="FrameDimension(System.Guid)" argnames="guid" />
        <property name="Guid" propertytype="System.Guid" />
        <property name="Time" propertytype="System.Drawing.Imaging.FrameDimension" />
        <property name="Resolution" propertytype="System.Drawing.Imaging.FrameDimension" />
        <property name="Page" propertytype="System.Drawing.Imaging.FrameDimension" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="o" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ImageCodecInfo" namespace="System.Drawing.Imaging">
        <property name="Clsid" propertytype="System.Guid" />
        <property name="FormatID" propertytype="System.Guid" />
        <property name="CodecName" propertytype="System.String" />
        <property name="DllName" propertytype="System.String" />
        <property name="FormatDescription" propertytype="System.String" />
        <property name="FilenameExtension" propertytype="System.String" />
        <property name="MimeType" propertytype="System.String" />
        <property name="Flags" propertytype="System.Drawing.Imaging.ImageCodecFlags" />
        <property name="Version" propertytype="System.Int32" />
        <property name="SignaturePatterns" propertytype="System.Byte[][]" />
        <property name="SignatureMasks" propertytype="System.Byte[][]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetImageDecoders" argnames="" returntype="System.Drawing.Imaging.ImageCodecInfo[]" />
        <method name="GetImageEncoders" argnames="" returntype="System.Drawing.Imaging.ImageCodecInfo[]" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ImageFormat" namespace="System.Drawing.Imaging">
        <constructor name="ImageFormat(System.Guid)" argnames="guid" />
        <property name="Guid" propertytype="System.Guid" />
        <property name="MemoryBmp" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Bmp" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Emf" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Wmf" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Gif" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Jpeg" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Png" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Tiff" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Exif" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="Icon" propertytype="System.Drawing.Imaging.ImageFormat" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="o" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Metafile" namespace="System.Drawing.Imaging">
        <constructor name="Metafile(System.IntPtr, System.Drawing.Imaging.WmfPlaceableFileHeader)" argnames="hmetafile, wmfHeader" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Imaging.WmfPlaceableFileHeader, System.Boolean)" argnames="hmetafile, wmfHeader, deleteWmf" />
        <constructor name="Metafile(System.IntPtr, System.Boolean)" argnames="henhmetafile, deleteEmf" />
        <constructor name="Metafile(System.String)" argnames="filename" />
        <constructor name="Metafile(System.IO.Stream)" argnames="stream" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Imaging.EmfType)" argnames="referenceHdc, emfType" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Imaging.EmfType, System.String)" argnames="referenceHdc, emfType, description" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.RectangleF)" argnames="referenceHdc, frameRect" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit)" argnames="referenceHdc, frameRect, frameUnit" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType)" argnames="referenceHdc, frameRect, frameUnit, type" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType, System.String)" argnames="referenceHdc, frameRect, frameUnit, type, description" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Rectangle)" argnames="referenceHdc, frameRect" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit)" argnames="referenceHdc, frameRect, frameUnit" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType)" argnames="referenceHdc, frameRect, frameUnit, type" />
        <constructor name="Metafile(System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType, System.String)" argnames="referenceHdc, frameRect, frameUnit, type, desc" />
        <constructor name="Metafile(System.String, System.IntPtr)" argnames="fileName, referenceHdc" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Imaging.EmfType)" argnames="fileName, referenceHdc, type" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Imaging.EmfType, System.String)" argnames="fileName, referenceHdc, type, description" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.RectangleF)" argnames="fileName, referenceHdc, frameRect" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit)" argnames="fileName, referenceHdc, frameRect, frameUnit" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType)" argnames="fileName, referenceHdc, frameRect, frameUnit, type" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.String)" argnames="fileName, referenceHdc, frameRect, frameUnit, desc" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType, System.String)" argnames="fileName, referenceHdc, frameRect, frameUnit, type, description" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Rectangle)" argnames="fileName, referenceHdc, frameRect" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit)" argnames="fileName, referenceHdc, frameRect, frameUnit" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType)" argnames="fileName, referenceHdc, frameRect, frameUnit, type" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.String)" argnames="fileName, referenceHdc, frameRect, frameUnit, description" />
        <constructor name="Metafile(System.String, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType, System.String)" argnames="fileName, referenceHdc, frameRect, frameUnit, type, description" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr)" argnames="stream, referenceHdc" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.Imaging.EmfType)" argnames="stream, referenceHdc, type" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.Imaging.EmfType, System.String)" argnames="stream, referenceHdc, type, description" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.RectangleF)" argnames="stream, referenceHdc, frameRect" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit)" argnames="stream, referenceHdc, frameRect, frameUnit" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType)" argnames="stream, referenceHdc, frameRect, frameUnit, type" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.RectangleF, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType, System.String)" argnames="stream, referenceHdc, frameRect, frameUnit, type, description" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.Rectangle)" argnames="stream, referenceHdc, frameRect" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit)" argnames="stream, referenceHdc, frameRect, frameUnit" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType)" argnames="stream, referenceHdc, frameRect, frameUnit, type" />
        <constructor name="Metafile(System.IO.Stream, System.IntPtr, System.Drawing.Rectangle, System.Drawing.Imaging.MetafileFrameUnit, System.Drawing.Imaging.EmfType, System.String)" argnames="stream, referenceHdc, frameRect, frameUnit, type, description" />
        <property name="PhysicalDimension" inherited="System.Drawing.Image" propertytype="System.Drawing.SizeF" />
        <property name="Size" inherited="System.Drawing.Image" propertytype="System.Drawing.Size" />
        <property name="Width" inherited="System.Drawing.Image" propertytype="System.Int32" />
        <property name="Height" inherited="System.Drawing.Image" propertytype="System.Int32" />
        <property name="HorizontalResolution" inherited="System.Drawing.Image" propertytype="System.Single" />
        <property name="VerticalResolution" inherited="System.Drawing.Image" propertytype="System.Single" />
        <property name="Flags" inherited="System.Drawing.Image" propertytype="System.Int32" />
        <property name="RawFormat" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.ImageFormat" />
        <property name="PixelFormat" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.PixelFormat" />
        <property name="Palette" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.ColorPalette" />
        <property name="FrameDimensionsList" inherited="System.Drawing.Image" propertytype="System.Guid[]" />
        <property name="PropertyIdList" inherited="System.Drawing.Image" propertytype="System.Int32[]" />
        <property name="PropertyItems" inherited="System.Drawing.Image" propertytype="System.Drawing.Imaging.PropertyItem[]" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Drawing.Image" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetMetafileHeader(System.IntPtr, System.Drawing.Imaging.WmfPlaceableFileHeader)" argnames="hmetafile, wmfHeader" returntype="System.Drawing.Imaging.MetafileHeader" />
        <method name="GetMetafileHeader(System.IntPtr)" argnames="henhmetafile" returntype="System.Drawing.Imaging.MetafileHeader" />
        <method name="GetMetafileHeader(System.String)" argnames="fileName" returntype="System.Drawing.Imaging.MetafileHeader" />
        <method name="GetMetafileHeader(System.IO.Stream)" argnames="stream" returntype="System.Drawing.Imaging.MetafileHeader" />
        <method name="GetMetafileHeader" argnames="" returntype="System.Drawing.Imaging.MetafileHeader" />
        <method name="GetHenhmetafile" argnames="" returntype="System.IntPtr" />
        <method name="PlayRecord(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.Byte[])" argnames="recordType, flags, dataSize, data" returntype="System.Void" />
        <method name="GetEncoderParameterList(System.Guid)" argnames="encoder" inherited="System.Drawing.Image" returntype="System.Drawing.Imaging.EncoderParameters" />
        <method name="Save(System.String)" argnames="filename" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.String, System.Drawing.Imaging.ImageFormat)" argnames="filename, format" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.String, System.Drawing.Imaging.ImageCodecInfo, System.Drawing.Imaging.EncoderParameters)" argnames="filename, encoder, encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.IO.Stream, System.Drawing.Imaging.ImageFormat)" argnames="stream, format" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="Save(System.IO.Stream, System.Drawing.Imaging.ImageCodecInfo, System.Drawing.Imaging.EncoderParameters)" argnames="stream, encoder, encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="SaveAdd(System.Drawing.Imaging.EncoderParameters)" argnames="encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="SaveAdd(System.Drawing.Image, System.Drawing.Imaging.EncoderParameters)" argnames="image, encoderParams" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetBounds(System.Drawing.GraphicsUnit&amp;)" argnames="pageUnit" inherited="System.Drawing.Image" returntype="System.Drawing.RectangleF" />
        <method name="GetThumbnailImage(System.Int32, System.Int32, System.Drawing.Image.GetThumbnailImageAbort, System.IntPtr)" argnames="thumbWidth, thumbHeight, callback, callbackData" inherited="System.Drawing.Image" returntype="System.Drawing.Image" />
        <method name="GetFrameCount(System.Drawing.Imaging.FrameDimension)" argnames="dimension" inherited="System.Drawing.Image" returntype="System.Int32" />
        <method name="SelectActiveFrame(System.Drawing.Imaging.FrameDimension, System.Int32)" argnames="dimension, frameIndex" inherited="System.Drawing.Image" returntype="System.Int32" />
        <method name="RotateFlip(System.Drawing.RotateFlipType)" argnames="rotateFlipType" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetPropertyItem(System.Int32)" argnames="propid" inherited="System.Drawing.Image" returntype="System.Drawing.Imaging.PropertyItem" />
        <method name="RemovePropertyItem(System.Int32)" argnames="propid" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="SetPropertyItem(System.Drawing.Imaging.PropertyItem)" argnames="propitem" inherited="System.Drawing.Image" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="MetafileHeader" namespace="System.Drawing.Imaging">
        <property name="Type" propertytype="System.Drawing.Imaging.MetafileType" />
        <property name="MetafileSize" propertytype="System.Int32" />
        <property name="Version" propertytype="System.Int32" />
        <property name="EmfPlusFlags" propertytype="System.Drawing.Imaging.EmfPlusFlags" />
        <property name="DpiX" propertytype="System.Single" />
        <property name="DpiY" propertytype="System.Single" />
        <property name="Bounds" propertytype="System.Drawing.Rectangle" />
        <property name="WmfHeader" propertytype="System.Drawing.Imaging.MetaHeader" />
        <property name="EmfHeader" propertytype="System.Drawing.SafeNativeMethods+ENHMETAHEADER" />
        <property name="EmfPlusHeaderSize" propertytype="System.Int32" />
        <property name="LogicalDpiX" propertytype="System.Int32" />
        <property name="LogicalDpiY" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="IsWmf" argnames="" returntype="System.Boolean" />
        <method name="IsWmfPlaceable" argnames="" returntype="System.Boolean" />
        <method name="IsEmf" argnames="" returntype="System.Boolean" />
        <method name="IsEmfOrEmfPlus" argnames="" returntype="System.Boolean" />
        <method name="IsEmfPlus" argnames="" returntype="System.Boolean" />
        <method name="IsEmfPlusDual" argnames="" returntype="System.Boolean" />
        <method name="IsEmfPlusOnly" argnames="" returntype="System.Boolean" />
        <method name="IsDisplay" argnames="" returntype="System.Boolean" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="MetaHeader" namespace="System.Drawing.Imaging">
        <constructor name="MetaHeader" argnames="" />
        <property name="Type" propertytype="System.Int16" />
        <property name="HeaderSize" propertytype="System.Int16" />
        <property name="Version" propertytype="System.Int16" />
        <property name="Size" propertytype="System.Int32" />
        <property name="NoObjects" propertytype="System.Int16" />
        <property name="MaxRecord" propertytype="System.Int32" />
        <property name="NoParameters" propertytype="System.Int16" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PropertyItem" namespace="System.Drawing.Imaging">
        <property name="Id" propertytype="System.Int32" />
        <property name="Len" propertytype="System.Int32" />
        <property name="Type" propertytype="System.Int16" />
        <property name="Value" propertytype="System.Byte[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="WmfPlaceableFileHeader" namespace="System.Drawing.Imaging">
        <constructor name="WmfPlaceableFileHeader" argnames="" />
        <property name="Key" propertytype="System.Int32" />
        <property name="Hmf" propertytype="System.Int16" />
        <property name="BboxLeft" propertytype="System.Int16" />
        <property name="BboxTop" propertytype="System.Int16" />
        <property name="BboxRight" propertytype="System.Int16" />
        <property name="BboxBottom" propertytype="System.Int16" />
        <property name="Inch" propertytype="System.Int16" />
        <property name="Reserved" propertytype="System.Int32" />
        <property name="Checksum" propertytype="System.Int16" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="EncoderParameter" namespace="System.Drawing.Imaging">
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Byte)" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Byte, System.Boolean)" argnames="encoder, value, undefined" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int16)" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int64)" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int32, System.Int32)" argnames="encoder, numerator, demoninator" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int64, System.Int64)" argnames="encoder, rangebegin, rangeend" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int32, System.Int32, System.Int32, System.Int32)" argnames="encoder, numerator1, demoninator1, numerator2, demoninator2" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.String)" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Byte[])" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Byte[], System.Boolean)" argnames="encoder, value, undefined" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int16[])" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int64[])" argnames="encoder, value" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int32[], System.Int32[])" argnames="encoder, numerator, denominator" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int64[], System.Int64[])" argnames="encoder, rangebegin, rangeend" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int32[], System.Int32[], System.Int32[], System.Int32[])" argnames="encoder, numerator1, denominator1, numerator2, denominator2" />
        <constructor name="EncoderParameter(System.Drawing.Imaging.Encoder, System.Int32, System.Int32, System.Int32)" argnames="encoder, NumberOfValues, Type, Value" />
        <property name="Encoder" propertytype="System.Drawing.Imaging.Encoder" />
        <property name="Type" propertytype="System.Drawing.Imaging.EncoderParameterValueType" />
        <property name="ValueType" propertytype="System.Drawing.Imaging.EncoderParameterValueType" />
        <property name="NumberOfValues" propertytype="System.Int32" />
        <property name="ValuePointer" propertytype="System.IntPtr" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ImageAttributes" namespace="System.Drawing.Imaging">
        <constructor name="ImageAttributes" argnames="" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" argnames="newColorMatrix" returntype="System.Void" />
        <method name="SetColorMatrix(System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrixFlag)" argnames="newColorMatrix, flags" returntype="System.Void" />
        <method name="SetColorMatrix(System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrixFlag, System.Drawing.Imaging.ColorAdjustType)" argnames="newColorMatrix, mode, type" returntype="System.Void" />
        <method name="ClearColorMatrix" argnames="" returntype="System.Void" />
        <method name="ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetColorMatrices(System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrix)" argnames="newColorMatrix, grayMatrix" returntype="System.Void" />
        <method name="SetColorMatrices(System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrixFlag)" argnames="newColorMatrix, grayMatrix, flags" returntype="System.Void" />
        <method name="SetColorMatrices(System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrix, System.Drawing.Imaging.ColorMatrixFlag, System.Drawing.Imaging.ColorAdjustType)" argnames="newColorMatrix, grayMatrix, mode, type" returntype="System.Void" />
        <method name="SetThreshold(System.Single)" argnames="threshold" returntype="System.Void" />
        <method name="SetThreshold(System.Single, System.Drawing.Imaging.ColorAdjustType)" argnames="threshold, type" returntype="System.Void" />
        <method name="ClearThreshold" argnames="" returntype="System.Void" />
        <method name="ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetGamma(System.Single)" argnames="gamma" returntype="System.Void" />
        <method name="SetGamma(System.Single, System.Drawing.Imaging.ColorAdjustType)" argnames="gamma, type" returntype="System.Void" />
        <method name="ClearGamma" argnames="" returntype="System.Void" />
        <method name="ClearGamma(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetNoOp" argnames="" returntype="System.Void" />
        <method name="SetNoOp(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="ClearNoOp" argnames="" returntype="System.Void" />
        <method name="ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetColorKey(System.Drawing.Color, System.Drawing.Color)" argnames="colorLow, colorHigh" returntype="System.Void" />
        <method name="SetColorKey(System.Drawing.Color, System.Drawing.Color, System.Drawing.Imaging.ColorAdjustType)" argnames="colorLow, colorHigh, type" returntype="System.Void" />
        <method name="ClearColorKey" argnames="" returntype="System.Void" />
        <method name="ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" argnames="flags" returntype="System.Void" />
        <method name="SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag, System.Drawing.Imaging.ColorAdjustType)" argnames="flags, type" returntype="System.Void" />
        <method name="ClearOutputChannel" argnames="" returntype="System.Void" />
        <method name="ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetOutputChannelColorProfile(System.String)" argnames="colorProfileFilename" returntype="System.Void" />
        <method name="SetOutputChannelColorProfile(System.String, System.Drawing.Imaging.ColorAdjustType)" argnames="colorProfileFilename, type" returntype="System.Void" />
        <method name="ClearOutputChannelColorProfile" argnames="" returntype="System.Void" />
        <method name="ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetRemapTable(System.Drawing.Imaging.ColorMap[])" argnames="map" returntype="System.Void" />
        <method name="SetRemapTable(System.Drawing.Imaging.ColorMap[], System.Drawing.Imaging.ColorAdjustType)" argnames="map, type" returntype="System.Void" />
        <method name="ClearRemapTable" argnames="" returntype="System.Void" />
        <method name="ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" argnames="type" returntype="System.Void" />
        <method name="SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" argnames="map" returntype="System.Void" />
        <method name="ClearBrushRemapTable" argnames="" returntype="System.Void" />
        <method name="SetWrapMode(System.Drawing.Drawing2D.WrapMode)" argnames="mode" returntype="System.Void" />
        <method name="SetWrapMode(System.Drawing.Drawing2D.WrapMode, System.Drawing.Color)" argnames="mode, color" returntype="System.Void" />
        <method name="SetWrapMode(System.Drawing.Drawing2D.WrapMode, System.Drawing.Color, System.Boolean)" argnames="mode, color, clamp" returntype="System.Void" />
        <method name="GetAdjustedPalette(System.Drawing.Imaging.ColorPalette, System.Drawing.Imaging.ColorAdjustType)" argnames="palette, type" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <delegate name="PlayRecordCallback" namespace="System.Drawing.Imaging">
        <constructor name="PlayRecordCallback(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.IntPtr, System.AsyncCallback, System.Object)" argnames="recordType, flags, dataSize, recordData, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Drawing.Imaging.EmfPlusRecordType, System.Int32, System.Int32, System.IntPtr)" argnames="recordType, flags, dataSize, recordData" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <enum name="ColorAdjustType" namespace="System.Drawing.Imaging">
        <field name="Default" />
        <field name="Bitmap" />
        <field name="Brush" />
        <field name="Pen" />
        <field name="Text" />
        <field name="Count" />
        <field name="Any" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ColorChannelFlag" namespace="System.Drawing.Imaging">
        <field name="ColorChannelC" />
        <field name="ColorChannelM" />
        <field name="ColorChannelY" />
        <field name="ColorChannelK" />
        <field name="ColorChannelLast" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ColorMapType" namespace="System.Drawing.Imaging">
        <field name="Default" />
        <field name="Brush" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ColorMatrixFlag" namespace="System.Drawing.Imaging">
        <field name="Default" />
        <field name="SkipGrays" />
        <field name="AltGrays" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ColorMode" namespace="System.Drawing.Imaging">
        <field name="Argb32Mode" />
        <field name="Argb64Mode" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="EmfPlusRecordType" namespace="System.Drawing.Imaging">
        <field name="WmfRecordBase" />
        <field name="WmfSetBkColor" />
        <field name="WmfSetBkMode" />
        <field name="WmfSetMapMode" />
        <field name="WmfSetROP2" />
        <field name="WmfSetRelAbs" />
        <field name="WmfSetPolyFillMode" />
        <field name="WmfSetStretchBltMode" />
        <field name="WmfSetTextCharExtra" />
        <field name="WmfSetTextColor" />
        <field name="WmfSetTextJustification" />
        <field name="WmfSetWindowOrg" />
        <field name="WmfSetWindowExt" />
        <field name="WmfSetViewportOrg" />
        <field name="WmfSetViewportExt" />
        <field name="WmfOffsetWindowOrg" />
        <field name="WmfScaleWindowExt" />
        <field name="WmfOffsetViewportOrg" />
        <field name="WmfScaleViewportExt" />
        <field name="WmfLineTo" />
        <field name="WmfMoveTo" />
        <field name="WmfExcludeClipRect" />
        <field name="WmfIntersectClipRect" />
        <field name="WmfArc" />
        <field name="WmfEllipse" />
        <field name="WmfFloodFill" />
        <field name="WmfPie" />
        <field name="WmfRectangle" />
        <field name="WmfRoundRect" />
        <field name="WmfPatBlt" />
        <field name="WmfSaveDC" />
        <field name="WmfSetPixel" />
        <field name="WmfOffsetCilpRgn" />
        <field name="WmfTextOut" />
        <field name="WmfBitBlt" />
        <field name="WmfStretchBlt" />
        <field name="WmfPolygon" />
        <field name="WmfPolyline" />
        <field name="WmfEscape" />
        <field name="WmfRestoreDC" />
        <field name="WmfFillRegion" />
        <field name="WmfFrameRegion" />
        <field name="WmfInvertRegion" />
        <field name="WmfPaintRegion" />
        <field name="WmfSelectClipRegion" />
        <field name="WmfSelectObject" />
        <field name="WmfSetTextAlign" />
        <field name="WmfChord" />
        <field name="WmfSetMapperFlags" />
        <field name="WmfExtTextOut" />
        <field name="WmfSetDibToDev" />
        <field name="WmfSelectPalette" />
        <field name="WmfRealizePalette" />
        <field name="WmfAnimatePalette" />
        <field name="WmfSetPalEntries" />
        <field name="WmfPolyPolygon" />
        <field name="WmfResizePalette" />
        <field name="WmfDibBitBlt" />
        <field name="WmfDibStretchBlt" />
        <field name="WmfDibCreatePatternBrush" />
        <field name="WmfStretchDib" />
        <field name="WmfExtFloodFill" />
        <field name="WmfSetLayout" />
        <field name="WmfDeleteObject" />
        <field name="WmfCreatePalette" />
        <field name="WmfCreatePatternBrush" />
        <field name="WmfCreatePenIndirect" />
        <field name="WmfCreateFontIndirect" />
        <field name="WmfCreateBrushIndirect" />
        <field name="WmfCreateRegion" />
        <field name="EmfHeader" />
        <field name="EmfPolyBezier" />
        <field name="EmfPolygon" />
        <field name="EmfPolyline" />
        <field name="EmfPolyBezierTo" />
        <field name="EmfPolyLineTo" />
        <field name="EmfPolyPolyline" />
        <field name="EmfPolyPolygon" />
        <field name="EmfSetWindowExtEx" />
        <field name="EmfSetWindowOrgEx" />
        <field name="EmfSetViewportExtEx" />
        <field name="EmfSetViewportOrgEx" />
        <field name="EmfSetBrushOrgEx" />
        <field name="EmfEof" />
        <field name="EmfSetPixelV" />
        <field name="EmfSetMapperFlags" />
        <field name="EmfSetMapMode" />
        <field name="EmfSetBkMode" />
        <field name="EmfSetPolyFillMode" />
        <field name="EmfSetROP2" />
        <field name="EmfSetStretchBltMode" />
        <field name="EmfSetTextAlign" />
        <field name="EmfSetColorAdjustment" />
        <field name="EmfSetTextColor" />
        <field name="EmfSetBkColor" />
        <field name="EmfOffsetClipRgn" />
        <field name="EmfMoveToEx" />
        <field name="EmfSetMetaRgn" />
        <field name="EmfExcludeClipRect" />
        <field name="EmfIntersectClipRect" />
        <field name="EmfScaleViewportExtEx" />
        <field name="EmfScaleWindowExtEx" />
        <field name="EmfSaveDC" />
        <field name="EmfRestoreDC" />
        <field name="EmfSetWorldTransform" />
        <field name="EmfModifyWorldTransform" />
        <field name="EmfSelectObject" />
        <field name="EmfCreatePen" />
        <field name="EmfCreateBrushIndirect" />
        <field name="EmfDeleteObject" />
        <field name="EmfAngleArc" />
        <field name="EmfEllipse" />
        <field name="EmfRectangle" />
        <field name="EmfRoundRect" />
        <field name="EmfRoundArc" />
        <field name="EmfChord" />
        <field name="EmfPie" />
        <field name="EmfSelectPalette" />
        <field name="EmfCreatePalette" />
        <field name="EmfSetPaletteEntries" />
        <field name="EmfResizePalette" />
        <field name="EmfRealizePalette" />
        <field name="EmfExtFloodFill" />
        <field name="EmfLineTo" />
        <field name="EmfArcTo" />
        <field name="EmfPolyDraw" />
        <field name="EmfSetArcDirection" />
        <field name="EmfSetMiterLimit" />
        <field name="EmfBeginPath" />
        <field name="EmfEndPath" />
        <field name="EmfCloseFigure" />
        <field name="EmfFillPath" />
        <field name="EmfStrokeAndFillPath" />
        <field name="EmfStrokePath" />
        <field name="EmfFlattenPath" />
        <field name="EmfWidenPath" />
        <field name="EmfSelectClipPath" />
        <field name="EmfAbortPath" />
        <field name="EmfReserved069" />
        <field name="EmfGdiComment" />
        <field name="EmfFillRgn" />
        <field name="EmfFrameRgn" />
        <field name="EmfInvertRgn" />
        <field name="EmfPaintRgn" />
        <field name="EmfExtSelectClipRgn" />
        <field name="EmfBitBlt" />
        <field name="EmfStretchBlt" />
        <field name="EmfMaskBlt" />
        <field name="EmfPlgBlt" />
        <field name="EmfSetDIBitsToDevice" />
        <field name="EmfStretchDIBits" />
        <field name="EmfExtCreateFontIndirect" />
        <field name="EmfExtTextOutA" />
        <field name="EmfExtTextOutW" />
        <field name="EmfPolyBezier16" />
        <field name="EmfPolygon16" />
        <field name="EmfPolyline16" />
        <field name="EmfPolyBezierTo16" />
        <field name="EmfPolylineTo16" />
        <field name="EmfPolyPolyline16" />
        <field name="EmfPolyPolygon16" />
        <field name="EmfPolyDraw16" />
        <field name="EmfCreateMonoBrush" />
        <field name="EmfCreateDibPatternBrushPt" />
        <field name="EmfExtCreatePen" />
        <field name="EmfPolyTextOutA" />
        <field name="EmfPolyTextOutW" />
        <field name="EmfSetIcmMode" />
        <field name="EmfCreateColorSpace" />
        <field name="EmfSetColorSpace" />
        <field name="EmfDeleteColorSpace" />
        <field name="EmfGlsRecord" />
        <field name="EmfGlsBoundedRecord" />
        <field name="EmfPixelFormat" />
        <field name="EmfDrawEscape" />
        <field name="EmfExtEscape" />
        <field name="EmfStartDoc" />
        <field name="EmfSmallTextOut" />
        <field name="EmfForceUfiMapping" />
        <field name="EmfNamedEscpae" />
        <field name="EmfColorCorrectPalette" />
        <field name="EmfSetIcmProfileA" />
        <field name="EmfSetIcmProfileW" />
        <field name="EmfAlphaBlend" />
        <field name="EmfSetLayout" />
        <field name="EmfTransparentBlt" />
        <field name="EmfReserved117" />
        <field name="EmfGradientFill" />
        <field name="EmfSetLinkedUfis" />
        <field name="EmfSetTextJustification" />
        <field name="EmfColorMatchToTargetW" />
        <field name="EmfCreateColorSpaceW" />
        <field name="EmfMax" />
        <field name="EmfMin" />
        <field name="EmfPlusRecordBase" />
        <field name="Invalid" />
        <field name="Header" />
        <field name="EndOfFile" />
        <field name="Comment" />
        <field name="GetDC" />
        <field name="MultiFormatStart" />
        <field name="MultiFormatSection" />
        <field name="MultiFormatEnd" />
        <field name="Object" />
        <field name="Clear" />
        <field name="FillRects" />
        <field name="DrawRects" />
        <field name="FillPolygon" />
        <field name="DrawLines" />
        <field name="FillEllipse" />
        <field name="DrawEllipse" />
        <field name="FillPie" />
        <field name="DrawPie" />
        <field name="DrawArc" />
        <field name="FillRegion" />
        <field name="FillPath" />
        <field name="DrawPath" />
        <field name="FillClosedCurve" />
        <field name="DrawClosedCurve" />
        <field name="DrawCurve" />
        <field name="DrawBeziers" />
        <field name="DrawImage" />
        <field name="DrawImagePoints" />
        <field name="DrawString" />
        <field name="SetRenderingOrigin" />
        <field name="SetAntiAliasMode" />
        <field name="SetTextRenderingHint" />
        <field name="SetTextContrast" />
        <field name="SetInterpolationMode" />
        <field name="SetPixelOffsetMode" />
        <field name="SetCompositingMode" />
        <field name="SetCompositingQuality" />
        <field name="Save" />
        <field name="Restore" />
        <field name="BeginContainer" />
        <field name="BeginContainerNoParams" />
        <field name="EndContainer" />
        <field name="SetWorldTransform" />
        <field name="ResetWorldTransform" />
        <field name="MultiplyWorldTransform" />
        <field name="TranslateWorldTransform" />
        <field name="ScaleWorldTransform" />
        <field name="RotateWorldTransform" />
        <field name="SetPageTransform" />
        <field name="ResetClip" />
        <field name="SetClipRect" />
        <field name="SetClipPath" />
        <field name="SetClipRegion" />
        <field name="OffsetClip" />
        <field name="DrawDriverString" />
        <field name="Total" />
        <field name="Max" />
        <field name="Min" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="EmfType" namespace="System.Drawing.Imaging">
        <field name="EmfOnly" />
        <field name="EmfPlusOnly" />
        <field name="EmfPlusDual" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="EncoderParameterValueType" namespace="System.Drawing.Imaging">
        <field name="ValueTypeByte" />
        <field name="ValueTypeAscii" />
        <field name="ValueTypeShort" />
        <field name="ValueTypeLong" />
        <field name="ValueTypeRational" />
        <field name="ValueTypeLongRange" />
        <field name="ValueTypeUndefined" />
        <field name="ValueTypeRationalRange" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="EncoderValue" namespace="System.Drawing.Imaging">
        <field name="ColorTypeCMYK" />
        <field name="ColorTypeYCCK" />
        <field name="CompressionLZW" />
        <field name="CompressionCCITT3" />
        <field name="CompressionCCITT4" />
        <field name="CompressionRle" />
        <field name="CompressionNone" />
        <field name="ScanMethodInterlaced" />
        <field name="ScanMethodNonInterlaced" />
        <field name="VersionGif87" />
        <field name="VersionGif89" />
        <field name="RenderProgressive" />
        <field name="RenderNonProgressive" />
        <field name="TransformRotate90" />
        <field name="TransformRotate180" />
        <field name="TransformRotate270" />
        <field name="TransformFlipHorizontal" />
        <field name="TransformFlipVertical" />
        <field name="MultiFrame" />
        <field name="LastFrame" />
        <field name="Flush" />
        <field name="FrameDimensionTime" />
        <field name="FrameDimensionResolution" />
        <field name="FrameDimensionPage" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ImageCodecFlags" namespace="System.Drawing.Imaging">
        <field name="Encoder" />
        <field name="Decoder" />
        <field name="SupportBitmap" />
        <field name="SupportVector" />
        <field name="SeekableEncode" />
        <field name="BlockingDecode" />
        <field name="Builtin" />
        <field name="System" />
        <field name="User" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ImageFlags" namespace="System.Drawing.Imaging">
        <field name="None" />
        <field name="Scalable" />
        <field name="HasAlpha" />
        <field name="HasTranslucent" />
        <field name="PartiallyScalable" />
        <field name="ColorSpaceRgb" />
        <field name="ColorSpaceCmyk" />
        <field name="ColorSpaceGray" />
        <field name="ColorSpaceYcbcr" />
        <field name="ColorSpaceYcck" />
        <field name="HasRealDpi" />
        <field name="HasRealPixelSize" />
        <field name="ReadOnly" />
        <field name="Caching" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="ImageLockMode" namespace="System.Drawing.Imaging">
        <field name="ReadOnly" />
        <field name="WriteOnly" />
        <field name="ReadWrite" />
        <field name="UserInputBuffer" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="MetafileFrameUnit" namespace="System.Drawing.Imaging">
        <field name="Pixel" />
        <field name="Point" />
        <field name="Inch" />
        <field name="Document" />
        <field name="Millimeter" />
        <field name="GdiCompatible" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="MetafileType" namespace="System.Drawing.Imaging">
        <field name="Invalid" />
        <field name="Wmf" />
        <field name="WmfPlaceable" />
        <field name="Emf" />
        <field name="EmfPlusOnly" />
        <field name="EmfPlusDual" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PaletteFlags" namespace="System.Drawing.Imaging">
        <field name="HasAlpha" />
        <field name="GrayScale" />
        <field name="Halftone" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PixelFormat" namespace="System.Drawing.Imaging">
        <field name="Indexed" />
        <field name="Gdi" />
        <field name="Alpha" />
        <field name="PAlpha" />
        <field name="Extended" />
        <field name="Canonical" />
        <field name="Undefined" />
        <field name="DontCare" />
        <field name="Format1bppIndexed" />
        <field name="Format4bppIndexed" />
        <field name="Format8bppIndexed" />
        <field name="Format16bppGrayScale" />
        <field name="Format16bppRgb555" />
        <field name="Format16bppRgb565" />
        <field name="Format16bppArgb1555" />
        <field name="Format24bppRgb" />
        <field name="Format32bppRgb" />
        <field name="Format32bppArgb" />
        <field name="Format32bppPArgb" />
        <field name="Format48bppRgb" />
        <field name="Format64bppArgb" />
        <field name="Format64bppPArgb" />
        <field name="Max" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <class name="FontCollection" namespace="System.Drawing.Text">
        <property name="Families" propertytype="System.Drawing.FontFamily[]" />
        <method name="Dispose" argnames="" returntype="System.Void" />
        <method name="Dispose(System.Boolean)" argnames="disposing" returntype="System.Void" />
        <method name="Finalize" argnames="" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="InstalledFontCollection" namespace="System.Drawing.Text">
        <constructor name="InstalledFontCollection" argnames="" />
        <property name="Families" inherited="System.Drawing.Text.FontCollection" propertytype="System.Drawing.FontFamily[]" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Text.FontCollection" returntype="System.Void" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.Drawing.Text.FontCollection" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Text.FontCollection" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrivateFontCollection" namespace="System.Drawing.Text">
        <constructor name="PrivateFontCollection" argnames="" />
        <property name="Families" inherited="System.Drawing.Text.FontCollection" propertytype="System.Drawing.FontFamily[]" />
        <method name="Dispose" argnames="" inherited="System.Drawing.Text.FontCollection" returntype="System.Void" />
        <method name="Dispose(System.Boolean)" argnames="disposing" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Drawing.Text.FontCollection" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="AddFontFile(System.String)" argnames="filename" returntype="System.Void" />
        <method name="AddMemoryFont(System.IntPtr, System.Int32)" argnames="memory, length" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <enum name="GenericFontFamilies" namespace="System.Drawing.Text">
        <field name="Serif" />
        <field name="SansSerif" />
        <field name="Monospace" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="HotkeyPrefix" namespace="System.Drawing.Text">
        <field name="None" />
        <field name="Show" />
        <field name="Hide" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="TextRenderingHint" namespace="System.Drawing.Text">
        <field name="SystemDefault" />
        <field name="SingleBitPerPixelGridFit" />
        <field name="SingleBitPerPixel" />
        <field name="AntiAliasGridFit" />
        <field name="AntiAlias" />
        <field name="ClearTypeGridFit" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <class name="STATSTG" namespace="System.Drawing.Internal">
        <constructor name="STATSTG" argnames="" />
        <field name="pwcsName" />
        <field name="type" />
        <field name="cbSize" />
        <field name="mtime" />
        <field name="ctime" />
        <field name="atime" />
        <field name="grfMode" />
        <field name="grfLocksSupported" />
        <field name="clsid_data1" />
        <field name="clsid_data2" />
        <field name="clsid_data3" />
        <field name="clsid_b0" />
        <field name="clsid_b1" />
        <field name="clsid_b2" />
        <field name="clsid_b3" />
        <field name="clsid_b4" />
        <field name="clsid_b5" />
        <field name="clsid_b6" />
        <field name="clsid_b7" />
        <field name="grfStateBits" />
        <field name="reserved" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="CategoryNameCollection" namespace="System.Drawing.Design">
        <constructor name="CategoryNameCollection(System.Drawing.Design.CategoryNameCollection)" argnames="value" />
        <constructor name="CategoryNameCollection(System.String[])" argnames="value" />
        <property name="Item" propertytype="System.String" />
        <property name="InnerList" inherited="System.Collections.ReadOnlyCollectionBase" propertytype="System.Collections.ArrayList" />
        <property name="Count" inherited="System.Collections.ReadOnlyCollectionBase" propertytype="System.Int32" />
        <method name="GetEnumerator" argnames="" inherited="System.Collections.ReadOnlyCollectionBase" returntype="System.Collections.IEnumerator" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="Contains(System.String)" argnames="value" returntype="System.Boolean" />
        <method name="CopyTo(System.String[], System.Int32)" argnames="array, index" returntype="System.Void" />
        <method name="IndexOf(System.String)" argnames="value" returntype="System.Int32" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PaintValueEventArgs" namespace="System.Drawing.Design">
        <constructor name="PaintValueEventArgs(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Drawing.Graphics, System.Drawing.Rectangle)" argnames="context, value, graphics, bounds" />
        <property name="Bounds" propertytype="System.Drawing.Rectangle" />
        <property name="Context" propertytype="System.ComponentModel.ITypeDescriptorContext" />
        <property name="Graphics" propertytype="System.Drawing.Graphics" />
        <property name="Value" propertytype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PropertyValueUIItem" namespace="System.Drawing.Design">
        <constructor name="PropertyValueUIItem(System.Drawing.Image, System.Drawing.Design.PropertyValueUIItemInvokeHandler, System.String)" argnames="uiItemImage, handler, tooltip" />
        <property name="Image" propertytype="System.Drawing.Image" />
        <property name="InvokeHandler" propertytype="System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
        <property name="ToolTip" propertytype="System.String" />
        <method name="Reset" argnames="" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ToolboxComponentsCreatedEventArgs" namespace="System.Drawing.Design">
        <constructor name="ToolboxComponentsCreatedEventArgs(System.ComponentModel.IComponent[])" argnames="components" />
        <property name="Components" propertytype="System.ComponentModel.IComponent[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ToolboxComponentsCreatingEventArgs" namespace="System.Drawing.Design">
        <constructor name="ToolboxComponentsCreatingEventArgs(System.ComponentModel.Design.IDesignerHost)" argnames="host" />
        <property name="DesignerHost" propertytype="System.ComponentModel.Design.IDesignerHost" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="ToolboxItem" namespace="System.Drawing.Design">
        <constructor name="ToolboxItem" argnames="" />
        <constructor name="ToolboxItem(System.Type)" argnames="toolType" />
        <property name="AssemblyName" propertytype="System.Reflection.AssemblyName" />
        <property name="Bitmap" propertytype="System.Drawing.Bitmap" />
        <property name="DisplayName" propertytype="System.String" />
        <property name="Filter" propertytype="System.Collections.ICollection" />
        <property name="Locked" propertytype="System.Boolean" />
        <property name="TypeName" propertytype="System.String" />
        <method name="Serialize(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" returntype="System.Void" />
        <method name="OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)" argnames="args" returntype="System.Void" />
        <method name="OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)" argnames="args" returntype="System.Void" />
        <method name="Initialize(System.Type)" argnames="type" returntype="System.Void" />
        <method name="GetType(System.ComponentModel.Design.IDesignerHost, System.Reflection.AssemblyName, System.String, System.Boolean)" argnames="host, assemblyName, typeName, reference" returntype="System.Type" />
        <method name="Deserialize(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" returntype="System.Void" />
        <method name="CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" argnames="host" returntype="System.ComponentModel.IComponent[]" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="CheckUnlocked" argnames="" returntype="System.Void" />
        <method name="CreateComponents" argnames="" returntype="System.ComponentModel.IComponent[]" />
        <method name="CreateComponents(System.ComponentModel.Design.IDesignerHost)" argnames="host" returntype="System.ComponentModel.IComponent[]" />
        <method name="Lock" argnames="" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <event name="ComponentsCreated" />
        <event name="ComponentsCreating" />
    </class>
    <class name="ToolboxItemCollection" namespace="System.Drawing.Design">
        <constructor name="ToolboxItemCollection(System.Drawing.Design.ToolboxItemCollection)" argnames="value" />
        <constructor name="ToolboxItemCollection(System.Drawing.Design.ToolboxItem[])" argnames="value" />
        <property name="Item" propertytype="System.Drawing.Design.ToolboxItem" />
        <property name="InnerList" inherited="System.Collections.ReadOnlyCollectionBase" propertytype="System.Collections.ArrayList" />
        <property name="Count" inherited="System.Collections.ReadOnlyCollectionBase" propertytype="System.Int32" />
        <method name="GetEnumerator" argnames="" inherited="System.Collections.ReadOnlyCollectionBase" returntype="System.Collections.IEnumerator" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="Contains(System.Drawing.Design.ToolboxItem)" argnames="value" returntype="System.Boolean" />
        <method name="CopyTo(System.Drawing.Design.ToolboxItem[], System.Int32)" argnames="array, index" returntype="System.Void" />
        <method name="IndexOf(System.Drawing.Design.ToolboxItem)" argnames="value" returntype="System.Int32" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="UITypeEditor" namespace="System.Drawing.Design">
        <constructor name="UITypeEditor" argnames="" />
        <method name="PaintValue(System.Drawing.Design.PaintValueEventArgs)" argnames="e" returntype="System.Void" />
        <method name="GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Drawing.Design.UITypeEditorEditStyle" />
        <method name="GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="EditValue(System.ComponentModel.ITypeDescriptorContext, System.IServiceProvider, System.Object)" argnames="context, provider, value" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="EditValue(System.IServiceProvider, System.Object)" argnames="provider, value" returntype="System.Object" />
        <method name="GetEditStyle" argnames="" returntype="System.Drawing.Design.UITypeEditorEditStyle" />
        <method name="GetPaintValueSupported" argnames="" returntype="System.Boolean" />
        <method name="PaintValue(System.Object, System.Drawing.Graphics, System.Drawing.Rectangle)" argnames="value, canvas, rectangle" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <interface name="IPropertyValueUIService" namespace="System.Drawing.Design">
        <method name="RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" argnames="newHandler" returntype="System.Void" />
        <method name="NotifyPropertyValueUIItemsChanged" argnames="" returntype="System.Void" />
        <method name="GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext, System.ComponentModel.PropertyDescriptor)" argnames="context, propDesc" returntype="System.Drawing.Design.PropertyValueUIItem[]" />
        <method name="AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" argnames="newHandler" returntype="System.Void" />
        <event name="PropertyUIValueItemsChanged" />
    </interface>
    <interface name="IToolboxService" namespace="System.Drawing.Design">
        <property name="CategoryNames" propertytype="System.Drawing.Design.CategoryNameCollection" />
        <property name="SelectedCategory" propertytype="System.String" />
        <method name="SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)" argnames="toolboxItem" returntype="System.Void" />
        <method name="SetCursor" argnames="" returntype="System.Boolean" />
        <method name="SerializeToolboxItem(System.Drawing.Design.ToolboxItem)" argnames="toolboxItem" returntype="System.Object" />
        <method name="SelectedToolboxItemUsed" argnames="" returntype="System.Void" />
        <method name="RemoveToolboxItem(System.Drawing.Design.ToolboxItem, System.String)" argnames="toolboxItem, category" returntype="System.Void" />
        <method name="RemoveToolboxItem(System.Drawing.Design.ToolboxItem)" argnames="toolboxItem" returntype="System.Void" />
        <method name="RemoveCreator(System.String, System.ComponentModel.Design.IDesignerHost)" argnames="format, host" returntype="System.Void" />
        <method name="RemoveCreator(System.String)" argnames="format" returntype="System.Void" />
        <method name="Refresh" argnames="" returntype="System.Void" />
        <method name="IsToolboxItem(System.Object, System.ComponentModel.Design.IDesignerHost)" argnames="serializedObject, host" returntype="System.Boolean" />
        <method name="IsToolboxItem(System.Object)" argnames="serializedObject" returntype="System.Boolean" />
        <method name="IsSupported(System.Object, System.Collections.ICollection)" argnames="serializedObject, filterAttributes" returntype="System.Boolean" />
        <method name="IsSupported(System.Object, System.ComponentModel.Design.IDesignerHost)" argnames="serializedObject, host" returntype="System.Boolean" />
        <method name="GetToolboxItems(System.String, System.ComponentModel.Design.IDesignerHost)" argnames="category, host" returntype="System.Drawing.Design.ToolboxItemCollection" />
        <method name="GetToolboxItems(System.String)" argnames="category" returntype="System.Drawing.Design.ToolboxItemCollection" />
        <method name="GetToolboxItems(System.ComponentModel.Design.IDesignerHost)" argnames="host" returntype="System.Drawing.Design.ToolboxItemCollection" />
        <method name="GetToolboxItems" argnames="" returntype="System.Drawing.Design.ToolboxItemCollection" />
        <method name="GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)" argnames="host" returntype="System.Drawing.Design.ToolboxItem" />
        <method name="GetSelectedToolboxItem" argnames="" returntype="System.Drawing.Design.ToolboxItem" />
        <method name="DeserializeToolboxItem(System.Object, System.ComponentModel.Design.IDesignerHost)" argnames="serializedObject, host" returntype="System.Drawing.Design.ToolboxItem" />
        <method name="DeserializeToolboxItem(System.Object)" argnames="serializedObject" returntype="System.Drawing.Design.ToolboxItem" />
        <method name="AddToolboxItem(System.Drawing.Design.ToolboxItem, System.String)" argnames="toolboxItem, category" returntype="System.Void" />
        <method name="AddToolboxItem(System.Drawing.Design.ToolboxItem)" argnames="toolboxItem" returntype="System.Void" />
        <method name="AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem, System.String, System.ComponentModel.Design.IDesignerHost)" argnames="toolboxItem, category, host" returntype="System.Void" />
        <method name="AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem, System.ComponentModel.Design.IDesignerHost)" argnames="toolboxItem, host" returntype="System.Void" />
        <method name="AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback, System.String, System.ComponentModel.Design.IDesignerHost)" argnames="creator, format, host" returntype="System.Void" />
        <method name="AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback, System.String)" argnames="creator, format" returntype="System.Void" />
    </interface>
    <interface name="IToolboxUser" namespace="System.Drawing.Design">
        <method name="ToolPicked(System.Drawing.Design.ToolboxItem)" argnames="tool" returntype="System.Void" />
        <method name="GetToolSupported(System.Drawing.Design.ToolboxItem)" argnames="tool" returntype="System.Boolean" />
    </interface>
    <delegate name="PropertyValueUIHandler" namespace="System.Drawing.Design">
        <constructor name="PropertyValueUIHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.ComponentModel.ITypeDescriptorContext, System.ComponentModel.PropertyDescriptor, System.Collections.ArrayList, System.AsyncCallback, System.Object)" argnames="context, propDesc, valueUIItemList, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.ComponentModel.ITypeDescriptorContext, System.ComponentModel.PropertyDescriptor, System.Collections.ArrayList)" argnames="context, propDesc, valueUIItemList" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="PropertyValueUIItemInvokeHandler" namespace="System.Drawing.Design">
        <constructor name="PropertyValueUIItemInvokeHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.ComponentModel.ITypeDescriptorContext, System.ComponentModel.PropertyDescriptor, System.Drawing.Design.PropertyValueUIItem, System.AsyncCallback, System.Object)" argnames="context, descriptor, invokedItem, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.ComponentModel.ITypeDescriptorContext, System.ComponentModel.PropertyDescriptor, System.Drawing.Design.PropertyValueUIItem)" argnames="context, descriptor, invokedItem" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="ToolboxComponentsCreatedEventHandler" namespace="System.Drawing.Design">
        <constructor name="ToolboxComponentsCreatedEventHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.Object, System.Drawing.Design.ToolboxComponentsCreatedEventArgs, System.AsyncCallback, System.Object)" argnames="sender, e, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Object, System.Drawing.Design.ToolboxComponentsCreatedEventArgs)" argnames="sender, e" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="ToolboxComponentsCreatingEventHandler" namespace="System.Drawing.Design">
        <constructor name="ToolboxComponentsCreatingEventHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.Object, System.Drawing.Design.ToolboxComponentsCreatingEventArgs, System.AsyncCallback, System.Object)" argnames="sender, e, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Object, System.Drawing.Design.ToolboxComponentsCreatingEventArgs)" argnames="sender, e" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="ToolboxItemCreatorCallback" namespace="System.Drawing.Design">
        <constructor name="ToolboxItemCreatorCallback(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Drawing.Design.ToolboxItem" />
        <method name="BeginInvoke(System.Object, System.String, System.AsyncCallback, System.Object)" argnames="serializedObject, format, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Object, System.String)" argnames="serializedObject, format" returntype="System.Drawing.Design.ToolboxItem" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <enum name="UITypeEditorEditStyle" namespace="System.Drawing.Design">
        <field name="None" />
        <field name="Modal" />
        <field name="DropDown" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <class name="PrintController" namespace="System.Drawing.Printing">
        <constructor name="PrintController" argnames="" />
        <method name="OnEndPrint(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="OnEndPage(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintPageEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="OnStartPage(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintPageEventArgs)" argnames="document, e" returntype="System.Drawing.Graphics" />
        <method name="OnStartPrint(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="StandardPrintController" namespace="System.Drawing.Printing">
        <constructor name="StandardPrintController" argnames="" />
        <method name="OnEndPrint(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="OnEndPage(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintPageEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="OnStartPage(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintPageEventArgs)" argnames="document, e" returntype="System.Drawing.Graphics" />
        <method name="OnStartPrint(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="InvalidPrinterException" namespace="System.Drawing.Printing">
        <constructor name="InvalidPrinterException(System.Drawing.Printing.PrinterSettings)" argnames="settings" />
        <constructor name="InvalidPrinterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" />
        <property name="Message" inherited="System.Exception" propertytype="System.String" />
        <property name="InnerException" inherited="System.Exception" propertytype="System.Exception" />
        <property name="TargetSite" inherited="System.Exception" propertytype="System.Reflection.MethodBase" />
        <property name="StackTrace" inherited="System.Exception" propertytype="System.String" />
        <property name="HelpLink" inherited="System.Exception" propertytype="System.String" />
        <property name="Source" inherited="System.Exception" propertytype="System.String" />
        <property name="HResult" inherited="System.Exception" propertytype="System.Int32" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" returntype="System.Void" />
        <method name="GetBaseException" argnames="" inherited="System.Exception" returntype="System.Exception" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Exception" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="Margins" namespace="System.Drawing.Printing">
        <constructor name="Margins" argnames="" />
        <constructor name="Margins(System.Int32, System.Int32, System.Int32, System.Int32)" argnames="left, right, top, bottom" />
        <property name="Left" propertytype="System.Int32" />
        <property name="Right" propertytype="System.Int32" />
        <property name="Top" propertytype="System.Int32" />
        <property name="Bottom" propertytype="System.Int32" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="MarginsConverter" namespace="System.Drawing.Printing">
        <constructor name="MarginsConverter" argnames="" />
        <method name="IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.TypeConverter+StandardValuesCollection" />
        <method name="GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" inherited="System.ComponentModel.ExpandableObjectConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])" argnames="context, value, attributes" inherited="System.ComponentModel.ExpandableObjectConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" argnames="context" returntype="System.Boolean" />
        <method name="CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)" argnames="context, propertyValues" returntype="System.Object" />
        <method name="ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)" argnames="context, culture, value, destinationType" returntype="System.Object" />
        <method name="ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" returntype="System.Object" />
        <method name="CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, destinationType" returntype="System.Boolean" />
        <method name="CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)" argnames="context, sourceType" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="CanConvertFrom(System.Type)" argnames="sourceType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="CanConvertTo(System.Type)" argnames="destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="ConvertFrom(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.String)" argnames="text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)" argnames="context, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)" argnames="context, culture, text" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertTo(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="ConvertToInvariantString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)" argnames="context, culture, value" inherited="System.ComponentModel.TypeConverter" returntype="System.String" />
        <method name="CreateInstance(System.Collections.IDictionary)" argnames="propertyValues" inherited="System.ComponentModel.TypeConverter" returntype="System.Object" />
        <method name="GetConvertFromException(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetConvertToException(System.Object, System.Type)" argnames="value, destinationType" inherited="System.ComponentModel.TypeConverter" returntype="System.Exception" />
        <method name="GetCreateInstanceSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetProperties(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)" argnames="context, value" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetPropertiesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValues" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Collections.ICollection" />
        <method name="GetStandardValuesExclusive" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="GetStandardValuesSupported" argnames="" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="IsValid(System.Object)" argnames="value" inherited="System.ComponentModel.TypeConverter" returntype="System.Boolean" />
        <method name="SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])" argnames="props, names" inherited="System.ComponentModel.TypeConverter" returntype="System.ComponentModel.PropertyDescriptorCollection" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PageSettings" namespace="System.Drawing.Printing">
        <constructor name="PageSettings" argnames="" />
        <constructor name="PageSettings(System.Drawing.Printing.PrinterSettings)" argnames="printerSettings" />
        <property name="Bounds" propertytype="System.Drawing.Rectangle" />
        <property name="Color" propertytype="System.Boolean" />
        <property name="Landscape" propertytype="System.Boolean" />
        <property name="Margins" propertytype="System.Drawing.Printing.Margins" />
        <property name="PaperSize" propertytype="System.Drawing.Printing.PaperSize" />
        <property name="PaperSource" propertytype="System.Drawing.Printing.PaperSource" />
        <property name="PrinterResolution" propertytype="System.Drawing.Printing.PrinterResolution" />
        <property name="PrinterSettings" propertytype="System.Drawing.Printing.PrinterSettings" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="CopyToHdevmode(System.IntPtr)" argnames="hdevmode" returntype="System.Void" />
        <method name="SetHdevmode(System.IntPtr)" argnames="hdevmode" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PaperSize" namespace="System.Drawing.Printing">
        <constructor name="PaperSize(System.String, System.Int32, System.Int32)" argnames="name, width, height" />
        <property name="Height" propertytype="System.Int32" />
        <property name="Kind" propertytype="System.Drawing.Printing.PaperKind" />
        <property name="PaperName" propertytype="System.String" />
        <property name="RawKind" propertytype="System.Drawing.Printing.PaperKind" />
        <property name="Width" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PaperSource" namespace="System.Drawing.Printing">
        <property name="Kind" propertytype="System.Drawing.Printing.PaperSourceKind" />
        <property name="RawKind" propertytype="System.Drawing.Printing.PaperSourceKind" />
        <property name="SourceName" propertytype="System.String" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PreviewPageInfo" namespace="System.Drawing.Printing">
        <constructor name="PreviewPageInfo(System.Drawing.Image, System.Drawing.Size)" argnames="image, physicalSize" />
        <property name="Image" propertytype="System.Drawing.Image" />
        <property name="PhysicalSize" propertytype="System.Drawing.Size" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PreviewPrintController" namespace="System.Drawing.Printing">
        <constructor name="PreviewPrintController" argnames="" />
        <property name="UseAntiAlias" propertytype="System.Boolean" />
        <method name="OnEndPrint(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="OnEndPage(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintPageEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="OnStartPage(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintPageEventArgs)" argnames="document, e" returntype="System.Drawing.Graphics" />
        <method name="OnStartPrint(System.Drawing.Printing.PrintDocument, System.Drawing.Printing.PrintEventArgs)" argnames="document, e" returntype="System.Void" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetPreviewPageInfo" argnames="" returntype="System.Drawing.Printing.PreviewPageInfo[]" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrintDocument" namespace="System.Drawing.Printing">
        <constructor name="PrintDocument" argnames="" />
        <property name="DefaultPageSettings" propertytype="System.Drawing.Printing.PageSettings" />
        <property name="DocumentName" propertytype="System.String" />
        <property name="PrintController" propertytype="System.Drawing.Printing.PrintController" />
        <property name="PrinterSettings" propertytype="System.Drawing.Printing.PrinterSettings" />
        <property name="Events" inherited="System.ComponentModel.Component" propertytype="System.ComponentModel.EventHandlerList" />
        <property name="Site" inherited="System.ComponentModel.Component" propertytype="System.ComponentModel.ISite" />
        <property name="Container" inherited="System.ComponentModel.Component" propertytype="System.ComponentModel.IContainer" />
        <property name="DesignMode" inherited="System.ComponentModel.Component" propertytype="System.Boolean" />
        <method name="OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" argnames="e" returntype="System.Void" />
        <method name="OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" argnames="e" returntype="System.Void" />
        <method name="OnEndPrint(System.Drawing.Printing.PrintEventArgs)" argnames="e" returntype="System.Void" />
        <method name="OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" argnames="e" returntype="System.Void" />
        <method name="Dispose" argnames="" inherited="System.ComponentModel.Component" returntype="System.Void" />
        <method name="GetService(System.Type)" argnames="service" inherited="System.ComponentModel.Component" returntype="System.Object" />
        <method name="Dispose(System.Boolean)" argnames="disposing" inherited="System.ComponentModel.Component" returntype="System.Void" />
        <method name="CreateObjRef(System.Type)" argnames="requestedType" inherited="System.MarshalByRefObject" returntype="System.Runtime.Remoting.ObjRef" />
        <method name="InitializeLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="GetLifetimeService" argnames="" inherited="System.MarshalByRefObject" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.ComponentModel.Component" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="Print" argnames="" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        <event name="BeginPrint" />
        <event name="EndPrint" />
        <event name="PrintPage" />
        <event name="QueryPageSettings" />
        <event name="Disposed" inherited="System.ComponentModel.Component" />
    </class>
    <class name="PrinterResolution" namespace="System.Drawing.Printing">
        <property name="Kind" propertytype="System.Drawing.Printing.PrinterResolutionKind" />
        <property name="X" propertytype="System.Int32" />
        <property name="Y" propertytype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrinterSettings" namespace="System.Drawing.Printing">
        <class name="PaperSizeCollection" namespace="System.Drawing.Printing">
            <constructor name="PaperSizeCollection(System.Drawing.Printing.PaperSize[])" argnames="array" />
            <property name="Count" propertytype="System.Int32" />
            <property name="Item" propertytype="System.Drawing.Printing.PaperSize" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </class>
        <class name="PaperSourceCollection" namespace="System.Drawing.Printing">
            <constructor name="PaperSourceCollection(System.Drawing.Printing.PaperSource[])" argnames="array" />
            <property name="Count" propertytype="System.Int32" />
            <property name="Item" propertytype="System.Drawing.Printing.PaperSource" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </class>
        <class name="PrinterResolutionCollection" namespace="System.Drawing.Printing">
            <constructor name="PrinterResolutionCollection(System.Drawing.Printing.PrinterResolution[])" argnames="array" />
            <property name="Count" propertytype="System.Int32" />
            <property name="Item" propertytype="System.Drawing.Printing.PrinterResolution" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </class>
        <class name="StringCollection" namespace="System.Drawing.Printing">
            <constructor name="StringCollection(System.String[])" argnames="array" />
            <property name="Count" propertytype="System.Int32" />
            <property name="Item" propertytype="System.String" />
            <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
            <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
            <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
            <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
            <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
            <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
            <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
        </class>
        <constructor name="StringCollection" argnames="" />
        <property name="CanDuplex" propertytype="System.Boolean" />
        <property name="Copies" propertytype="System.Int16" />
        <property name="Collate" propertytype="System.Boolean" />
        <property name="DefaultPageSettings" propertytype="System.Drawing.Printing.PageSettings" />
        <property name="DriverName" propertytype="System.String" />
        <property name="Duplex" propertytype="System.Drawing.Printing.Duplex" />
        <property name="FromPage" propertytype="System.Int32" />
        <property name="InstalledPrinters" propertytype="System.Drawing.Printing.PrinterSettings+StringCollection" />
        <property name="IsDefaultPrinter" propertytype="System.Boolean" />
        <property name="IsPlotter" propertytype="System.Boolean" />
        <property name="IsValid" propertytype="System.Boolean" />
        <property name="LandscapeAngle" propertytype="System.Int32" />
        <property name="MaximumCopies" propertytype="System.Int32" />
        <property name="MaximumPage" propertytype="System.Int32" />
        <property name="MinimumPage" propertytype="System.Int32" />
        <property name="OutputPort" propertytype="System.String" />
        <property name="PaperSizes" propertytype="System.Drawing.Printing.PrinterSettings+PaperSizeCollection" />
        <property name="PaperSources" propertytype="System.Drawing.Printing.PrinterSettings+PaperSourceCollection" />
        <property name="PrintDialogDisplayed" propertytype="System.Boolean" />
        <property name="PrintRange" propertytype="System.Drawing.Printing.PrintRange" />
        <property name="PrintToFile" propertytype="System.Boolean" />
        <property name="PrinterName" propertytype="System.String" />
        <property name="PrinterNameInternal" propertytype="System.String" />
        <property name="PrinterResolutions" propertytype="System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection" />
        <property name="SupportsColor" propertytype="System.Boolean" />
        <property name="ToPage" propertytype="System.Int32" />
        <method name="Clone" argnames="" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" returntype="System.String" />
        <method name="CreateMeasurementGraphics" argnames="" returntype="System.Drawing.Graphics" />
        <method name="GetHdevmode" argnames="" returntype="System.IntPtr" />
        <method name="GetHdevmode(System.Drawing.Printing.PageSettings)" argnames="pageSettings" returntype="System.IntPtr" />
        <method name="GetHdevnames" argnames="" returntype="System.IntPtr" />
        <method name="SetHdevmode(System.IntPtr)" argnames="hdevmode" returntype="System.Void" />
        <method name="SetHdevnames(System.IntPtr)" argnames="hdevnames" returntype="System.Void" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PaperSizeCollection" namespace="System.Drawing.Printing">
        <constructor name="PaperSizeCollection(System.Drawing.Printing.PaperSize[])" argnames="array" />
        <property name="Count" propertytype="System.Int32" />
        <property name="Item" propertytype="System.Drawing.Printing.PaperSize" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PaperSourceCollection" namespace="System.Drawing.Printing">
        <constructor name="PaperSourceCollection(System.Drawing.Printing.PaperSource[])" argnames="array" />
        <property name="Count" propertytype="System.Int32" />
        <property name="Item" propertytype="System.Drawing.Printing.PaperSource" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrinterResolutionCollection" namespace="System.Drawing.Printing">
        <constructor name="PrinterResolutionCollection(System.Drawing.Printing.PrinterResolution[])" argnames="array" />
        <property name="Count" propertytype="System.Int32" />
        <property name="Item" propertytype="System.Drawing.Printing.PrinterResolution" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="StringCollection" namespace="System.Drawing.Printing">
        <constructor name="StringCollection(System.String[])" argnames="array" />
        <property name="Count" propertytype="System.Int32" />
        <property name="Item" propertytype="System.String" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetEnumerator" argnames="" returntype="System.Collections.IEnumerator" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrinterUnitConvert" namespace="System.Drawing.Printing">
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="Convert(System.Double, System.Drawing.Printing.PrinterUnit, System.Drawing.Printing.PrinterUnit)" argnames="value, fromUnit, toUnit" returntype="System.Double" />
        <method name="Convert(System.Int32, System.Drawing.Printing.PrinterUnit, System.Drawing.Printing.PrinterUnit)" argnames="value, fromUnit, toUnit" returntype="System.Int32" />
        <method name="Convert(System.Drawing.Point, System.Drawing.Printing.PrinterUnit, System.Drawing.Printing.PrinterUnit)" argnames="value, fromUnit, toUnit" returntype="System.Drawing.Point" />
        <method name="Convert(System.Drawing.Size, System.Drawing.Printing.PrinterUnit, System.Drawing.Printing.PrinterUnit)" argnames="value, fromUnit, toUnit" returntype="System.Drawing.Size" />
        <method name="Convert(System.Drawing.Rectangle, System.Drawing.Printing.PrinterUnit, System.Drawing.Printing.PrinterUnit)" argnames="value, fromUnit, toUnit" returntype="System.Drawing.Rectangle" />
        <method name="Convert(System.Drawing.Printing.Margins, System.Drawing.Printing.PrinterUnit, System.Drawing.Printing.PrinterUnit)" argnames="value, fromUnit, toUnit" returntype="System.Drawing.Printing.Margins" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrintEventArgs" namespace="System.Drawing.Printing">
        <constructor name="PrintEventArgs" argnames="" />
        <property name="Cancel" inherited="System.ComponentModel.CancelEventArgs" propertytype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrintingPermission" namespace="System.Drawing.Printing">
        <constructor name="PrintingPermission(System.Security.Permissions.PermissionState)" argnames="state" />
        <constructor name="PrintingPermission(System.Drawing.Printing.PrintingPermissionLevel)" argnames="printingLevel" />
        <property name="Level" propertytype="System.Drawing.Printing.PrintingPermissionLevel" />
        <method name="IsUnrestricted" argnames="" returntype="System.Boolean" />
        <method name="PermitOnly" argnames="" inherited="System.Security.CodeAccessPermission" returntype="System.Void" />
        <method name="Deny" argnames="" inherited="System.Security.CodeAccessPermission" returntype="System.Void" />
        <method name="Assert" argnames="" inherited="System.Security.CodeAccessPermission" returntype="System.Void" />
        <method name="FromXml(System.Security.SecurityElement)" argnames="esd" returntype="System.Void" />
        <method name="ToXml" argnames="" returntype="System.Security.SecurityElement" />
        <method name="Demand" argnames="" inherited="System.Security.CodeAccessPermission" returntype="System.Void" />
        <method name="IsSubsetOf(System.Security.IPermission)" argnames="target" returntype="System.Boolean" />
        <method name="Union(System.Security.IPermission)" argnames="target" returntype="System.Security.IPermission" />
        <method name="Intersect(System.Security.IPermission)" argnames="target" returntype="System.Security.IPermission" />
        <method name="Copy" argnames="" returntype="System.Security.IPermission" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Security.CodeAccessPermission" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrintingPermissionAttribute" namespace="System.Drawing.Printing">
        <constructor name="PrintingPermissionAttribute(System.Security.Permissions.SecurityAction)" argnames="action" />
        <property name="Level" propertytype="System.Drawing.Printing.PrintingPermissionLevel" />
        <property name="Action" inherited="System.Security.Permissions.SecurityAttribute" propertytype="System.Security.Permissions.SecurityAction" />
        <property name="Unrestricted" inherited="System.Security.Permissions.SecurityAttribute" propertytype="System.Boolean" />
        <property name="TypeId" inherited="System.Attribute" propertytype="System.Object" />
        <method name="CreatePermission" argnames="" returntype="System.Security.IPermission" />
        <method name="IsDefaultAttribute" argnames="" inherited="System.Attribute" returntype="System.Boolean" />
        <method name="Match(System.Object)" argnames="obj" inherited="System.Attribute" returntype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Attribute" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Attribute" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="PrintPageEventArgs" namespace="System.Drawing.Printing">
        <constructor name="PrintPageEventArgs(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Rectangle, System.Drawing.Printing.PageSettings)" argnames="graphics, marginBounds, pageBounds, pageSettings" />
        <property name="Cancel" propertytype="System.Boolean" />
        <property name="Graphics" propertytype="System.Drawing.Graphics" />
        <property name="HasMorePages" propertytype="System.Boolean" />
        <property name="MarginBounds" propertytype="System.Drawing.Rectangle" />
        <property name="PageBounds" propertytype="System.Drawing.Rectangle" />
        <property name="PageSettings" propertytype="System.Drawing.Printing.PageSettings" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <class name="QueryPageSettingsEventArgs" namespace="System.Drawing.Printing">
        <constructor name="QueryPageSettingsEventArgs(System.Drawing.Printing.PageSettings)" argnames="pageSettings" />
        <property name="PageSettings" propertytype="System.Drawing.Printing.PageSettings" />
        <property name="Cancel" inherited="System.ComponentModel.CancelEventArgs" propertytype="System.Boolean" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Object" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Object" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </class>
    <delegate name="PrintEventHandler" namespace="System.Drawing.Printing">
        <constructor name="PrintEventHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.Object, System.Drawing.Printing.PrintEventArgs, System.AsyncCallback, System.Object)" argnames="sender, e, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Object, System.Drawing.Printing.PrintEventArgs)" argnames="sender, e" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="PrintPageEventHandler" namespace="System.Drawing.Printing">
        <constructor name="PrintPageEventHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.Object, System.Drawing.Printing.PrintPageEventArgs, System.AsyncCallback, System.Object)" argnames="sender, e, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Object, System.Drawing.Printing.PrintPageEventArgs)" argnames="sender, e" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <delegate name="QueryPageSettingsEventHandler" namespace="System.Drawing.Printing">
        <constructor name="QueryPageSettingsEventHandler(System.Object, System.IntPtr)" argnames="object, method" />
        <property name="Method" inherited="System.Delegate" propertytype="System.Reflection.MethodInfo" />
        <property name="Target" inherited="System.Delegate" propertytype="System.Object" />
        <method name="EndInvoke(System.IAsyncResult)" argnames="result" returntype="System.Void" />
        <method name="BeginInvoke(System.Object, System.Drawing.Printing.QueryPageSettingsEventArgs, System.AsyncCallback, System.Object)" argnames="sender, e, callback, object" returntype="System.IAsyncResult" />
        <method name="Invoke(System.Object, System.Drawing.Printing.QueryPageSettingsEventArgs)" argnames="sender, e" returntype="System.Void" />
        <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" argnames="info, context" inherited="System.MulticastDelegate" returntype="System.Void" />
        <method name="Clone" argnames="" inherited="System.Delegate" returntype="System.Object" />
        <method name="RemoveImpl(System.Delegate)" argnames="value" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="CombineImpl(System.Delegate)" argnames="follow" inherited="System.MulticastDelegate" returntype="System.Delegate" />
        <method name="GetMethodImpl" argnames="" inherited="System.Delegate" returntype="System.Reflection.MethodInfo" />
        <method name="GetInvocationList" argnames="" inherited="System.MulticastDelegate" returntype="System.Delegate[]" />
        <method name="DynamicInvokeImpl(System.Object[])" argnames="args" inherited="System.MulticastDelegate" returntype="System.Object" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.MulticastDelegate" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.MulticastDelegate" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Object" returntype="System.String" />
        <method name="DynamicInvoke(System.Object[])" argnames="args" inherited="System.Delegate" returntype="System.Object" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </delegate>
    <enum name="Duplex" namespace="System.Drawing.Printing">
        <field name="Default" />
        <field name="Simplex" />
        <field name="Horizontal" />
        <field name="Vertical" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PaperKind" namespace="System.Drawing.Printing">
        <field name="Custom" />
        <field name="Letter" />
        <field name="Legal" />
        <field name="A4" />
        <field name="CSheet" />
        <field name="DSheet" />
        <field name="ESheet" />
        <field name="LetterSmall" />
        <field name="Tabloid" />
        <field name="Ledger" />
        <field name="Statement" />
        <field name="Executive" />
        <field name="A3" />
        <field name="A4Small" />
        <field name="A5" />
        <field name="B4" />
        <field name="B5" />
        <field name="Folio" />
        <field name="Quarto" />
        <field name="Standard10x14" />
        <field name="Standard11x17" />
        <field name="Note" />
        <field name="Number9Envelope" />
        <field name="Number10Envelope" />
        <field name="Number11Envelope" />
        <field name="Number12Envelope" />
        <field name="Number14Envelope" />
        <field name="DLEnvelope" />
        <field name="C5Envelope" />
        <field name="C3Envelope" />
        <field name="C4Envelope" />
        <field name="C6Envelope" />
        <field name="C65Envelope" />
        <field name="B4Envelope" />
        <field name="B5Envelope" />
        <field name="B6Envelope" />
        <field name="ItalyEnvelope" />
        <field name="MonarchEnvelope" />
        <field name="PersonalEnvelope" />
        <field name="USStandardFanfold" />
        <field name="GermanStandardFanfold" />
        <field name="GermanLegalFanfold" />
        <field name="IsoB4" />
        <field name="JapanesePostcard" />
        <field name="Standard9x11" />
        <field name="Standard10x11" />
        <field name="Standard15x11" />
        <field name="InviteEnvelope" />
        <field name="LetterExtra" />
        <field name="LegalExtra" />
        <field name="TabloidExtra" />
        <field name="A4Extra" />
        <field name="LetterTransverse" />
        <field name="A4Transverse" />
        <field name="LetterExtraTransverse" />
        <field name="APlus" />
        <field name="BPlus" />
        <field name="LetterPlus" />
        <field name="A4Plus" />
        <field name="A5Transverse" />
        <field name="B5Transverse" />
        <field name="A3Extra" />
        <field name="A5Extra" />
        <field name="B5Extra" />
        <field name="A2" />
        <field name="A3Transverse" />
        <field name="A3ExtraTransverse" />
        <field name="JapaneseDoublePostcard" />
        <field name="A6" />
        <field name="JapaneseEnvelopeKakuNumber2" />
        <field name="JapaneseEnvelopeKakuNumber3" />
        <field name="JapaneseEnvelopeChouNumber3" />
        <field name="JapaneseEnvelopeChouNumber4" />
        <field name="LetterRotated" />
        <field name="A3Rotated" />
        <field name="A4Rotated" />
        <field name="A5Rotated" />
        <field name="B4JisRotated" />
        <field name="B5JisRotated" />
        <field name="JapanesePostcardRotated" />
        <field name="JapaneseDoublePostcardRotated" />
        <field name="A6Rotated" />
        <field name="JapaneseEnvelopeKakuNumber2Rotated" />
        <field name="JapaneseEnvelopeKakuNumber3Rotated" />
        <field name="JapaneseEnvelopeChouNumber3Rotated" />
        <field name="JapaneseEnvelopeChouNumber4Rotated" />
        <field name="B6Jis" />
        <field name="B6JisRotated" />
        <field name="Standard12x11" />
        <field name="JapaneseEnvelopeYouNumber4" />
        <field name="JapaneseEnvelopeYouNumber4Rotated" />
        <field name="Prc16K" />
        <field name="Prc32K" />
        <field name="Prc32KBig" />
        <field name="PrcEnvelopeNumber1" />
        <field name="PrcEnvelopeNumber2" />
        <field name="PrcEnvelopeNumber3" />
        <field name="PrcEnvelopeNumber4" />
        <field name="PrcEnvelopeNumber5" />
        <field name="PrcEnvelopeNumber6" />
        <field name="PrcEnvelopeNumber7" />
        <field name="PrcEnvelopeNumber8" />
        <field name="PrcEnvelopeNumber9" />
        <field name="PrcEnvelopeNumber10" />
        <field name="Prc16KRotated" />
        <field name="Prc32KRotated" />
        <field name="Prc32KBigRotated" />
        <field name="PrcEnvelopeNumber1Rotated" />
        <field name="PrcEnvelopeNumber2Rotated" />
        <field name="PrcEnvelopeNumber3Rotated" />
        <field name="PrcEnvelopeNumber4Rotated" />
        <field name="PrcEnvelopeNumber5Rotated" />
        <field name="PrcEnvelopeNumber6Rotated" />
        <field name="PrcEnvelopeNumber7Rotated" />
        <field name="PrcEnvelopeNumber8Rotated" />
        <field name="PrcEnvelopeNumber9Rotated" />
        <field name="PrcEnvelopeNumber10Rotated" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PaperSourceKind" namespace="System.Drawing.Printing">
        <field name="Upper" />
        <field name="Lower" />
        <field name="Middle" />
        <field name="Manual" />
        <field name="Envelope" />
        <field name="ManualFeed" />
        <field name="AutomaticFeed" />
        <field name="TractorFeed" />
        <field name="SmallFormat" />
        <field name="LargeFormat" />
        <field name="LargeCapacity" />
        <field name="Cassette" />
        <field name="FormSource" />
        <field name="Custom" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PrinterResolutionKind" namespace="System.Drawing.Printing">
        <field name="High" />
        <field name="Medium" />
        <field name="Low" />
        <field name="Draft" />
        <field name="Custom" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PrinterUnit" namespace="System.Drawing.Printing">
        <field name="Display" />
        <field name="ThousandthsOfAnInch" />
        <field name="HundredthsOfAMillimeter" />
        <field name="TenthsOfAMillimeter" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PrintingPermissionLevel" namespace="System.Drawing.Printing">
        <field name="NoPrinting" />
        <field name="SafePrinting" />
        <field name="DefaultPrinting" />
        <field name="AllPrinting" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
    <enum name="PrintRange" namespace="System.Drawing.Printing">
        <field name="AllPages" />
        <field name="SomePages" />
        <field name="Selection" />
        <method name="ToString(System.IFormatProvider)" argnames="provider" inherited="System.Enum" returntype="System.String" />
        <method name="GetTypeCode" argnames="" inherited="System.Enum" returntype="System.TypeCode" />
        <method name="ToString(System.String, System.IFormatProvider)" argnames="format, provider" inherited="System.Enum" returntype="System.String" />
        <method name="CompareTo(System.Object)" argnames="target" inherited="System.Enum" returntype="System.Int32" />
        <method name="Finalize" argnames="" inherited="System.Object" returntype="System.Void" />
        <method name="GetHashCode" argnames="" inherited="System.Enum" returntype="System.Int32" />
        <method name="Equals(System.Object)" argnames="obj" inherited="System.Enum" returntype="System.Boolean" />
        <method name="ToString" argnames="" inherited="System.Enum" returntype="System.String" />
        <method name="ToString(System.String)" argnames="format" inherited="System.Enum" returntype="System.String" />
        <method name="GetType" argnames="" inherited="System.Object" returntype="System.Type" />
        <method name="MemberwiseClone" argnames="" inherited="System.Object" returntype="System.Object" />
    </enum>
</masterdoc>