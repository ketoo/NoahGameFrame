2008-03-12  Atsushi Enomoto  <atsushi@ximian.com>

	* Makefile : build runtime-version-dependent xsd.exe files.

2006-12-30  Gert Driesen  <drieseng@users.sourceforge.net>

	* NewMonoXSD.cs : Silently ignore /nologo switch for compatibility
	with MS. 

2006-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : and for Read() as well ;-)

2006-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : Ankit wants good validation error reporting ;-)

2006-11-09  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : process all elements including imported ones. To do
	  so, use post-compilation schema items.

2004-07-12  Lluis Sanchez Gual  <lluis@novell.com>

	* NewMonoXSD.cs: Don't write the exception trace for common parameter
	errors.

2005-01-11  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : by default, dataset namespace is not "Schemas" but
	  empty.

2004-08-16  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : /language should support custom assembly qualified
	  name specification. This fixes bug #63081.
	  Also fixed usage message. "VB" is considered as valid.

2004-08-07  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : /generator (/g) option didn't work, since it usually
	  ends with .dll (or .exe) and regarded as mere assembly filename.

2004-07-12  Lluis Sanchez Gual  <lluis@novell.com>

	* NewMonoXSD.cs: Accept files with absolute paths.

2004-05-07  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : Previous change broke default C# code generation.
	  XML schema inference output path fix.

2004-05-06  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : Added new /generator:typename(,assemblyfile) option
	  support that enables users to use any CodeDomProvider.
	  Added VB support (/language:VB).

2004-04-29  Lluis Sanchez Gual  <lluis@ximian.com>

	* NewMonoXSD.cs: Import elements in the order they are declared in the schema.

2004-04-26  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : Enabled /d option (typed dataset generation support
	  using newly implemented TypedDataSetGenerator).

2004-04-22  Atsushi Enomoto <atsushi@ximian.com>

	* NewMonoXSD.cs : Added support for (ADO.NET based) xsd inference.
	  Changed command line usage to require /c for serialization class
	  generation, or /d for typed dataset generation (not supported yet).
	  Modified usage message due to the changes above.
	* Makefile : Added reference to System.Data.dll.

2004-01-19  Lluis Sanchez Gual  <lluis@ximian.com>

	* NewMonoXSD.cs: Compile the loaded schemas if they are not already compiled.

2003-08-05  Lluis Sanchez Gual  <lluis@ximian.com>

	* NewMonoXSD.cs: new implementation of monoxsd based on the
	  classes in System.Xml.Serialization.
	* xsd.exe.sources: new sources file.
	* Makefile: renamed executable to xsd.exe

2003-06-13  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XSD2Class.cs: several changes.

2003-06-04  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* (temporarily) added XSD2Class.cs.

2003-03-25  Duncan Mak  <duncan@ximian.com>

	* MonoXSD.cs: Added support for two command line arguments:

	   /output: specify the directory to put the generated schema.
	   /type:   specify a specific type in the assembly.

2003-03-24  Duncan Mak  <duncan@ximian.com>

	* MonoXSD.cs: Add support for having enums as a field in the
	class. I overlooked this bit last week.

	Removed the special case for 'XmlNode' fields, turns out that
	behave the same as all the other subclasses of 'XmlNode'.

	* makefile: Make it build with debug enabled by default.

2003-03-22  Duncan Mak  <duncan@ximian.com>

	* MonoXSD.cs: Moved things around, now it's not only
	static methods (functions) anymore.

	Attributes handling galore! We now handle:

	   - XmlElementAttribute
	   - XmlAttributeAtribute
	   - XmlArrayAttribute
	   - XmlArrayItemAttribute
	   - XmlTextAttribute
	   - XmlAnyElementAttribute
	   - XmlAnyAttributeAttribute

2003-03-20  Duncan Mak  <duncan@ximian.com>

	* MonoXSD.cs: More refinements. We now support transforming
	enumerations as well as arrays to their corresponding XML Schema
	type. Read/Write properties will also be transformed (thanks to
	reading KeithBa's book). XmlNode is properly handled, and XmlElement
	& co. should also be transformed correctly.
	
	Next up: I should look into whether or not xsd.exe makes use of
	XmlAttributes. If so, I'll have to support that.
	
	Other than that, this part of MonoXSD should be complete.

2003-03-17  Duncan Mak  <duncan@ximian.com>

	* MonoXSD.cs: A simple implementation of MonoXSD. It current
	supports creating an XML Schema based on a .NET assembly. The
	handling of schema derivation is simplistic. 
