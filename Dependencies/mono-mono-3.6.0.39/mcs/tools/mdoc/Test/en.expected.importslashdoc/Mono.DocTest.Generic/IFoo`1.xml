<Type Name="IFoo&lt;T&gt;" FullName="Mono.DocTest.Generic.IFoo&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IFoo&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFoo`1&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>DocTest</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">T generic param</typeparam>
    <summary>To be added.</summary>
    <remarks>
      <c>T:Mono.DocTest.IFoo`1</c>.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Method&lt;U&gt;">
      <MemberSignature Language="C#" Value="public T Method&lt;U&gt; (T t, U u);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Method&lt;U&gt;(!T t, !!U u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="U" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="t" Type="T" />
        <Parameter Name="u" Type="U" />
      </Parameters>
      <Docs>
        <typeparam name="U">U generic param</typeparam>
        <param name="t">To be added.</param>
        <param name="u">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <c>T:Mono.DocTest.IFoo`1.Method``1(`0,``0)</c>.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
