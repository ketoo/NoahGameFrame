// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NFMsgBaseEx.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NFMsgBaseEx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NFMsg {

namespace {

const ::google::protobuf::Descriptor* PropertyIntEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropertyIntEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* PropertyFloatEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropertyFloatEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* PropertyStringEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropertyStringEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* PropertyObjectEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropertyObjectEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectPropertyListEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectPropertyListEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordBaseEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordBaseEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordListEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordListEx_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_NFMsgBaseEx_2eproto() {
  protobuf_AddDesc_NFMsgBaseEx_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NFMsgBaseEx.proto");
  GOOGLE_CHECK(file != NULL);
  PropertyIntEx_descriptor_ = file->message_type(0);
  static const int PropertyIntEx_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyIntEx, property_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyIntEx, data_),
  };
  PropertyIntEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropertyIntEx_descriptor_,
      PropertyIntEx::default_instance_,
      PropertyIntEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyIntEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyIntEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropertyIntEx));
  PropertyFloatEx_descriptor_ = file->message_type(1);
  static const int PropertyFloatEx_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFloatEx, property_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFloatEx, data_),
  };
  PropertyFloatEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropertyFloatEx_descriptor_,
      PropertyFloatEx::default_instance_,
      PropertyFloatEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFloatEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFloatEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropertyFloatEx));
  PropertyStringEx_descriptor_ = file->message_type(2);
  static const int PropertyStringEx_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyStringEx, property_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyStringEx, data_),
  };
  PropertyStringEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropertyStringEx_descriptor_,
      PropertyStringEx::default_instance_,
      PropertyStringEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyStringEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyStringEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropertyStringEx));
  PropertyObjectEx_descriptor_ = file->message_type(3);
  static const int PropertyObjectEx_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyObjectEx, property_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyObjectEx, data_),
  };
  PropertyObjectEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropertyObjectEx_descriptor_,
      PropertyObjectEx::default_instance_,
      PropertyObjectEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyObjectEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyObjectEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropertyObjectEx));
  ObjectPropertyListEx_descriptor_ = file->message_type(4);
  static const int ObjectPropertyListEx_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyListEx, property_int_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyListEx, property_float_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyListEx, property_string_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyListEx, property_object_list_),
  };
  ObjectPropertyListEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectPropertyListEx_descriptor_,
      ObjectPropertyListEx::default_instance_,
      ObjectPropertyListEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyListEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyListEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectPropertyListEx));
  ObjectRecordBaseEx_descriptor_ = file->message_type(5);
  static const int ObjectRecordBaseEx_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, record_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, record_int_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, record_float_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, record_string_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, record_object_list_),
  };
  ObjectRecordBaseEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectRecordBaseEx_descriptor_,
      ObjectRecordBaseEx::default_instance_,
      ObjectRecordBaseEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBaseEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectRecordBaseEx));
  ObjectRecordListEx_descriptor_ = file->message_type(6);
  static const int ObjectRecordListEx_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordListEx, record_list_),
  };
  ObjectRecordListEx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectRecordListEx_descriptor_,
      ObjectRecordListEx::default_instance_,
      ObjectRecordListEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordListEx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordListEx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectRecordListEx));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NFMsgBaseEx_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropertyIntEx_descriptor_, &PropertyIntEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropertyFloatEx_descriptor_, &PropertyFloatEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropertyStringEx_descriptor_, &PropertyStringEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropertyObjectEx_descriptor_, &PropertyObjectEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectPropertyListEx_descriptor_, &ObjectPropertyListEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectRecordBaseEx_descriptor_, &ObjectRecordBaseEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectRecordListEx_descriptor_, &ObjectRecordListEx::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_NFMsgBaseEx_2eproto() {
  delete PropertyIntEx::default_instance_;
  delete PropertyIntEx_reflection_;
  delete PropertyFloatEx::default_instance_;
  delete PropertyFloatEx_reflection_;
  delete PropertyStringEx::default_instance_;
  delete PropertyStringEx_reflection_;
  delete PropertyObjectEx::default_instance_;
  delete PropertyObjectEx_reflection_;
  delete ObjectPropertyListEx::default_instance_;
  delete ObjectPropertyListEx_reflection_;
  delete ObjectRecordBaseEx::default_instance_;
  delete ObjectRecordBaseEx_reflection_;
  delete ObjectRecordListEx::default_instance_;
  delete ObjectRecordListEx_reflection_;
}

void protobuf_AddDesc_NFMsgBaseEx_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::NFMsg::protobuf_AddDesc_NFMsgBase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021NFMsgBaseEx.proto\022\005NFMsg\032\017NFMsgBase.pr"
    "oto\"2\n\rPropertyIntEx\022\023\n\013property_id\030\001 \002("
    "\005\022\014\n\004data\030\002 \002(\005\"4\n\017PropertyFloatEx\022\023\n\013pr"
    "operty_id\030\001 \002(\014\022\014\n\004data\030\002 \002(\002\"5\n\020Propert"
    "yStringEx\022\023\n\013property_id\030\001 \002(\014\022\014\n\004data\030\002"
    " \002(\014\"5\n\020PropertyObjectEx\022\023\n\013property_id\030"
    "\001 \002(\014\022\014\n\004data\030\002 \002(\003\"\352\001\n\024ObjectPropertyLi"
    "stEx\022/\n\021property_int_list\030\001 \003(\0132\024.NFMsg."
    "PropertyIntEx\0223\n\023property_float_list\030\002 \003"
    "(\0132\026.NFMsg.PropertyFloatEx\0225\n\024property_s"
    "tring_list\030\003 \003(\0132\027.NFMsg.PropertyStringE"
    "x\0225\n\024property_object_list\030\004 \003(\0132\027.NFMsg."
    "PropertyObjectEx\"\343\001\n\022ObjectRecordBaseEx\022"
    "\021\n\trecord_id\030\001 \002(\005\022)\n\017record_int_list\030\002 "
    "\003(\0132\020.NFMsg.RecordInt\022-\n\021record_float_li"
    "st\030\003 \003(\0132\022.NFMsg.RecordFloat\022/\n\022record_s"
    "tring_list\030\004 \003(\0132\023.NFMsg.RecordString\022/\n"
    "\022record_object_list\030\005 \003(\0132\023.NFMsg.Record"
    "Object\"D\n\022ObjectRecordListEx\022.\n\013record_l"
    "ist\030\001 \003(\0132\031.NFMsg.ObjectRecordBaseEx", 796);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NFMsgBaseEx.proto", &protobuf_RegisterTypes);
  PropertyIntEx::default_instance_ = new PropertyIntEx();
  PropertyFloatEx::default_instance_ = new PropertyFloatEx();
  PropertyStringEx::default_instance_ = new PropertyStringEx();
  PropertyObjectEx::default_instance_ = new PropertyObjectEx();
  ObjectPropertyListEx::default_instance_ = new ObjectPropertyListEx();
  ObjectRecordBaseEx::default_instance_ = new ObjectRecordBaseEx();
  ObjectRecordListEx::default_instance_ = new ObjectRecordListEx();
  PropertyIntEx::default_instance_->InitAsDefaultInstance();
  PropertyFloatEx::default_instance_->InitAsDefaultInstance();
  PropertyStringEx::default_instance_->InitAsDefaultInstance();
  PropertyObjectEx::default_instance_->InitAsDefaultInstance();
  ObjectPropertyListEx::default_instance_->InitAsDefaultInstance();
  ObjectRecordBaseEx::default_instance_->InitAsDefaultInstance();
  ObjectRecordListEx::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NFMsgBaseEx_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NFMsgBaseEx_2eproto {
  StaticDescriptorInitializer_NFMsgBaseEx_2eproto() {
    protobuf_AddDesc_NFMsgBaseEx_2eproto();
  }
} static_descriptor_initializer_NFMsgBaseEx_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PropertyIntEx::kPropertyIdFieldNumber;
const int PropertyIntEx::kDataFieldNumber;
#endif  // !_MSC_VER

PropertyIntEx::PropertyIntEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PropertyIntEx::InitAsDefaultInstance() {
}

PropertyIntEx::PropertyIntEx(const PropertyIntEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PropertyIntEx::SharedCtor() {
  _cached_size_ = 0;
  property_id_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropertyIntEx::~PropertyIntEx() {
  SharedDtor();
}

void PropertyIntEx::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PropertyIntEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyIntEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertyIntEx_descriptor_;
}

const PropertyIntEx& PropertyIntEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

PropertyIntEx* PropertyIntEx::default_instance_ = NULL;

PropertyIntEx* PropertyIntEx::New() const {
  return new PropertyIntEx;
}

void PropertyIntEx::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    property_id_ = 0;
    data_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropertyIntEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 property_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_id_)));
          set_has_property_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_data;
        break;
      }

      // required int32 data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PropertyIntEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 property_id = 1;
  if (has_property_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->property_id(), output);
  }

  // required int32 data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PropertyIntEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 property_id = 1;
  if (has_property_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->property_id(), target);
  }

  // required int32 data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PropertyIntEx::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 property_id = 1;
    if (has_property_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->property_id());
    }

    // required int32 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyIntEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropertyIntEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropertyIntEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropertyIntEx::MergeFrom(const PropertyIntEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property_id()) {
      set_property_id(from.property_id());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropertyIntEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyIntEx::CopyFrom(const PropertyIntEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyIntEx::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PropertyIntEx::Swap(PropertyIntEx* other) {
  if (other != this) {
    std::swap(property_id_, other->property_id_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropertyIntEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropertyIntEx_descriptor_;
  metadata.reflection = PropertyIntEx_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PropertyFloatEx::kPropertyIdFieldNumber;
const int PropertyFloatEx::kDataFieldNumber;
#endif  // !_MSC_VER

PropertyFloatEx::PropertyFloatEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PropertyFloatEx::InitAsDefaultInstance() {
}

PropertyFloatEx::PropertyFloatEx(const PropertyFloatEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PropertyFloatEx::SharedCtor() {
  _cached_size_ = 0;
  property_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropertyFloatEx::~PropertyFloatEx() {
  SharedDtor();
}

void PropertyFloatEx::SharedDtor() {
  if (property_id_ != &::google::protobuf::internal::kEmptyString) {
    delete property_id_;
  }
  if (this != default_instance_) {
  }
}

void PropertyFloatEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyFloatEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertyFloatEx_descriptor_;
}

const PropertyFloatEx& PropertyFloatEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

PropertyFloatEx* PropertyFloatEx::default_instance_ = NULL;

PropertyFloatEx* PropertyFloatEx::New() const {
  return new PropertyFloatEx;
}

void PropertyFloatEx::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_property_id()) {
      if (property_id_ != &::google::protobuf::internal::kEmptyString) {
        property_id_->clear();
      }
    }
    data_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropertyFloatEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes property_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_data;
        break;
      }

      // required float data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PropertyFloatEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes property_id = 1;
  if (has_property_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->property_id(), output);
  }

  // required float data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PropertyFloatEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes property_id = 1;
  if (has_property_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_id(), target);
  }

  // required float data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PropertyFloatEx::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes property_id = 1;
    if (has_property_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->property_id());
    }

    // required float data = 2;
    if (has_data()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyFloatEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropertyFloatEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropertyFloatEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropertyFloatEx::MergeFrom(const PropertyFloatEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property_id()) {
      set_property_id(from.property_id());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropertyFloatEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyFloatEx::CopyFrom(const PropertyFloatEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyFloatEx::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PropertyFloatEx::Swap(PropertyFloatEx* other) {
  if (other != this) {
    std::swap(property_id_, other->property_id_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropertyFloatEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropertyFloatEx_descriptor_;
  metadata.reflection = PropertyFloatEx_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PropertyStringEx::kPropertyIdFieldNumber;
const int PropertyStringEx::kDataFieldNumber;
#endif  // !_MSC_VER

PropertyStringEx::PropertyStringEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PropertyStringEx::InitAsDefaultInstance() {
}

PropertyStringEx::PropertyStringEx(const PropertyStringEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PropertyStringEx::SharedCtor() {
  _cached_size_ = 0;
  property_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropertyStringEx::~PropertyStringEx() {
  SharedDtor();
}

void PropertyStringEx::SharedDtor() {
  if (property_id_ != &::google::protobuf::internal::kEmptyString) {
    delete property_id_;
  }
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void PropertyStringEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyStringEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertyStringEx_descriptor_;
}

const PropertyStringEx& PropertyStringEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

PropertyStringEx* PropertyStringEx::default_instance_ = NULL;

PropertyStringEx* PropertyStringEx::New() const {
  return new PropertyStringEx;
}

void PropertyStringEx::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_property_id()) {
      if (property_id_ != &::google::protobuf::internal::kEmptyString) {
        property_id_->clear();
      }
    }
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropertyStringEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes property_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PropertyStringEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes property_id = 1;
  if (has_property_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->property_id(), output);
  }

  // required bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PropertyStringEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes property_id = 1;
  if (has_property_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_id(), target);
  }

  // required bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PropertyStringEx::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes property_id = 1;
    if (has_property_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->property_id());
    }

    // required bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyStringEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropertyStringEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropertyStringEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropertyStringEx::MergeFrom(const PropertyStringEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property_id()) {
      set_property_id(from.property_id());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropertyStringEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyStringEx::CopyFrom(const PropertyStringEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyStringEx::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PropertyStringEx::Swap(PropertyStringEx* other) {
  if (other != this) {
    std::swap(property_id_, other->property_id_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropertyStringEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropertyStringEx_descriptor_;
  metadata.reflection = PropertyStringEx_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PropertyObjectEx::kPropertyIdFieldNumber;
const int PropertyObjectEx::kDataFieldNumber;
#endif  // !_MSC_VER

PropertyObjectEx::PropertyObjectEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PropertyObjectEx::InitAsDefaultInstance() {
}

PropertyObjectEx::PropertyObjectEx(const PropertyObjectEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PropertyObjectEx::SharedCtor() {
  _cached_size_ = 0;
  property_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropertyObjectEx::~PropertyObjectEx() {
  SharedDtor();
}

void PropertyObjectEx::SharedDtor() {
  if (property_id_ != &::google::protobuf::internal::kEmptyString) {
    delete property_id_;
  }
  if (this != default_instance_) {
  }
}

void PropertyObjectEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyObjectEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertyObjectEx_descriptor_;
}

const PropertyObjectEx& PropertyObjectEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

PropertyObjectEx* PropertyObjectEx::default_instance_ = NULL;

PropertyObjectEx* PropertyObjectEx::New() const {
  return new PropertyObjectEx;
}

void PropertyObjectEx::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_property_id()) {
      if (property_id_ != &::google::protobuf::internal::kEmptyString) {
        property_id_->clear();
      }
    }
    data_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropertyObjectEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes property_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_data;
        break;
      }

      // required int64 data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PropertyObjectEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes property_id = 1;
  if (has_property_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->property_id(), output);
  }

  // required int64 data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PropertyObjectEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes property_id = 1;
  if (has_property_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_id(), target);
  }

  // required int64 data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PropertyObjectEx::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes property_id = 1;
    if (has_property_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->property_id());
    }

    // required int64 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyObjectEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropertyObjectEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropertyObjectEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropertyObjectEx::MergeFrom(const PropertyObjectEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property_id()) {
      set_property_id(from.property_id());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropertyObjectEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyObjectEx::CopyFrom(const PropertyObjectEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyObjectEx::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PropertyObjectEx::Swap(PropertyObjectEx* other) {
  if (other != this) {
    std::swap(property_id_, other->property_id_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropertyObjectEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropertyObjectEx_descriptor_;
  metadata.reflection = PropertyObjectEx_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectPropertyListEx::kPropertyIntListFieldNumber;
const int ObjectPropertyListEx::kPropertyFloatListFieldNumber;
const int ObjectPropertyListEx::kPropertyStringListFieldNumber;
const int ObjectPropertyListEx::kPropertyObjectListFieldNumber;
#endif  // !_MSC_VER

ObjectPropertyListEx::ObjectPropertyListEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectPropertyListEx::InitAsDefaultInstance() {
}

ObjectPropertyListEx::ObjectPropertyListEx(const ObjectPropertyListEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectPropertyListEx::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectPropertyListEx::~ObjectPropertyListEx() {
  SharedDtor();
}

void ObjectPropertyListEx::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObjectPropertyListEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyListEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectPropertyListEx_descriptor_;
}

const ObjectPropertyListEx& ObjectPropertyListEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

ObjectPropertyListEx* ObjectPropertyListEx::default_instance_ = NULL;

ObjectPropertyListEx* ObjectPropertyListEx::New() const {
  return new ObjectPropertyListEx;
}

void ObjectPropertyListEx::Clear() {
  property_int_list_.Clear();
  property_float_list_.Clear();
  property_string_list_.Clear();
  property_object_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectPropertyListEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFMsg.PropertyIntEx property_int_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property_int_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property_int_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_property_int_list;
        if (input->ExpectTag(18)) goto parse_property_float_list;
        break;
      }

      // repeated .NFMsg.PropertyFloatEx property_float_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property_float_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property_float_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_property_float_list;
        if (input->ExpectTag(26)) goto parse_property_string_list;
        break;
      }

      // repeated .NFMsg.PropertyStringEx property_string_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property_string_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property_string_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_property_string_list;
        if (input->ExpectTag(34)) goto parse_property_object_list;
        break;
      }

      // repeated .NFMsg.PropertyObjectEx property_object_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property_object_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property_object_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_property_object_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectPropertyListEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .NFMsg.PropertyIntEx property_int_list = 1;
  for (int i = 0; i < this->property_int_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->property_int_list(i), output);
  }

  // repeated .NFMsg.PropertyFloatEx property_float_list = 2;
  for (int i = 0; i < this->property_float_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_float_list(i), output);
  }

  // repeated .NFMsg.PropertyStringEx property_string_list = 3;
  for (int i = 0; i < this->property_string_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_string_list(i), output);
  }

  // repeated .NFMsg.PropertyObjectEx property_object_list = 4;
  for (int i = 0; i < this->property_object_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->property_object_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectPropertyListEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .NFMsg.PropertyIntEx property_int_list = 1;
  for (int i = 0; i < this->property_int_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->property_int_list(i), target);
  }

  // repeated .NFMsg.PropertyFloatEx property_float_list = 2;
  for (int i = 0; i < this->property_float_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->property_float_list(i), target);
  }

  // repeated .NFMsg.PropertyStringEx property_string_list = 3;
  for (int i = 0; i < this->property_string_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->property_string_list(i), target);
  }

  // repeated .NFMsg.PropertyObjectEx property_object_list = 4;
  for (int i = 0; i < this->property_object_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->property_object_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectPropertyListEx::ByteSize() const {
  int total_size = 0;

  // repeated .NFMsg.PropertyIntEx property_int_list = 1;
  total_size += 1 * this->property_int_list_size();
  for (int i = 0; i < this->property_int_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_int_list(i));
  }

  // repeated .NFMsg.PropertyFloatEx property_float_list = 2;
  total_size += 1 * this->property_float_list_size();
  for (int i = 0; i < this->property_float_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_float_list(i));
  }

  // repeated .NFMsg.PropertyStringEx property_string_list = 3;
  total_size += 1 * this->property_string_list_size();
  for (int i = 0; i < this->property_string_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_string_list(i));
  }

  // repeated .NFMsg.PropertyObjectEx property_object_list = 4;
  total_size += 1 * this->property_object_list_size();
  for (int i = 0; i < this->property_object_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_object_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyListEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectPropertyListEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectPropertyListEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectPropertyListEx::MergeFrom(const ObjectPropertyListEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  property_int_list_.MergeFrom(from.property_int_list_);
  property_float_list_.MergeFrom(from.property_float_list_);
  property_string_list_.MergeFrom(from.property_string_list_);
  property_object_list_.MergeFrom(from.property_object_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectPropertyListEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyListEx::CopyFrom(const ObjectPropertyListEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyListEx::IsInitialized() const {

  for (int i = 0; i < property_int_list_size(); i++) {
    if (!this->property_int_list(i).IsInitialized()) return false;
  }
  for (int i = 0; i < property_float_list_size(); i++) {
    if (!this->property_float_list(i).IsInitialized()) return false;
  }
  for (int i = 0; i < property_string_list_size(); i++) {
    if (!this->property_string_list(i).IsInitialized()) return false;
  }
  for (int i = 0; i < property_object_list_size(); i++) {
    if (!this->property_object_list(i).IsInitialized()) return false;
  }
  return true;
}

void ObjectPropertyListEx::Swap(ObjectPropertyListEx* other) {
  if (other != this) {
    property_int_list_.Swap(&other->property_int_list_);
    property_float_list_.Swap(&other->property_float_list_);
    property_string_list_.Swap(&other->property_string_list_);
    property_object_list_.Swap(&other->property_object_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectPropertyListEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectPropertyListEx_descriptor_;
  metadata.reflection = ObjectPropertyListEx_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectRecordBaseEx::kRecordIdFieldNumber;
const int ObjectRecordBaseEx::kRecordIntListFieldNumber;
const int ObjectRecordBaseEx::kRecordFloatListFieldNumber;
const int ObjectRecordBaseEx::kRecordStringListFieldNumber;
const int ObjectRecordBaseEx::kRecordObjectListFieldNumber;
#endif  // !_MSC_VER

ObjectRecordBaseEx::ObjectRecordBaseEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectRecordBaseEx::InitAsDefaultInstance() {
}

ObjectRecordBaseEx::ObjectRecordBaseEx(const ObjectRecordBaseEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectRecordBaseEx::SharedCtor() {
  _cached_size_ = 0;
  record_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordBaseEx::~ObjectRecordBaseEx() {
  SharedDtor();
}

void ObjectRecordBaseEx::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObjectRecordBaseEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordBaseEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordBaseEx_descriptor_;
}

const ObjectRecordBaseEx& ObjectRecordBaseEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

ObjectRecordBaseEx* ObjectRecordBaseEx::default_instance_ = NULL;

ObjectRecordBaseEx* ObjectRecordBaseEx::New() const {
  return new ObjectRecordBaseEx;
}

void ObjectRecordBaseEx::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    record_id_ = 0;
  }
  record_int_list_.Clear();
  record_float_list_.Clear();
  record_string_list_.Clear();
  record_object_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectRecordBaseEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 record_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_record_int_list;
        break;
      }

      // repeated .NFMsg.RecordInt record_int_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_int_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_int_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_record_int_list;
        if (input->ExpectTag(26)) goto parse_record_float_list;
        break;
      }

      // repeated .NFMsg.RecordFloat record_float_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_float_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_float_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_record_float_list;
        if (input->ExpectTag(34)) goto parse_record_string_list;
        break;
      }

      // repeated .NFMsg.RecordString record_string_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_string_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_string_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_record_string_list;
        if (input->ExpectTag(42)) goto parse_record_object_list;
        break;
      }

      // repeated .NFMsg.RecordObject record_object_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_object_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_object_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_record_object_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectRecordBaseEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 record_id = 1;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->record_id(), output);
  }

  // repeated .NFMsg.RecordInt record_int_list = 2;
  for (int i = 0; i < this->record_int_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_int_list(i), output);
  }

  // repeated .NFMsg.RecordFloat record_float_list = 3;
  for (int i = 0; i < this->record_float_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->record_float_list(i), output);
  }

  // repeated .NFMsg.RecordString record_string_list = 4;
  for (int i = 0; i < this->record_string_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->record_string_list(i), output);
  }

  // repeated .NFMsg.RecordObject record_object_list = 5;
  for (int i = 0; i < this->record_object_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->record_object_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectRecordBaseEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 record_id = 1;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->record_id(), target);
  }

  // repeated .NFMsg.RecordInt record_int_list = 2;
  for (int i = 0; i < this->record_int_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->record_int_list(i), target);
  }

  // repeated .NFMsg.RecordFloat record_float_list = 3;
  for (int i = 0; i < this->record_float_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->record_float_list(i), target);
  }

  // repeated .NFMsg.RecordString record_string_list = 4;
  for (int i = 0; i < this->record_string_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->record_string_list(i), target);
  }

  // repeated .NFMsg.RecordObject record_object_list = 5;
  for (int i = 0; i < this->record_object_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->record_object_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectRecordBaseEx::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 record_id = 1;
    if (has_record_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->record_id());
    }

  }
  // repeated .NFMsg.RecordInt record_int_list = 2;
  total_size += 1 * this->record_int_list_size();
  for (int i = 0; i < this->record_int_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_int_list(i));
  }

  // repeated .NFMsg.RecordFloat record_float_list = 3;
  total_size += 1 * this->record_float_list_size();
  for (int i = 0; i < this->record_float_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_float_list(i));
  }

  // repeated .NFMsg.RecordString record_string_list = 4;
  total_size += 1 * this->record_string_list_size();
  for (int i = 0; i < this->record_string_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_string_list(i));
  }

  // repeated .NFMsg.RecordObject record_object_list = 5;
  total_size += 1 * this->record_object_list_size();
  for (int i = 0; i < this->record_object_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_object_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordBaseEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectRecordBaseEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectRecordBaseEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectRecordBaseEx::MergeFrom(const ObjectRecordBaseEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_int_list_.MergeFrom(from.record_int_list_);
  record_float_list_.MergeFrom(from.record_float_list_);
  record_string_list_.MergeFrom(from.record_string_list_);
  record_object_list_.MergeFrom(from.record_object_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectRecordBaseEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordBaseEx::CopyFrom(const ObjectRecordBaseEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordBaseEx::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < record_int_list_size(); i++) {
    if (!this->record_int_list(i).IsInitialized()) return false;
  }
  for (int i = 0; i < record_float_list_size(); i++) {
    if (!this->record_float_list(i).IsInitialized()) return false;
  }
  for (int i = 0; i < record_string_list_size(); i++) {
    if (!this->record_string_list(i).IsInitialized()) return false;
  }
  for (int i = 0; i < record_object_list_size(); i++) {
    if (!this->record_object_list(i).IsInitialized()) return false;
  }
  return true;
}

void ObjectRecordBaseEx::Swap(ObjectRecordBaseEx* other) {
  if (other != this) {
    std::swap(record_id_, other->record_id_);
    record_int_list_.Swap(&other->record_int_list_);
    record_float_list_.Swap(&other->record_float_list_);
    record_string_list_.Swap(&other->record_string_list_);
    record_object_list_.Swap(&other->record_object_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectRecordBaseEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordBaseEx_descriptor_;
  metadata.reflection = ObjectRecordBaseEx_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectRecordListEx::kRecordListFieldNumber;
#endif  // !_MSC_VER

ObjectRecordListEx::ObjectRecordListEx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectRecordListEx::InitAsDefaultInstance() {
}

ObjectRecordListEx::ObjectRecordListEx(const ObjectRecordListEx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectRecordListEx::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordListEx::~ObjectRecordListEx() {
  SharedDtor();
}

void ObjectRecordListEx::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObjectRecordListEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordListEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordListEx_descriptor_;
}

const ObjectRecordListEx& ObjectRecordListEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NFMsgBaseEx_2eproto();
  return *default_instance_;
}

ObjectRecordListEx* ObjectRecordListEx::default_instance_ = NULL;

ObjectRecordListEx* ObjectRecordListEx::New() const {
  return new ObjectRecordListEx;
}

void ObjectRecordListEx::Clear() {
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectRecordListEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFMsg.ObjectRecordBaseEx record_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_record_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectRecordListEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .NFMsg.ObjectRecordBaseEx record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectRecordListEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .NFMsg.ObjectRecordBaseEx record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->record_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectRecordListEx::ByteSize() const {
  int total_size = 0;

  // repeated .NFMsg.ObjectRecordBaseEx record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordListEx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectRecordListEx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectRecordListEx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectRecordListEx::MergeFrom(const ObjectRecordListEx& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_list_.MergeFrom(from.record_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectRecordListEx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordListEx::CopyFrom(const ObjectRecordListEx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordListEx::IsInitialized() const {

  for (int i = 0; i < record_list_size(); i++) {
    if (!this->record_list(i).IsInitialized()) return false;
  }
  return true;
}

void ObjectRecordListEx::Swap(ObjectRecordListEx* other) {
  if (other != this) {
    record_list_.Swap(&other->record_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectRecordListEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordListEx_descriptor_;
  metadata.reflection = ObjectRecordListEx_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)
