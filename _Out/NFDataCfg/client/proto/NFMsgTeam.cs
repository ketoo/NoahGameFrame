// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NFMsgTeam.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NFMsg {

  /// <summary>Holder for reflection information generated from NFMsgTeam.proto</summary>
  public static partial class NFMsgTeamReflection {

    #region Descriptor
    /// <summary>File descriptor for NFMsgTeam.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NFMsgTeamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9ORk1zZ1RlYW0ucHJvdG8SBU5GTXNnGg9ORk1zZ0Jhc2UucHJvdG8iZQoO",
            "VGVhbU1lbWJlckluZm8SGAoCaWQYASABKAsyDC5ORk1zZy5JZGVudBIMCgRu",
            "YW1lGAIgASgMEgoKAmJwGAMgASgFEg4KBmxlYWRlchgEIAEoBRIPCgdwZW5k",
            "aW5nGAUgASgFImAKFFJlcUFja1RlYW1NZW1iZXJMaXN0Eh0KB3RlYW1faWQY",
            "ASABKAsyDC5ORk1zZy5JZGVudBIpCgptZW1iZXJMaXN0GAIgAygLMhUuTkZN",
            "c2cuVGVhbU1lbWJlckluZm8iWAoQQWNrVGVhbU1lbWJlckFkZBIdCgd0ZWFt",
            "X2lkGAEgASgLMgwuTkZNc2cuSWRlbnQSJQoGbWVtYmVyGAIgAygLMhUuTkZN",
            "c2cuVGVhbU1lbWJlckluZm8iUQoSQWNrVGVhbU1lbWJlckxlYXZlEh0KB3Rl",
            "YW1faWQYASABKAsyDC5ORk1zZy5JZGVudBIcCgZtZW1iZXIYAiADKAsyDC5O",
            "Rk1zZy5JZGVudCIxCg9SZXFJbnZpdGVUb1RlYW0SHgoIc3RyYW5nZXIYASAB",
            "KAsyDC5ORk1zZy5JZGVudCI3ChVSZXFDYW5jZWxJbnZpdGVUb1RlYW0SHgoI",
            "c3RyYW5nZXIYASABKAsyDC5ORk1zZy5JZGVudCJ9Cg9BY2tJbnZpdGVUb1Rl",
            "YW0SHQoHdGVhbV9pZBgBIAEoCzIMLk5GTXNnLklkZW50Eh0KB2ludml0ZXIY",
            "AiABKAsyDC5ORk1zZy5JZGVudBIMCgRuYW1lGAMgASgMEh4KCHN0cmFuZ2Vy",
            "GAQgASgLMgwuTkZNc2cuSWRlbnQiNwoWUmVxQWNrQWNjZXB0VGVhbUludml0",
            "ZRIdCgd0ZWFtX2lkGAEgASgLMgwuTkZNc2cuSWRlbnQiNwoWUmVxQWNrUmVq",
            "ZWN0VGVhbUludml0ZRIdCgd0ZWFtX2lkGAEgASgLMgwuTkZNc2cuSWRlbnRi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NFMsg.NFMsgBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.TeamMemberInfo), global::NFMsg.TeamMemberInfo.Parser, new[]{ "id", "name", "bp", "leader", "pending" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.ReqAckTeamMemberList), global::NFMsg.ReqAckTeamMemberList.Parser, new[]{ "team_id", "memberList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.AckTeamMemberAdd), global::NFMsg.AckTeamMemberAdd.Parser, new[]{ "team_id", "member" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.AckTeamMemberLeave), global::NFMsg.AckTeamMemberLeave.Parser, new[]{ "team_id", "member" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.ReqInviteToTeam), global::NFMsg.ReqInviteToTeam.Parser, new[]{ "stranger" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.ReqCancelInviteToTeam), global::NFMsg.ReqCancelInviteToTeam.Parser, new[]{ "stranger" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.AckInviteToTeam), global::NFMsg.AckInviteToTeam.Parser, new[]{ "team_id", "inviter", "name", "stranger" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.ReqAckAcceptTeamInvite), global::NFMsg.ReqAckAcceptTeamInvite.Parser, new[]{ "team_id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NFMsg.ReqAckRejectTeamInvite), global::NFMsg.ReqAckRejectTeamInvite.Parser, new[]{ "team_id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TeamMemberInfo : pb::IMessage<TeamMemberInfo> {
    private static readonly pb::MessageParser<TeamMemberInfo> _parser = new pb::MessageParser<TeamMemberInfo>(() => new TeamMemberInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamMemberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamMemberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamMemberInfo(TeamMemberInfo other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      name_ = other.name_;
      bp_ = other.bp_;
      leader_ = other.leader_;
      pending_ = other.pending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamMemberInfo Clone() {
      return new TeamMemberInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int idFieldNumber = 1;
    private global::NFMsg.Ident id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int nameFieldNumber = 2;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bp" field.</summary>
    public const int bpFieldNumber = 3;
    private int bp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int bp {
      get { return bp_; }
      set {
        bp_ = value;
      }
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int leaderFieldNumber = 4;
    private int leader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    /// <summary>Field number for the "pending" field.</summary>
    public const int pendingFieldNumber = 5;
    private int pending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int pending {
      get { return pending_; }
      set {
        pending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamMemberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamMemberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(id, other.id)) return false;
      if (name != other.name) return false;
      if (bp != other.bp) return false;
      if (leader != other.leader) return false;
      if (pending != other.pending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= id.GetHashCode();
      if (name.Length != 0) hash ^= name.GetHashCode();
      if (bp != 0) hash ^= bp.GetHashCode();
      if (leader != 0) hash ^= leader.GetHashCode();
      if (pending != 0) hash ^= pending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(id);
      }
      if (name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(name);
      }
      if (bp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(bp);
      }
      if (leader != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(leader);
      }
      if (pending != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(pending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(id);
      }
      if (name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(name);
      }
      if (bp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(bp);
      }
      if (leader != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(leader);
      }
      if (pending != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(pending);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamMemberInfo other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::NFMsg.Ident();
        }
        id.MergeFrom(other.id);
      }
      if (other.name.Length != 0) {
        name = other.name;
      }
      if (other.bp != 0) {
        bp = other.bp;
      }
      if (other.leader != 0) {
        leader = other.leader;
      }
      if (other.pending != 0) {
        pending = other.pending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            name = input.ReadBytes();
            break;
          }
          case 24: {
            bp = input.ReadInt32();
            break;
          }
          case 32: {
            leader = input.ReadInt32();
            break;
          }
          case 40: {
            pending = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReqAckTeamMemberList : pb::IMessage<ReqAckTeamMemberList> {
    private static readonly pb::MessageParser<ReqAckTeamMemberList> _parser = new pb::MessageParser<ReqAckTeamMemberList>(() => new ReqAckTeamMemberList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqAckTeamMemberList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckTeamMemberList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckTeamMemberList(ReqAckTeamMemberList other) : this() {
      teamId_ = other.teamId_ != null ? other.teamId_.Clone() : null;
      memberList_ = other.memberList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckTeamMemberList Clone() {
      return new ReqAckTeamMemberList(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int team_idFieldNumber = 1;
    private global::NFMsg.Ident teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident team_id {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "memberList" field.</summary>
    public const int memberListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NFMsg.TeamMemberInfo> _repeated_memberList_codec
        = pb::FieldCodec.ForMessage(18, global::NFMsg.TeamMemberInfo.Parser);
    private readonly pbc::RepeatedField<global::NFMsg.TeamMemberInfo> memberList_ = new pbc::RepeatedField<global::NFMsg.TeamMemberInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NFMsg.TeamMemberInfo> memberList {
      get { return memberList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqAckTeamMemberList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqAckTeamMemberList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(team_id, other.team_id)) return false;
      if(!memberList_.Equals(other.memberList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teamId_ != null) hash ^= team_id.GetHashCode();
      hash ^= memberList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(team_id);
      }
      memberList_.WriteTo(output, _repeated_memberList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(team_id);
      }
      size += memberList_.CalculateSize(_repeated_memberList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqAckTeamMemberList other) {
      if (other == null) {
        return;
      }
      if (other.teamId_ != null) {
        if (teamId_ == null) {
          teamId_ = new global::NFMsg.Ident();
        }
        team_id.MergeFrom(other.team_id);
      }
      memberList_.Add(other.memberList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teamId_ == null) {
              teamId_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(teamId_);
            break;
          }
          case 18: {
            memberList_.AddEntriesFrom(input, _repeated_memberList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AckTeamMemberAdd : pb::IMessage<AckTeamMemberAdd> {
    private static readonly pb::MessageParser<AckTeamMemberAdd> _parser = new pb::MessageParser<AckTeamMemberAdd>(() => new AckTeamMemberAdd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckTeamMemberAdd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckTeamMemberAdd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckTeamMemberAdd(AckTeamMemberAdd other) : this() {
      teamId_ = other.teamId_ != null ? other.teamId_.Clone() : null;
      member_ = other.member_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckTeamMemberAdd Clone() {
      return new AckTeamMemberAdd(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int team_idFieldNumber = 1;
    private global::NFMsg.Ident teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident team_id {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int memberFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NFMsg.TeamMemberInfo> _repeated_member_codec
        = pb::FieldCodec.ForMessage(18, global::NFMsg.TeamMemberInfo.Parser);
    private readonly pbc::RepeatedField<global::NFMsg.TeamMemberInfo> member_ = new pbc::RepeatedField<global::NFMsg.TeamMemberInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NFMsg.TeamMemberInfo> member {
      get { return member_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckTeamMemberAdd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckTeamMemberAdd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(team_id, other.team_id)) return false;
      if(!member_.Equals(other.member_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teamId_ != null) hash ^= team_id.GetHashCode();
      hash ^= member_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(team_id);
      }
      member_.WriteTo(output, _repeated_member_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(team_id);
      }
      size += member_.CalculateSize(_repeated_member_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckTeamMemberAdd other) {
      if (other == null) {
        return;
      }
      if (other.teamId_ != null) {
        if (teamId_ == null) {
          teamId_ = new global::NFMsg.Ident();
        }
        team_id.MergeFrom(other.team_id);
      }
      member_.Add(other.member_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teamId_ == null) {
              teamId_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(teamId_);
            break;
          }
          case 18: {
            member_.AddEntriesFrom(input, _repeated_member_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AckTeamMemberLeave : pb::IMessage<AckTeamMemberLeave> {
    private static readonly pb::MessageParser<AckTeamMemberLeave> _parser = new pb::MessageParser<AckTeamMemberLeave>(() => new AckTeamMemberLeave());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckTeamMemberLeave> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckTeamMemberLeave() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckTeamMemberLeave(AckTeamMemberLeave other) : this() {
      teamId_ = other.teamId_ != null ? other.teamId_.Clone() : null;
      member_ = other.member_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckTeamMemberLeave Clone() {
      return new AckTeamMemberLeave(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int team_idFieldNumber = 1;
    private global::NFMsg.Ident teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident team_id {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int memberFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NFMsg.Ident> _repeated_member_codec
        = pb::FieldCodec.ForMessage(18, global::NFMsg.Ident.Parser);
    private readonly pbc::RepeatedField<global::NFMsg.Ident> member_ = new pbc::RepeatedField<global::NFMsg.Ident>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NFMsg.Ident> member {
      get { return member_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckTeamMemberLeave);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckTeamMemberLeave other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(team_id, other.team_id)) return false;
      if(!member_.Equals(other.member_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teamId_ != null) hash ^= team_id.GetHashCode();
      hash ^= member_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(team_id);
      }
      member_.WriteTo(output, _repeated_member_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(team_id);
      }
      size += member_.CalculateSize(_repeated_member_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckTeamMemberLeave other) {
      if (other == null) {
        return;
      }
      if (other.teamId_ != null) {
        if (teamId_ == null) {
          teamId_ = new global::NFMsg.Ident();
        }
        team_id.MergeFrom(other.team_id);
      }
      member_.Add(other.member_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teamId_ == null) {
              teamId_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(teamId_);
            break;
          }
          case 18: {
            member_.AddEntriesFrom(input, _repeated_member_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReqInviteToTeam : pb::IMessage<ReqInviteToTeam> {
    private static readonly pb::MessageParser<ReqInviteToTeam> _parser = new pb::MessageParser<ReqInviteToTeam>(() => new ReqInviteToTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqInviteToTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqInviteToTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqInviteToTeam(ReqInviteToTeam other) : this() {
      stranger_ = other.stranger_ != null ? other.stranger_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqInviteToTeam Clone() {
      return new ReqInviteToTeam(this);
    }

    /// <summary>Field number for the "stranger" field.</summary>
    public const int strangerFieldNumber = 1;
    private global::NFMsg.Ident stranger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident stranger {
      get { return stranger_; }
      set {
        stranger_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqInviteToTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqInviteToTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(stranger, other.stranger)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stranger_ != null) hash ^= stranger.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stranger_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(stranger);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stranger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(stranger);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqInviteToTeam other) {
      if (other == null) {
        return;
      }
      if (other.stranger_ != null) {
        if (stranger_ == null) {
          stranger_ = new global::NFMsg.Ident();
        }
        stranger.MergeFrom(other.stranger);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stranger_ == null) {
              stranger_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(stranger_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReqCancelInviteToTeam : pb::IMessage<ReqCancelInviteToTeam> {
    private static readonly pb::MessageParser<ReqCancelInviteToTeam> _parser = new pb::MessageParser<ReqCancelInviteToTeam>(() => new ReqCancelInviteToTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqCancelInviteToTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCancelInviteToTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCancelInviteToTeam(ReqCancelInviteToTeam other) : this() {
      stranger_ = other.stranger_ != null ? other.stranger_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCancelInviteToTeam Clone() {
      return new ReqCancelInviteToTeam(this);
    }

    /// <summary>Field number for the "stranger" field.</summary>
    public const int strangerFieldNumber = 1;
    private global::NFMsg.Ident stranger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident stranger {
      get { return stranger_; }
      set {
        stranger_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqCancelInviteToTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqCancelInviteToTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(stranger, other.stranger)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stranger_ != null) hash ^= stranger.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stranger_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(stranger);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stranger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(stranger);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqCancelInviteToTeam other) {
      if (other == null) {
        return;
      }
      if (other.stranger_ != null) {
        if (stranger_ == null) {
          stranger_ = new global::NFMsg.Ident();
        }
        stranger.MergeFrom(other.stranger);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stranger_ == null) {
              stranger_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(stranger_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AckInviteToTeam : pb::IMessage<AckInviteToTeam> {
    private static readonly pb::MessageParser<AckInviteToTeam> _parser = new pb::MessageParser<AckInviteToTeam>(() => new AckInviteToTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckInviteToTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckInviteToTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckInviteToTeam(AckInviteToTeam other) : this() {
      teamId_ = other.teamId_ != null ? other.teamId_.Clone() : null;
      inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
      name_ = other.name_;
      stranger_ = other.stranger_ != null ? other.stranger_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckInviteToTeam Clone() {
      return new AckInviteToTeam(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int team_idFieldNumber = 1;
    private global::NFMsg.Ident teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident team_id {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "inviter" field.</summary>
    public const int inviterFieldNumber = 2;
    private global::NFMsg.Ident inviter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident inviter {
      get { return inviter_; }
      set {
        inviter_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int nameFieldNumber = 3;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stranger" field.</summary>
    public const int strangerFieldNumber = 4;
    private global::NFMsg.Ident stranger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident stranger {
      get { return stranger_; }
      set {
        stranger_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckInviteToTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckInviteToTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(team_id, other.team_id)) return false;
      if (!object.Equals(inviter, other.inviter)) return false;
      if (name != other.name) return false;
      if (!object.Equals(stranger, other.stranger)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teamId_ != null) hash ^= team_id.GetHashCode();
      if (inviter_ != null) hash ^= inviter.GetHashCode();
      if (name.Length != 0) hash ^= name.GetHashCode();
      if (stranger_ != null) hash ^= stranger.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(team_id);
      }
      if (inviter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(inviter);
      }
      if (name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(name);
      }
      if (stranger_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(stranger);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(team_id);
      }
      if (inviter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(inviter);
      }
      if (name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(name);
      }
      if (stranger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(stranger);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckInviteToTeam other) {
      if (other == null) {
        return;
      }
      if (other.teamId_ != null) {
        if (teamId_ == null) {
          teamId_ = new global::NFMsg.Ident();
        }
        team_id.MergeFrom(other.team_id);
      }
      if (other.inviter_ != null) {
        if (inviter_ == null) {
          inviter_ = new global::NFMsg.Ident();
        }
        inviter.MergeFrom(other.inviter);
      }
      if (other.name.Length != 0) {
        name = other.name;
      }
      if (other.stranger_ != null) {
        if (stranger_ == null) {
          stranger_ = new global::NFMsg.Ident();
        }
        stranger.MergeFrom(other.stranger);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teamId_ == null) {
              teamId_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(teamId_);
            break;
          }
          case 18: {
            if (inviter_ == null) {
              inviter_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(inviter_);
            break;
          }
          case 26: {
            name = input.ReadBytes();
            break;
          }
          case 34: {
            if (stranger_ == null) {
              stranger_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(stranger_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReqAckAcceptTeamInvite : pb::IMessage<ReqAckAcceptTeamInvite> {
    private static readonly pb::MessageParser<ReqAckAcceptTeamInvite> _parser = new pb::MessageParser<ReqAckAcceptTeamInvite>(() => new ReqAckAcceptTeamInvite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqAckAcceptTeamInvite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckAcceptTeamInvite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckAcceptTeamInvite(ReqAckAcceptTeamInvite other) : this() {
      teamId_ = other.teamId_ != null ? other.teamId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckAcceptTeamInvite Clone() {
      return new ReqAckAcceptTeamInvite(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int team_idFieldNumber = 1;
    private global::NFMsg.Ident teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident team_id {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqAckAcceptTeamInvite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqAckAcceptTeamInvite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(team_id, other.team_id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teamId_ != null) hash ^= team_id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(team_id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(team_id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqAckAcceptTeamInvite other) {
      if (other == null) {
        return;
      }
      if (other.teamId_ != null) {
        if (teamId_ == null) {
          teamId_ = new global::NFMsg.Ident();
        }
        team_id.MergeFrom(other.team_id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teamId_ == null) {
              teamId_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(teamId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReqAckRejectTeamInvite : pb::IMessage<ReqAckRejectTeamInvite> {
    private static readonly pb::MessageParser<ReqAckRejectTeamInvite> _parser = new pb::MessageParser<ReqAckRejectTeamInvite>(() => new ReqAckRejectTeamInvite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqAckRejectTeamInvite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NFMsg.NFMsgTeamReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckRejectTeamInvite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckRejectTeamInvite(ReqAckRejectTeamInvite other) : this() {
      teamId_ = other.teamId_ != null ? other.teamId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAckRejectTeamInvite Clone() {
      return new ReqAckRejectTeamInvite(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int team_idFieldNumber = 1;
    private global::NFMsg.Ident teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NFMsg.Ident team_id {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqAckRejectTeamInvite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqAckRejectTeamInvite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(team_id, other.team_id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teamId_ != null) hash ^= team_id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(team_id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(team_id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqAckRejectTeamInvite other) {
      if (other == null) {
        return;
      }
      if (other.teamId_ != null) {
        if (teamId_ == null) {
          teamId_ = new global::NFMsg.Ident();
        }
        team_id.MergeFrom(other.team_id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teamId_ == null) {
              teamId_ = new global::NFMsg.Ident();
            }
            input.ReadMessage(teamId_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
